apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: supplychain-orderer1
  namespace: supplychain-net
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: supplychain-orderer1
  chart:
    git: ssh://git@github.com/adityajoshi12/bevel.git
    ref: test
    path: platforms/hyperledger-fabric/charts/orderernode
  values:
    metadata:
      namespace: supplychain-net
      images:
        orderer: hyperledger/fabric-orderer:2.2.2
        alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
    annotations:  
      service:
      pvc:
      deployment:
    orderer:
      name: orderer1
      loglevel: info
      localmspid: supplychainMSP
      tlsstatus: true
      keepaliveserverinterval: 10s
    
    consensus:
      name: raft

    storage:
      storageclassname: supplychainsc
      storagesize: 512Mi  

    service:
      servicetype: ClusterIP
      ports:
        grpc:
          clusteripport: 7050

    vault:
      address: http://40.80.95.60:8200
      role: vault-role
      authpath: devsupplychain-net-auth
      secretprefix: secretv2/data/crypto/ordererOrganizations/supplychain-net/orderers/orderer1.supplychain-net
      imagesecretname: regcred
      serviceaccountname: vault-auth

    proxy:
      provider: none
      external_url_suffix: develop.local.com

    genesis: |-
      CiIaIAoSXFHV6KkIC2pS1sCM14rS/1o92XO1poMwHLDptVvmEppeCpdeCpReCngKWggBEAEaBgiC
      6ISWBiIKc3lzY2hhbm5lbCpANDA2YWNmMDQzYTQ2NjEyM2Y5YjJhN2E1NGRjNmY5ZDhiY2NhZjlk
      YWQ1MDYwZTZiZDI5MTAyYTIxYmUwMTFlMBIaEhh5yyJgKVSE/1ypWx9cZIA8i3ughkNCZoUSl10K
      lF0SkV0SvS8KC0NvbnNvcnRpdW1zEq0vEuIuChVTdXBwbHlDaGFpbkNvbnNvcnRpdW0SyC4SthYK
      CmNhcnJpZXJNU1ASpxYawxQKA01TUBK7FBKwFBKtFAoKY2Fycmllck1TUBLpBS0tLS0tQkVHSU4g
      Q0VSVElGSUNBVEUtLS0tLQpNSUlCK0RDQ0FaNmdBd0lCQWdJVUNIbHl5TFg0V0tkYllSYlZaMmFB
      QUxCS0JVa3dDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdN
      Qmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkRFlYSnlhV1Z5
      TVJjd0ZRWURWUVFEREE1allTNWpZWEp5YVdWeUxXNWxkREFlRncweQpNakEzTURNd05ESTROREph
      RncweU5UQTBNakl3TkRJNE5ESmFNRm94Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlEClZRUUlEQVpN
      YjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFNQTRHQTFVRUNnd0hRMkZ5Y21sbGNqRVgK
      TUJVR0ExVUVBd3dPWTJFdVkyRnljbWxsY2kxdVpYUXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9Q
      UU1CQndOQwpBQVN6OC9qZEVQYzc3bW9uakJ3NFVqZTRSSWp5UFRtUm11YUNsZS9KUG90RHB6eTlD
      Tk8vQjJFZlVXcVV0YkxFCjIvT2RiMTdrTDlpT2RCQmJhZkhUMDVnY28wSXdRREFQQmdOVkhSTUJB
      ZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FVUjBhbUtzaDhw
      OEJKYkE0a3J2S1RjRER4ZjZFd0NnWUlLb1pJemowRQpBd0lEU0FBd1JRSWdYRmhSL0hpMkg3aW1y
      K0ltQ3dQYjRHeEdSV1RzRHBNSDJoZWtxam9vNkdFQ0lRQ2JLOGNFCkVWMGxXNitXOGRSbVNSSXV2
      aTZ6OTk3bWVSdDdwN2d6NDJEQUV3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoitggtLS0t
      LUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzdqQ0NBcFNnQXdJQkFnSVVUaU5CK3R4RmFQeXl6
      bzA2Q0RkMEMyMnpJc0l3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5C
      Z05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZERZ
      WEp5YVdWeU1SY3dGUVlEVlFRRERBNWpZUzVqWVhKeWFXVnlMVzVsZERBZUZ3MHkKTWpBM01ETXdO
      RFF4TURCYUZ3MHlNekEzTURNd05EUTJNREJhTUhneEN6QUpCZ05WQkFZVEFrZENNUnN3R1FZRApW
      UVFIRXhJMU1TNDFNQzh0TUM0eE15OU1iMjVrYjI0eEVEQU9CZ05WQkFvVEIwTmhjbkpwWlhJeEhq
      QU1CZ05WCkJBc1RCV0ZrYldsdU1BNEdBMVVFQ3hNSFkyRnljbWxsY2pFYU1CZ0dBMVVFQXd3UlFX
      UnRhVzVBWTJGeWNtbGwKY2kxdVpYUXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FB
      VHhHSWUxMFYrNUVQQUFBTXlhWDdqWAptMjNucXk1MGpCdGtzVWdHQ1Z5Z0RKNlEvOFdiMFZtK3ZT
      dXVNeHZFT29nTGs3ZXJkK2JJbW9xSmRjbTU2R2RDCm80SUJHRENDQVJRd0RnWURWUjBQQVFIL0JB
      UURBZ2VBTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUUKRk9nSUVPcDBXYlBvRWVOaG5F
      Qk1wMFhscWgwVk1COEdBMVVkSXdRWU1CYUFGRWRHcGlySWZLZkFTV3dPSks3eQprM0F3OFgraE1D
      UUdBMVVkRVFRZE1CdUNHV05oTFhSdmIyeHpMVFUxWW1JMk5HSTJOamd0T1RWcWR6WXdnWTBHCkND
      b0RCQVVHQndnQkJJR0FleUpoZEhSeWN5STZleUpoWW1GakxtbHVhWFFpT2lKMGNuVmxJaXdpWVdS
      dGFXNGkKT2lKMGNuVmxJaXdpYUdZdVFXWm1hV3hwWVhScGIyNGlPaUpqWVhKeWFXVnlJaXdpYUdZ
      dVJXNXliMnhzYldWdQpkRWxFSWpvaVFXUnRhVzVBWTJGeWNtbGxjaTF1WlhRaUxDSm9aaTVVZVhC
      bElqb2lZV1J0YVc0aWZYMHdDZ1lJCktvWkl6ajBFQXdJRFNBQXdSUUloQUxUTU5BUEpKWUYzdG81
      VVFLVVUyMHlmejVIcG40UFpncHV1UlVOd25zMG8KQWlCbFlnSXM4WElhWUI4aGU5UGk4VDZseUI5
      cmd3Zk9obG9ZUFVJeVlKK2dIdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KQg4KBFNIQTIS
      BlNIQTI1NkrpBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK0RDQ0FaNmdBd0lCQWdJ
      VUNIbHl5TFg0V0tkYllSYlZaMmFBQUxCS0JVa3dDZ1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFV
      RUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJB
      d0RnWURWUVFLREFkRFlYSnlhV1Z5TVJjd0ZRWURWUVFEREE1allTNWpZWEp5YVdWeUxXNWxkREFl
      RncweQpNakEzTURNd05ESTROREphRncweU5UQTBNakl3TkRJNE5ESmFNRm94Q3pBSkJnTlZCQVlU
      QWtkQ01ROHdEUVlEClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2Ym1SdmJqRVFNQTRH
      QTFVRUNnd0hRMkZ5Y21sbGNqRVgKTUJVR0ExVUVBd3dPWTJFdVkyRnljbWxsY2kxdVpYUXdXVEFU
      QmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQwpBQVN6OC9qZEVQYzc3bW9uakJ3NFVqZTRSSWp5
      UFRtUm11YUNsZS9KUG90RHB6eTlDTk8vQjJFZlVXcVV0YkxFCjIvT2RiMTdrTDlpT2RCQmJhZkhU
      MDVnY28wSXdRREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIKL3dRRUF3SUJwakFk
      QmdOVkhRNEVGZ1FVUjBhbUtzaDhwOEJKYkE0a3J2S1RjRER4ZjZFd0NnWUlLb1pJemowRQpBd0lE
      U0FBd1JRSWdYRmhSL0hpMkg3aW1yK0ltQ3dQYjRHeEdSV1RzRHBNSDJoZWtxam9vNkdFQ0lRQ2JL
      OGNFCkVWMGxXNitXOGRSbVNSSXV2aTZ6OTk3bWVSdDdwN2d6NDJEQUV3PT0KLS0tLS1FTkQgQ0VS
      VElGSUNBVEUtLS0tLQoaBkFkbWlucyIzCgdXcml0ZXJzEigSHggBEhoSCBIGCAESAggAGg4SDAoK
      Y2Fycmllck1TUBoGQWRtaW5zIjQKBkFkbWlucxIqEiAIARIcEggSBggBEgIIABoQEg4KCmNhcnJp
      ZXJNU1AQARoGQWRtaW5zIjcKC0VuZG9yc2VtZW50EigSHggBEhoSCBIGCAESAggAGg4SDAoKY2Fy
      cmllck1TUBoGQWRtaW5zIjMKB1JlYWRlcnMSKBIeCAESGhIIEgYIARICCAAaDhIMCgpjYXJyaWVy
      TVNQGgZBZG1pbnMqBkFkbWlucxKxFwoPbWFudWZhY3R1cmVyTVNQEp0XGqUVCgNNU1ASnRUSkhUS
      jxUKD21hbnVmYWN0dXJlck1TUBKBBi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDQ3pD
      Q0FiS2dBd0lCQWdJVU9OOXNqZlJwdy9OVjJDdSsyN213dGpSUTBmOHdDZ1lJS29aSXpqMEVBd0l3
      ClpERUxNQWtHQTFVRUJoTUNRMGd4RHpBTkJnTlZCQWdNQmxwMWNtbGphREVQTUEwR0ExVUVCd3dH
      V25WeWFXTm8KTVJVd0V3WURWUVFLREF4TllXNTFabUZqZEhWeVpYSXhIREFhQmdOVkJBTU1FMk5o
      TG0xaGJuVm1ZV04wZFhKbApjaTF1WlhRd0hoY05Nakl3TnpBek1EUXlOak01V2hjTk1qVXdOREl5
      TURReU5qTTVXakJrTVFzd0NRWURWUVFHCkV3SkRTREVQTUEwR0ExVUVDQXdHV25WeWFXTm9NUTh3
      RFFZRFZRUUhEQVphZFhKcFkyZ3hGVEFUQmdOVkJBb00KREUxaGJuVm1ZV04wZFhKbGNqRWNNQm9H
      QTFVRUF3d1RZMkV1YldGdWRXWmhZM1IxY21WeUxXNWxkREJaTUJNRwpCeXFHU000OUFnRUdDQ3FH
      U000OUF3RUhBMElBQk9yREVwWEI3bVA2eTFEK0RiVVZMTXNPWHBDTTRCNndzamExCkVEakZrU3NH
      Y2tOaHlpSzhmNUVOcmRXSGU0elhqcm9TYVVIaklmOGxDbGo0eTJsRW5nK2pRakJBTUE4R0ExVWQK
      RXdFQi93UUZNQU1CQWY4d0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWREZ1FXQkJSNy9lUlNj
      bURJOUFOcwpuVUZGT1NrT2s1RWlmVEFLQmdncWhrak9QUVFEQWdOSEFEQkVBaUJJQkllb3czSng0
      cnlxN0dhMGc4VDI5WFB0CnBVTHA2eHgxOXo3NW4xQk9QUUlnZTNFNGdkVUxudG12ZkV1a25yazQy
      dVlGNGZ1Rjd4eVBxWVNUbHBvTzkzaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoi4wgtLS0t
      LUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJREVUQ0NBcmVnQXdJQkFnSVVBUG5teVZPcG9yMlpG
      YUY4ZU04cWJnT0E2bGt3Q2dZSUtvWkl6ajBFQXdJdwpaREVMTUFrR0ExVUVCaE1DUTBneER6QU5C
      Z05WQkFnTUJscDFjbWxqYURFUE1BMEdBMVVFQnd3R1duVnlhV05vCk1SVXdFd1lEVlFRS0RBeE5Z
      VzUxWm1GamRIVnlaWEl4SERBYUJnTlZCQU1NRTJOaExtMWhiblZtWVdOMGRYSmwKY2kxdVpYUXdI
      aGNOTWpJd056QXpNRFF6TkRBd1doY05Nak13TnpBek1EUXpPVEF3V2pDQmhqRUxNQWtHQTFVRQpC
      aE1DUTBneEdqQVlCZ05WQkFjVEVUUTNMak00THpndU5UUXZXblZ5YVdOb01SVXdFd1lEVlFRS0V3
      eE5ZVzUxClptRmpkSFZ5WlhJeEl6QU1CZ05WQkFzVEJXRmtiV2x1TUJNR0ExVUVDeE1NYldGdWRX
      WmhZM1IxY21WeU1SOHcKSFFZRFZRUUREQlpCWkcxcGJrQnRZVzUxWm1GamRIVnlaWEl0Ym1WME1G
      a3dFd1lIS29aSXpqMENBUVlJS29aSQp6ajBEQVFjRFFnQUUzalpvNlNMeC9SZnVCd2NkSWFFVWM3
      N241eWdXR3NKZEJndWRzNXEwV3Q0VFI2UjZTcld6CmxlYjFwSm1MeFBZTm1UNytBUDFBZGJKcjJ0
      U2I0Nnk5ektPQ0FTSXdnZ0VlTUE0R0ExVWREd0VCL3dRRUF3SUgKZ0RBTUJnTlZIUk1CQWY4RUFq
      QUFNQjBHQTFVZERnUVdCQlRmRldXQmFLUXBpZW1Tc0ZJbHNQbmp4VmVhQ1RBZgpCZ05WSFNNRUdE
      QVdnQlI3L2VSU2NtREk5QU5zblVGRk9Ta09rNUVpZlRBa0JnTlZIUkVFSFRBYmdobGpZUzEwCmIy
      OXNjeTAxWWpaalltWTNaRGs1TFdKemNIRjBNSUdYQmdncUF3UUZCZ2NJQVFTQmluc2lZWFIwY25N
      aU9uc2kKWVdKaFl5NXBibWwwSWpvaWRISjFaU0lzSW1Ga2JXbHVJam9pZEhKMVpTSXNJbWhtTGtG
      bVptbHNhV0YwYVc5dQpJam9pYldGdWRXWmhZM1IxY21WeUlpd2lhR1l1Ulc1eWIyeHNiV1Z1ZEVs
      RUlqb2lRV1J0YVc1QWJXRnVkV1poClkzUjFjbVZ5TFc1bGRDSXNJbWhtTGxSNWNHVWlPaUpoWkcx
      cGJpSjlmVEFLQmdncWhrak9QUVFEQWdOSUFEQkYKQWlFQTJpWmI5U1FOOC9ha3kwUXJIcVppNFE0
      Vk1jQS9VS29sbmZOdzdvN212LzhDSUN0SElYeHdLSnd6M2RHZQpkbkNZWk51ZlFJRU9BNzI2WFVO
      VjB0bGNad0NICi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KQg4KBFNIQTISBlNIQTI1NkqBBi0t
      LS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDQ3pDQ0FiS2dBd0lCQWdJVU9OOXNqZlJwdy9O
      VjJDdSsyN213dGpSUTBmOHdDZ1lJS29aSXpqMEVBd0l3ClpERUxNQWtHQTFVRUJoTUNRMGd4RHpB
      TkJnTlZCQWdNQmxwMWNtbGphREVQTUEwR0ExVUVCd3dHV25WeWFXTm8KTVJVd0V3WURWUVFLREF4
      TllXNTFabUZqZEhWeVpYSXhIREFhQmdOVkJBTU1FMk5oTG0xaGJuVm1ZV04wZFhKbApjaTF1WlhR
      d0hoY05Nakl3TnpBek1EUXlOak01V2hjTk1qVXdOREl5TURReU5qTTVXakJrTVFzd0NRWURWUVFH
      CkV3SkRTREVQTUEwR0ExVUVDQXdHV25WeWFXTm9NUTh3RFFZRFZRUUhEQVphZFhKcFkyZ3hGVEFU
      QmdOVkJBb00KREUxaGJuVm1ZV04wZFhKbGNqRWNNQm9HQTFVRUF3d1RZMkV1YldGdWRXWmhZM1Ix
      Y21WeUxXNWxkREJaTUJNRwpCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQk9yREVwWEI3bVA2
      eTFEK0RiVVZMTXNPWHBDTTRCNndzamExCkVEakZrU3NHY2tOaHlpSzhmNUVOcmRXSGU0elhqcm9T
      YVVIaklmOGxDbGo0eTJsRW5nK2pRakJBTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0RnWURWUjBQ
      QVFIL0JBUURBZ0dtTUIwR0ExVWREZ1FXQkJSNy9lUlNjbURJOUFOcwpuVUZGT1NrT2s1RWlmVEFL
      QmdncWhrak9QUVFEQWdOSEFEQkVBaUJJQkllb3czSng0cnlxN0dhMGc4VDI5WFB0CnBVTHA2eHgx
      OXo3NW4xQk9QUUlnZTNFNGdkVUxudG12ZkV1a25yazQydVlGNGZ1Rjd4eVBxWVNUbHBvTzkzaz0K
      LS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoaBkFkbWlucyI5CgZBZG1pbnMSLxIlCAESIRIIEgYI
      ARICCAAaFRITCg9tYW51ZmFjdHVyZXJNU1AQARoGQWRtaW5zIjwKC0VuZG9yc2VtZW50Ei0SIwgB
      Eh8SCBIGCAESAggAGhMSEQoPbWFudWZhY3R1cmVyTVNQGgZBZG1pbnMiOAoHUmVhZGVycxItEiMI
      ARIfEggSBggBEgIIABoTEhEKD21hbnVmYWN0dXJlck1TUBoGQWRtaW5zIjgKB1dyaXRlcnMSLRIj
      CAESHxIIEgYIARICCAAaExIRCg9tYW51ZmFjdHVyZXJNU1AaBkFkbWlucyoGQWRtaW5zGkAKFUNo
      YW5uZWxDcmVhdGlvblBvbGljeRInEgwIAxIICgZBZG1pbnMaFy9DaGFubmVsL09yZGVyZXIvQWRt
      aW5zKhcvQ2hhbm5lbC9PcmRlcmVyL0FkbWlucyItCgZBZG1pbnMSIxIICAESBBICEgAaFy9DaGFu
      bmVsL09yZGVyZXIvQWRtaW5zKhcvQ2hhbm5lbC9PcmRlcmVyL0FkbWlucxKNKwoHT3JkZXJlchKB
      KxLOFgoOc3VwcGx5Y2hhaW5NU1ASuxYaxxQKA01TUBK/FBK0FBKxFAoOc3VwcGx5Y2hhaW5NU1AS
      8QUtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQ0FEQ0NBYWFnQXdJQkFnSVVKQjNITUsz
      MkZTWTRvUVkvQzJFdXZ3bkxlcDh3Q2dZSUtvWkl6ajBFQXdJdwpYakVMTUFrR0ExVUVCaE1DUjBJ
      eER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFR
      S0RBZFBjbVJsY21WeU1Sc3dHUVlEVlFRRERCSmpZUzV6ZFhCd2JIbGphR0ZwYmkxdVpYUXcKSGhj
      Tk1qSXdOekF6TURReU5ETTNXaGNOTWpVd05ESXlNRFF5TkRNM1dqQmVNUXN3Q1FZRFZRUUdFd0pI
      UWpFUApNQTBHQTFVRUNBd0dURzl1Wkc5dU1ROHdEUVlEVlFRSERBWk1iMjVrYjI0eEVEQU9CZ05W
      QkFvTUIwOXlaR1Z5ClpYSXhHekFaQmdOVkJBTU1FbU5oTG5OMWNIQnNlV05vWVdsdUxXNWxkREJa
      TUJNR0J5cUdTTTQ5QWdFR0NDcUcKU000OUF3RUhBMElBQlBNdTkxMVRzazNOZlNmMFBUVHRNYWtN
      ek5OLzczRmxZRFhWNnhqS3RiTTFTLzlWTHo5WQp1VkZxVHRXR0ZhNkxtbGVVZldTRVRnbTIyTkln
      cEo3ZUlLS2pRakJBTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3CkRnWURWUjBQQVFIL0JBUURBZ0dt
      TUIwR0ExVWREZ1FXQkJRN0szL3g1ZC9PY2svcmM0UVp2NW9GWXlUVWhEQUsKQmdncWhrak9QUVFE
      QWdOSUFEQkZBaUVBN3JXclNkR0VLbmZFYWRaK3Bsa0FaQzQxT3g1S2JWVkczbXVsOGpJegpvUW9D
      SUY0b3pqSWZwanVFSXR2TFQ1MXQ0NWxOMkdSWldoV1R0TVB4RHZldHFXV3oKLS0tLS1FTkQgQ0VS
      VElGSUNBVEUtLS0tLQoipggtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzRqQ0NBb2ln
      QXdJQkFnSVVET3lENTlIdkRrYU5NQkdQU3hhT2tEY3VqcFV3Q2dZSUtvWkl6ajBFQXdJdwpYakVM
      TUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVa
      Rzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1Sc3dHUVlEVlFRRERCSmpZUzV6ZFhCd2JIbGph
      R0ZwYmkxdVpYUXcKSGhjTk1qSXdOekF6TURRek1qQXdXaGNOTWpNd056QXpNRFF6TnpBd1dqQnNN
      UXN3Q1FZRFZRUUdFd0pIUWpFYgpNQmtHQTFVRUJ4TVNOVEV1TlRBdkxUQXVNVE12VEc5dVpHOXVN
      UkF3RGdZRFZRUUtFd2RQY21SbGNtVnlNUTR3CkRBWURWUVFMRXdWaFpHMXBiakVlTUJ3R0ExVUVB
      d3dWUVdSdGFXNUFjM1Z3Y0d4NVkyaGhhVzR0Ym1WME1Ga3cKRXdZSEtvWkl6ajBDQVFZSUtvWkl6
      ajBEQVFjRFFnQUU0MmUxYUYvOFVhbEsxVW9YTkh0V1UraVlEcmh3Zng3ZgpUdnRjUUFXSFVHZVQ3
      NVVuSEpvVHZTT3hQUW9FMEVwR1lWalJYZnFWWmlza012cUtMWVZLcDZPQ0FSUXdnZ0VRCk1BNEdB
      MVVkRHdFQi93UUVBd0lIZ0RBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZERnUVdCQlFUQWJtUUE2
      U1YKZlMxT2pwZVNDUG9jOWR3azZ6QWZCZ05WSFNNRUdEQVdnQlE3SzMveDVkL09jay9yYzRRWnY1
      b0ZZeVRVaERBawpCZ05WSFJFRUhUQWJnaGxqWVMxMGIyOXNjeTAzTlRkbVpqVmlOR1E0TFdwcWJI
      SndNSUdKQmdncUF3UUZCZ2NJCkFRUjlleUpoZEhSeWN5STZleUpoWW1GakxtbHVhWFFpT2lKMGNu
      VmxJaXdpWVdSdGFXNGlPaUowY25WbElpd2kKYUdZdVFXWm1hV3hwWVhScGIyNGlPaUlpTENKb1pp
      NUZibkp2Ykd4dFpXNTBTVVFpT2lKQlpHMXBia0J6ZFhCdwpiSGxqYUdGcGJpMXVaWFFpTENKb1pp
      NVVlWEJsSWpvaVlXUnRhVzRpZlgwd0NnWUlLb1pJemowRUF3SURTQUF3ClJRSWhBTDJSUlBIM0Z4
      TVUraGZSYWd5YVVyV0FMUjQxckViMmxxWVl6MU85dFlhb0FpQjVUQVVGa3V0aWJFczAKWTdTYkpz
      citFZG9mSW9qNVFnWkRjTWpmYXhwUHB3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQpCDgoE
      U0hBMhIGU0hBMjU2SvEFLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNBRENDQWFhZ0F3
      SUJBZ0lVSkIzSE1LMzJGU1k0b1FZL0MyRXV2d25MZXA4d0NnWUlLb1pJemowRUF3SXcKWGpFTE1B
      a0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5
      dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUnN3R1FZRFZRUUREQkpqWVM1emRYQndiSGxqYUdG
      cGJpMXVaWFF3CkhoY05Nakl3TnpBek1EUXlORE0zV2hjTk1qVXdOREl5TURReU5ETTNXakJlTVFz
      d0NRWURWUVFHRXdKSFFqRVAKTUEwR0ExVUVDQXdHVEc5dVpHOXVNUTh3RFFZRFZRUUhEQVpNYjI1
      a2IyNHhFREFPQmdOVkJBb01CMDl5WkdWeQpaWEl4R3pBWkJnTlZCQU1NRW1OaExuTjFjSEJzZVdO
      b1lXbHVMVzVsZERCWk1CTUdCeXFHU000OUFnRUdDQ3FHClNNNDlBd0VIQTBJQUJQTXU5MTFUc2sz
      TmZTZjBQVFR0TWFrTXpOTi83M0ZsWURYVjZ4akt0Yk0xUy85Vkx6OVkKdVZGcVR0V0dGYTZMbWxl
      VWZXU0VUZ20yMk5JZ3BKN2VJS0tqUWpCQU1BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpEZ1lEVlIw
      UEFRSC9CQVFEQWdHbU1CMEdBMVVkRGdRV0JCUTdLMy94NWQvT2NrL3JjNFFadjVvRll5VFVoREFL
      CkJnZ3Foa2pPUFFRREFnTklBREJGQWlFQTdyV3JTZEdFS25mRWFkWitwbGtBWkM0MU94NUtiVlZH
      M211bDhqSXoKb1FvQ0lGNG96aklmcGp1RUl0dkxUNTF0NDVsTjJHUlpXaFdUdE1QeER2ZXRxV1d6
      Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KGgZBZG1pbnMiOAoGQWRtaW5zEi4SJAgBEiASCBIG
      CAESAggAGhQSEgoOc3VwcGx5Y2hhaW5NU1AQARoGQWRtaW5zIjsKC0VuZG9yc2VtZW50EiwSIggB
      Eh4SCBIGCAESAggAGhISEAoOc3VwcGx5Y2hhaW5NU1AaBkFkbWlucyI3CgdSZWFkZXJzEiwSIggB
      Eh4SCBIGCAESAggAGhISEAoOc3VwcGx5Y2hhaW5NU1AaBkFkbWlucyI3CgdXcml0ZXJzEiwSIggB
      Eh4SCBIGCAESAggAGhISEAoOc3VwcGx5Y2hhaW5NU1AaBkFkbWlucyoGQWRtaW5zGiQKDENhcGFi
      aWxpdGllcxIUEgoKCAoEVjJfMBIAGgZBZG1pbnMaghIKDUNvbnNlbnN1c1R5cGUS8BES5REKCGV0
      Y2RyYWZ0EtgRCsERChhvcmRlcmVyMS5zdXBwbHljaGFpbi1uZXQQijcazwgtLS0tLUJFR0lOIENF
      UlRJRklDQVRFLS0tLS0KTUlJREFqQ0NBcW1nQXdJQkFnSVVBU0ZWbk1icTdTa25ITjNSc2p6NXlq
      S0VsaGd3Q2dZSUtvWkl6ajBFQXdJdwpYakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJr
      eHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1S
      c3dHUVlEVlFRRERCSmpZUzV6ZFhCd2JIbGphR0ZwYmkxdVpYUXcKSGhjTk1qSXdOekF6TURRek1q
      QXdXaGNOTWpNd056QXpNRFF6TnpBd1dqQnhNUXN3Q1FZRFZRUUdFd0pIUWpFYgpNQmtHQTFVRUJ4
      TVNOVEV1TlRBdkxUQXVNVE12VEc5dVpHOXVNUkF3RGdZRFZRUUtFd2RQY21SbGNtVnlNUkF3CkRn
      WURWUVFMRXdkdmNtUmxjbVZ5TVNFd0h3WURWUVFERXhodmNtUmxjbVZ5TVM1emRYQndiSGxqYUdG
      cGJpMXUKWlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTOGpQWG53NDAyc1di
      K0x3UGdxamtWVEdiTwowWGVhQXRyLzdWZ2dMRXYzQnJCWk15ZE9lYTZnVFlrT3JJbG95OWpqN1Fj
      UUh5TGFMek85OVVXZjJ1UkJvNElCCk1EQ0NBU3d3RGdZRFZSMFBBUUgvQkFRREFnT29NQjBHQTFV
      ZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUIw
      R0ExVWREZ1FXQkJRUG5ZTUxuTmkwNkJrNFRPY1Fpdko0eHRJeQp1akFmQmdOVkhTTUVHREFXZ0JR
      N0szL3g1ZC9PY2svcmM0UVp2NW9GWXlUVWhEQS9CZ05WSFJFRU9EQTJnaGh2CmNtUmxjbVZ5TVM1
      emRYQndiSGxqYUdGcGJpMXVaWFNDR205eVpHVnlaWEl4TG1SbGRtVnNiM0F1Ykc5allXd3UKWTI5
      dE1Hd0dDQ29EQkFVR0J3Z0JCR0I3SW1GMGRISnpJanA3SW1obUxrRm1abWxzYVdGMGFXOXVJam9p
      SWl3aQphR1l1Ulc1eWIyeHNiV1Z1ZEVsRUlqb2liM0prWlhKbGNqRXVjM1Z3Y0d4NVkyaGhhVzR0
      Ym1WMElpd2lhR1l1ClZIbHdaU0k2SW05eVpHVnlaWElpZlgwd0NnWUlLb1pJemowRUF3SURSd0F3
      UkFJZ1F0Y2R1OFFhbXFFdndIZDEKT3ZHUHdyc3NUNWwwU3Fsd0FOMjdRRElCVmRzQ0lENmgwU3pj
      Tm13S1dxZ05hMHk0bnBCcTZZTlVUZE5zQmF3MwpWZStRWC9LMgotLS0tLUVORCBDRVJUSUZJQ0FU
      RS0tLS0tCiLPCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEQWpDQ0FxbWdBd0lCQWdJ
      VUFTRlZuTWJxN1NrbkhOM1Jzano1eWpLRWxoZ3dDZ1lJS29aSXpqMEVBd0l3ClhqRUxNQWtHQTFV
      RUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJB
      d0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dRWURWUVFEREJKallTNXpkWEJ3YkhsamFHRnBiaTF1
      WlhRdwpIaGNOTWpJd056QXpNRFF6TWpBd1doY05Nak13TnpBek1EUXpOekF3V2pCeE1Rc3dDUVlE
      VlFRR0V3SkhRakViCk1Ca0dBMVVFQnhNU05URXVOVEF2TFRBdU1UTXZURzl1Wkc5dU1SQXdEZ1lE
      VlFRS0V3ZFBjbVJsY21WeU1SQXcKRGdZRFZRUUxFd2R2Y21SbGNtVnlNU0V3SHdZRFZRUURFeGh2
      Y21SbGNtVnlNUzV6ZFhCd2JIbGphR0ZwYmkxdQpaWFF3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pP
      UFFNQkJ3TkNBQVM4alBYbnc0MDJzV2IrTHdQZ3Fqa1ZUR2JPCjBYZWFBdHIvN1ZnZ0xFdjNCckJa
      TXlkT2VhNmdUWWtPcklsb3k5amo3UWNRSHlMYUx6Tzk5VVdmMnVSQm80SUIKTURDQ0FTd3dEZ1lE
      VlIwUEFRSC9CQVFEQWdPb01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRgpCUWNE
      QWpBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZERnUVdCQlFQbllNTG5OaTA2Qms0VE9jUWl2SjR4
      dEl5CnVqQWZCZ05WSFNNRUdEQVdnQlE3SzMveDVkL09jay9yYzRRWnY1b0ZZeVRVaERBL0JnTlZI
      UkVFT0RBMmdoaHYKY21SbGNtVnlNUzV6ZFhCd2JIbGphR0ZwYmkxdVpYU0NHbTl5WkdWeVpYSXhM
      bVJsZG1Wc2IzQXViRzlqWVd3dQpZMjl0TUd3R0NDb0RCQVVHQndnQkJHQjdJbUYwZEhKeklqcDdJ
      bWhtTGtGbVptbHNhV0YwYVc5dUlqb2lJaXdpCmFHWXVSVzV5YjJ4c2JXVnVkRWxFSWpvaWIzSmta
      WEpsY2pFdWMzVndjR3g1WTJoaGFXNHRibVYwSWl3aWFHWXUKVkhsd1pTSTZJbTl5WkdWeVpYSWlm
      WDB3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnUXRjZHU4UWFtcUV2d0hkMQpPdkdQd3Jzc1Q1bDBT
      cWx3QU4yN1FESUJWZHNDSUQ2aDBTemNObXdLV3FnTmEweTRucEJxNllOVVRkTnNCYXczClZlK1FY
      L0syCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KEhIKBTUwMG1zEAoYASAFKICAgAgaBkFkbWlu
      cxoiCglCYXRjaFNpemUSFRILCAoQgICAMRiAgEAaBkFkbWlucxoeCgxCYXRjaFRpbWVvdXQSDhIE
      CgIycxoGQWRtaW5zGh8KE0NoYW5uZWxSZXN0cmljdGlvbnMSCBoGQWRtaW5zIioKD0Jsb2NrVmFs
      aWRhdGlvbhIXEg0IAxIJCgdXcml0ZXJzGgZBZG1pbnMiIgoHUmVhZGVycxIXEg0IAxIJCgdSZWFk
      ZXJzGgZBZG1pbnMiIgoHV3JpdGVycxIXEg0IAxIJCgdXcml0ZXJzGgZBZG1pbnMiIgoGQWRtaW5z
      EhgSDggDEgoKBkFkbWlucxACGgZBZG1pbnMqBkFkbWlucxomChBIYXNoaW5nQWxnb3JpdGhtEhIS
      CAoGU0hBMjU2GgZBZG1pbnMaLQoZQmxvY2tEYXRhSGFzaGluZ1N0cnVjdHVyZRIQEgYI/////w8a
      BkFkbWlucxpOChBPcmRlcmVyQWRkcmVzc2VzEjoSHwodb3JkZXJlcjEuc3VwcGx5Y2hhaW4tbmV0
      OjcwNTAaFy9DaGFubmVsL09yZGVyZXIvQWRtaW5zGiQKDENhcGFiaWxpdGllcxIUEgoKCAoEVjJf
      MBIAGgZBZG1pbnMiIgoHV3JpdGVycxIXEg0IAxIJCgdXcml0ZXJzGgZBZG1pbnMiIgoGQWRtaW5z
      EhgSDggDEgoKBkFkbWlucxACGgZBZG1pbnMiIgoHUmVhZGVycxIXEg0IAxIJCgdSZWFkZXJzGgZB
      ZG1pbnMqBkFkbWlucxoOCgQKAgoACgAKAAoACgA=

    config:
      pod:
        resources:
          limits:
            memory: 512M
            cpu: 1
          requests:
            memory: 512M
            cpu: 0.5
