Starting build process...
Adding env variables...
Validatin network yaml
/home/bevel/build/network.yaml valid
Running the playbook...
ansible-playbook [core 2.12.6]
  config file = None
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/local/lib/python3.8/dist-packages/ansible
  ansible collection location = /root/.ansible/collections:/usr/share/ansible/collections
  executable location = /usr/local/bin/ansible-playbook
  python version = 3.8.10 (default, Mar 15 2022, 12:22:08) [GCC 9.4.0]
  jinja version = 3.1.2
  libyaml = True
No config file found; using defaults
redirecting (type: modules) ansible.builtin.npm to community.general.npm
Skipping callback 'default', as we already have a stdout callback.
Skipping callback 'minimal', as we already have a stdout callback.
Skipping callback 'oneline', as we already have a stdout callback.

PLAYBOOK: site.yaml ************************************************************
7 plays in /home/bevel/platforms/shared/configuration/site.yaml

PLAY [all] *********************************************************************
META: ran handlers
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************

TASK [Gathering Facts] *********************************************************
task path: /home/bevel/platforms/shared/configuration/network-schema-validator.yaml:12
ok: [localhost]
META: ran handlers

TASK [install ajv-cli] *********************************************************
task path: /home/bevel/platforms/shared/configuration/network-schema-validator.yaml:16
redirecting (type: modules) ansible.builtin.npm to community.general.npm
ok: [localhost] => {"changed": false}

TASK [set_fact] ****************************************************************
task path: /home/bevel/platforms/shared/configuration/network-schema-validator.yaml:22
ok: [localhost] => {"ansible_facts": {"tempNetworkyaml": {"network": {"channels": [{"channel": null, "channel_name": "AllChannel", "consortium": "SupplyChainConsortium", "endorsers": [{"name": "carrier", "organization": null, "peers": [{"certificate": "/home/bevel/build/carrier/peer0.crt", "corepeerAddress": "peer0.carrier-net:7051", "name": "peer0", "peer": null}]}, {"name": "manufacturer", "organization": null, "peers": [{"certificate": "/home/bevel/build/manufacturer/peer0.crt", "corepeerAddress": "peer0.manufacturer-net:7051", "name": "peer0", "peer": null}]}], "genesis": {"name": "OrdererGenesis"}, "orderer": {"name": "supplychain"}, "participants": [{"name": "carrier", "ordererAddress": "orderer1.supplychain-net:7050", "org_status": "new", "organization": null, "peers": [{"gossipAddress": "peer0.carrier-net:7051", "name": "peer0", "peer": null, "peerAddress": "peer0.carrier-net:7051"}], "type": "creator"}, {"name": "manufacturer", "ordererAddress": "orderer1.supplychain-net:7050", "org_status": "new", "organization": null, "peers": [{"gossipAddress": "peer0.manufacturer-net:7051", "name": "peer0", "peer": null, "peerAddress": "peer0.manufacturer-net:7051"}], "type": "joiner"}]}], "docker": {"password": "Farcry@2014", "url": "index.docker.io/hyperledgerlabs", "username": "adityajoshi12"}, "env": {"annotations": {"deployment": {}, "pvc": {}, "service": {}}, "external_dns": "disabled", "proxy": "none", "retry_count": 50, "type": "dev"}, "orderers": [{"certificate": "/home/bevel/build/orderer1.crt", "name": "orderer1", "orderer": null, "org_name": "supplychain", "type": "orderer", "uri": "orderer1.supplychain-net:7050"}], "organizations": [{"ca_data": {"certificate": "/home/bevel/build/supplychain/server.crt", "url": "ca.supplychain-net:7054"}, "cloud_provider": "azure", "country": "UK", "external_url_suffix": "develop.local.com", "fabric_console": "enabled", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "supplychain", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net", "type": "ca"}, "consensus": {"name": "raft"}, "orderers": [{"consensus": "raft", "grpc": {"port": 7050}, "name": "orderer1", "orderer": null, "type": "orderer"}]}, "state": "London", "subject": "O=Orderer,L=51.50/-0.13/London,C=GB", "type": "orderer", "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, {"ca_data": {"certificate": "/home/bevel/build/manufacturer/server.crt", "url": "ca.manufacturer-net:7054"}, "cloud_provider": "azure", "country": "CH", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "Zurich", "name": "manufacturer", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/manufacturer/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain1", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "enabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.manufacturer-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.manufacturer-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "Zurich", "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, {"ca_data": {"certificate": "/home/bevel/build/carrier/server.crt", "url": "ca.carrier-net:7054"}, "cloud_provider": "azure", "country": "GB", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "carrier", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/carrier/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "disabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.carrier-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.carrier-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "London", "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}], "type": "fabric", "version": "2.2.2"}}}, "changed": false}

TASK [Ensures build dir exists] ************************************************
task path: /home/bevel/platforms/shared/configuration/network-schema-validator.yaml:24
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [check/setup : check if dir exists or not] ********************************
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"exists": false}}

TASK [check/setup : Ensures dir exists] ****************************************
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
changed: [localhost] => {"changed": true, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "./build", "size": 4096, "state": "directory", "uid": 0}

TASK [check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [check/setup : Check if policy exists] ************************************
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [check/setup : Check docker cred exists] **********************************
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [check/setup : Check git https cred exists] *******************************
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [check/setup : check if certs exists in vault.] ***************************
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create tempNetwork yaml file] ********************************************
task path: /home/bevel/platforms/shared/configuration/network-schema-validator.yaml:30
changed: [localhost] => {"changed": true, "checksum": "e4d9abf92a4b9e545a5b9141476b57ecee97cc56", "dest": "./build/temp.yaml", "gid": 0, "group": "root", "md5sum": "c40f4efbfe0877b35011fe3eed6a4366", "mode": "0644", "owner": "root", "size": 9448, "src": "/root/.ansible/tmp/ansible-tmp-1658074347.4729013-28888-102894041527894/source", "state": "file", "uid": 0}

TASK [run schema validator on network.yaml] ************************************
task path: /home/bevel/platforms/shared/configuration/network-schema-validator.yaml:35
changed: [localhost] => {"changed": true, "cmd": "ajv validate -s ../../network-schema.json -d ./build/temp.yaml\n", "delta": "0:00:01.429344", "end": "2022-07-17 16:12:30.374699", "msg": "", "rc": 0, "start": "2022-07-17 16:12:28.945355", "stderr": "", "stderr_lines": [], "stdout": "./build/temp.yaml valid", "stdout_lines": ["./build/temp.yaml valid"]}

TASK [Remove the build directory and contents] *********************************
task path: /home/bevel/platforms/shared/configuration/network-schema-validator.yaml:38
changed: [localhost] => {"changed": true, "path": "./build", "state": "absent"}
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************

TASK [Gathering Facts] *********************************************************
task path: /home/bevel/platforms/shared/configuration/environment-setup.yaml:13
ok: [localhost]
META: ran handlers

TASK [include_role : setup/kubectl] ********************************************
task path: /home/bevel/platforms/shared/configuration/environment-setup.yaml:17

TASK [setup/kubectl : register temporary directory] ****************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:8
changed: [localhost] => {"changed": true, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/tmp/ansible.04ecccy4", "size": 4096, "state": "directory", "uid": 0}

TASK [setup/kubectl : check kubectl] *******************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:15
ok: [localhost] => {"changed": false, "stat": {"atime": 1658067664.3912246, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 83960, "charset": "unknown", "checksum": "371d59fce375bd7d74256c136280eeef732d7611", "ctime": 1658067663.979227, "dev": 2097204, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 13166487, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1613566452.0, "nlink": 1, "path": "/root/bin/kubectl", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 42987520, "uid": 0, "version": "4162813991", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [setup/kubectl : Download kubectl binary] *********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:22
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/kubectl : Unarchive kubernetes-client] *****************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:31
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/kubectl : create bin directory] ************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:39
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/kubectl : Copy kubectl binary to destination directory] ************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:47
skipping: [localhost] => (item=kubectl)  => {"ansible_loop_var": "bin_item", "bin_item": "kubectl", "changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/kubectl : Test kubectl installation] *******************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:61
ok: [localhost] => {"changed": false, "cmd": ["kubectl", "version", "--client", "--short"], "delta": "0:00:00.077033", "end": "2022-07-17 16:12:33.348864", "msg": "", "rc": 0, "start": "2022-07-17 16:12:33.271831", "stderr": "", "stderr_lines": [], "stdout": "Client Version: v1.19.8", "stdout_lines": ["Client Version: v1.19.8"]}

TASK [setup/kubectl : Changing the current context namespace to default] *******
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:67
changed: [localhost] => {"changed": true, "cmd": "KUBECONFIG=/home/bevel/build/config kubectl config use-context bevel\nKUBECONFIG=/home/bevel/build/config kubectl config set-context --current --namespace=default\n", "delta": "0:00:00.203486", "end": "2022-07-17 16:12:33.985524", "msg": "", "rc": 0, "start": "2022-07-17 16:12:33.782038", "stderr": "", "stderr_lines": [], "stdout": "Switched to context \"bevel\".\nContext \"bevel\" modified.", "stdout_lines": ["Switched to context \"bevel\".", "Context \"bevel\" modified."]}
META: role_complete for localhost

TASK [setup/kubectl : register temporary directory] ****************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:8
changed: [localhost] => {"changed": true, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/tmp/ansible.1rkjuy0t", "size": 4096, "state": "directory", "uid": 0}

TASK [setup/kubectl : check kubectl] *******************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:15
ok: [localhost] => {"changed": false, "stat": {"atime": 1658067664.3912246, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 83960, "charset": "unknown", "checksum": "371d59fce375bd7d74256c136280eeef732d7611", "ctime": 1658067663.979227, "dev": 2097204, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 13166487, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1613566452.0, "nlink": 1, "path": "/root/bin/kubectl", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 42987520, "uid": 0, "version": "4162813991", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [setup/kubectl : Download kubectl binary] *********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:22
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/kubectl : Unarchive kubernetes-client] *****************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:31
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/kubectl : create bin directory] ************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:39
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/kubectl : Copy kubectl binary to destination directory] ************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:47
skipping: [localhost] => (item=kubectl)  => {"ansible_loop_var": "bin_item", "bin_item": "kubectl", "changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/kubectl : Test kubectl installation] *******************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:61
ok: [localhost] => {"changed": false, "cmd": ["kubectl", "version", "--client", "--short"], "delta": "0:00:00.086691", "end": "2022-07-17 16:12:35.724101", "msg": "", "rc": 0, "start": "2022-07-17 16:12:35.637410", "stderr": "", "stderr_lines": [], "stdout": "Client Version: v1.19.8", "stdout_lines": ["Client Version: v1.19.8"]}

TASK [setup/kubectl : Changing the current context namespace to default] *******
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:67
changed: [localhost] => {"changed": true, "cmd": "KUBECONFIG=/home/bevel/build/config kubectl config use-context bevel\nKUBECONFIG=/home/bevel/build/config kubectl config set-context --current --namespace=default\n", "delta": "0:00:00.173769", "end": "2022-07-17 16:12:36.250734", "msg": "", "rc": 0, "start": "2022-07-17 16:12:36.076965", "stderr": "", "stderr_lines": [], "stdout": "Switched to context \"bevel\".\nContext \"bevel\" modified.", "stdout_lines": ["Switched to context \"bevel\".", "Context \"bevel\" modified."]}
META: role_complete for localhost

TASK [setup/kubectl : register temporary directory] ****************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:8
changed: [localhost] => {"changed": true, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/tmp/ansible.ov5t8_ma", "size": 4096, "state": "directory", "uid": 0}

TASK [setup/kubectl : check kubectl] *******************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:15
ok: [localhost] => {"changed": false, "stat": {"atime": 1658067664.3912246, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 83960, "charset": "unknown", "checksum": "371d59fce375bd7d74256c136280eeef732d7611", "ctime": 1658067663.979227, "dev": 2097204, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 13166487, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1613566452.0, "nlink": 1, "path": "/root/bin/kubectl", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 42987520, "uid": 0, "version": "4162813991", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [setup/kubectl : Download kubectl binary] *********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:22
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/kubectl : Unarchive kubernetes-client] *****************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:31
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/kubectl : create bin directory] ************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:39
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/kubectl : Copy kubectl binary to destination directory] ************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:47
skipping: [localhost] => (item=kubectl)  => {"ansible_loop_var": "bin_item", "bin_item": "kubectl", "changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/kubectl : Test kubectl installation] *******************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:61
ok: [localhost] => {"changed": false, "cmd": ["kubectl", "version", "--client", "--short"], "delta": "0:00:00.090986", "end": "2022-07-17 16:12:37.852525", "msg": "", "rc": 0, "start": "2022-07-17 16:12:37.761539", "stderr": "", "stderr_lines": [], "stdout": "Client Version: v1.19.8", "stdout_lines": ["Client Version: v1.19.8"]}

TASK [setup/kubectl : Changing the current context namespace to default] *******
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:67
changed: [localhost] => {"changed": true, "cmd": "KUBECONFIG=/home/bevel/build/config kubectl config use-context bevel\nKUBECONFIG=/home/bevel/build/config kubectl config set-context --current --namespace=default\n", "delta": "0:00:00.193983", "end": "2022-07-17 16:12:38.433229", "msg": "", "rc": 0, "start": "2022-07-17 16:12:38.239246", "stderr": "", "stderr_lines": [], "stdout": "Switched to context \"bevel\".\nContext \"bevel\" modified.", "stdout_lines": ["Switched to context \"bevel\".", "Context \"bevel\" modified."]}
META: role_complete for localhost

TASK [include_role : setup/helm] ***********************************************
task path: /home/bevel/platforms/shared/configuration/environment-setup.yaml:25

TASK [setup/helm : register temporary directory] *******************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:8
changed: [localhost] => {"changed": true, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/tmp/ansible.o1hnfwhv", "size": 4096, "state": "directory", "uid": 0}

TASK [setup/helm : check helm] *************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:15
ok: [localhost] => {"changed": false, "stat": {"atime": 1658067676.4471529, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 88104, "charset": "unknown", "checksum": "4ef98189af928450906546c6afd8719399a4c181", "ctime": 1658067676.1111548, "dev": 2097204, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 13166480, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658067675.6591575, "nlink": 1, "path": "/root/bin/helm", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 45109248, "uid": 0, "version": "2805724032", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [setup/helm : Install helm] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:22
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:33
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create bin directory] ****************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:43
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:53
skipping: [localhost] => (item=helm)  => {"ansible_loop_var": "bin_item", "bin_item": "helm", "changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/helm : Test helm installation] *************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:64
ok: [localhost] => {"changed": false, "cmd": ["helm", "version", "--client", "--short"], "delta": "0:00:00.057239", "end": "2022-07-17 16:12:40.183694", "msg": "", "rc": 0, "start": "2022-07-17 16:12:40.126455", "stderr": "", "stderr_lines": [], "stdout": "v3.6.2+gee407bd", "stdout_lines": ["v3.6.2+gee407bd"]}
META: role_complete for localhost

TASK [setup/helm : register temporary directory] *******************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:8
changed: [localhost] => {"changed": true, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/tmp/ansible.3pwg89zp", "size": 4096, "state": "directory", "uid": 0}

TASK [setup/helm : check helm] *************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:15
ok: [localhost] => {"changed": false, "stat": {"atime": 1658067676.4471529, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 88104, "charset": "unknown", "checksum": "4ef98189af928450906546c6afd8719399a4c181", "ctime": 1658067676.1111548, "dev": 2097204, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 13166480, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658067675.6591575, "nlink": 1, "path": "/root/bin/helm", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 45109248, "uid": 0, "version": "2805724032", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [setup/helm : Install helm] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:22
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:33
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create bin directory] ****************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:43
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:53
skipping: [localhost] => (item=helm)  => {"ansible_loop_var": "bin_item", "bin_item": "helm", "changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/helm : Test helm installation] *************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:64
ok: [localhost] => {"changed": false, "cmd": ["helm", "version", "--client", "--short"], "delta": "0:00:00.073647", "end": "2022-07-17 16:12:41.974720", "msg": "", "rc": 0, "start": "2022-07-17 16:12:41.901073", "stderr": "", "stderr_lines": [], "stdout": "v3.6.2+gee407bd", "stdout_lines": ["v3.6.2+gee407bd"]}
META: role_complete for localhost

TASK [setup/helm : register temporary directory] *******************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:8
changed: [localhost] => {"changed": true, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/tmp/ansible.xt_82nsi", "size": 4096, "state": "directory", "uid": 0}

TASK [setup/helm : check helm] *************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:15
ok: [localhost] => {"changed": false, "stat": {"atime": 1658067676.4471529, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 88104, "charset": "unknown", "checksum": "4ef98189af928450906546c6afd8719399a4c181", "ctime": 1658067676.1111548, "dev": 2097204, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 13166480, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658067675.6591575, "nlink": 1, "path": "/root/bin/helm", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 45109248, "uid": 0, "version": "2805724032", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [setup/helm : Install helm] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:22
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:33
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create bin directory] ****************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:43
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:53
skipping: [localhost] => (item=helm)  => {"ansible_loop_var": "bin_item", "bin_item": "helm", "changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/helm : Test helm installation] *************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:64
ok: [localhost] => {"changed": false, "cmd": ["helm", "version", "--client", "--short"], "delta": "0:00:00.074150", "end": "2022-07-17 16:12:43.677089", "msg": "", "rc": 0, "start": "2022-07-17 16:12:43.602939", "stderr": "", "stderr_lines": [], "stdout": "v3.6.2+gee407bd", "stdout_lines": ["v3.6.2+gee407bd"]}
META: role_complete for localhost

TASK [include_role : setup/vault] **********************************************
task path: /home/bevel/platforms/shared/configuration/environment-setup.yaml:33

TASK [setup/vault : register temporary directory] ******************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:8
changed: [localhost] => {"changed": true, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/tmp/ansible.5r098f3m", "size": 4096, "state": "directory", "uid": 0}

TASK [setup/vault : check vault] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:15
ok: [localhost] => {"changed": false, "stat": {"atime": 1658067685.3151007, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 384416, "charset": "unknown", "checksum": "1a97c27b87ff109441f4631eaec50751e2864802", "ctime": 1658067684.9511027, "dev": 2097204, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 13166506, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1618938805.0, "nlink": 1, "path": "/root/bin/vault", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 196820366, "uid": 0, "version": "2709503024", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [setup/vault : Install vault client] **************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:22
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/vault : create bin directory] **************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:32
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/vault : Unzip vault archive] ***************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:40
skipping: [localhost] => (item=vault)  => {"ansible_loop_var": "bin_item", "bin_item": "vault", "changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/vault : Test vault installation] ***********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:52
ok: [localhost] => {"changed": false, "cmd": ["vault", "version"], "delta": "0:00:00.117601", "end": "2022-07-17 16:12:45.912337", "msg": "", "rc": 0, "start": "2022-07-17 16:12:45.794736", "stderr": "", "stderr_lines": [], "stdout": "Vault v1.7.1 (917142287996a005cb1ed9d96d00d06a0590e44e)", "stdout_lines": ["Vault v1.7.1 (917142287996a005cb1ed9d96d00d06a0590e44e)"]}
META: role_complete for localhost

TASK [include_role : setup/aws-cli] ********************************************
task path: /home/bevel/platforms/shared/configuration/environment-setup.yaml:41
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.supplychain-net:7054', 'certificate': '/home/bevel/build/supplychain/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft'}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/supplychain/server.crt", "url": "ca.supplychain-net:7054"}, "cloud_provider": "azure", "country": "UK", "external_url_suffix": "develop.local.com", "fabric_console": "enabled", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "supplychain", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net", "type": "ca"}, "consensus": {"name": "raft"}, "orderers": [{"consensus": "raft", "grpc": {"port": 7050}, "name": "orderer1", "orderer": null, "type": "orderer"}]}, "state": "London", "subject": "O=Orderer,L=51.50/-0.13/London,C=GB", "type": "orderer", "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.manufacturer-net:7054', 'certificate': '/home/bevel/build/manufacturer/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net:7051', 'certificate': '/home/bevel/build/manufacturer/peer0.crt', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain1', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/manufacturer/server.crt", "url": "ca.manufacturer-net:7054"}, "cloud_provider": "azure", "country": "CH", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "Zurich", "name": "manufacturer", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/manufacturer/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain1", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "enabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.manufacturer-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.manufacturer-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "Zurich", "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': '/home/bevel/build/carrier/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net:7051', 'certificate': '/home/bevel/build/carrier/peer0.crt', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/carrier/server.crt", "url": "ca.carrier-net:7054"}, "cloud_provider": "azure", "country": "GB", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "carrier", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/carrier/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "disabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.carrier-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.carrier-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "London", "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}

TASK [include_role : setup/aws-auth] *******************************************
task path: /home/bevel/platforms/shared/configuration/environment-setup.yaml:48
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.supplychain-net:7054', 'certificate': '/home/bevel/build/supplychain/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft'}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/supplychain/server.crt", "url": "ca.supplychain-net:7054"}, "cloud_provider": "azure", "country": "UK", "external_url_suffix": "develop.local.com", "fabric_console": "enabled", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "supplychain", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net", "type": "ca"}, "consensus": {"name": "raft"}, "orderers": [{"consensus": "raft", "grpc": {"port": 7050}, "name": "orderer1", "orderer": null, "type": "orderer"}]}, "state": "London", "subject": "O=Orderer,L=51.50/-0.13/London,C=GB", "type": "orderer", "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.manufacturer-net:7054', 'certificate': '/home/bevel/build/manufacturer/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net:7051', 'certificate': '/home/bevel/build/manufacturer/peer0.crt', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain1', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/manufacturer/server.crt", "url": "ca.manufacturer-net:7054"}, "cloud_provider": "azure", "country": "CH", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "Zurich", "name": "manufacturer", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/manufacturer/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain1", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "enabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.manufacturer-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.manufacturer-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "Zurich", "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': '/home/bevel/build/carrier/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net:7051', 'certificate': '/home/bevel/build/carrier/peer0.crt', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/carrier/server.crt", "url": "ca.carrier-net:7054"}, "cloud_provider": "azure", "country": "GB", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "carrier", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/carrier/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "disabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.carrier-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.carrier-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "London", "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************
META: ran handlers

TASK [include_role : setup/flux] ***********************************************
task path: /home/bevel/platforms/shared/configuration/kubernetes-env-setup.yaml:18
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [aws-cli : register temporary directory] **********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:8
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-cli : check aws cli] *************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:15
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-cli : download aws cli] **********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:22
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:31
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create bin directory] ****************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:40
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-cli : install aws cli] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:50
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-cli : configuring aws] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: 

TASK [aws-auth : register temporary directory] *********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:8
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-auth : check aws-authenticator] **************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:15
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-auth : create bin directory] *****************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:22
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-auth : Install aws-authenticator] ************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:30
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-auth : Test Kubernetes connection] ***********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: 

TASK [helm : register temporary directory] *************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:8
changed: [localhost] => {"changed": true, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/tmp/ansible.bsand5dt", "size": 4096, "state": "directory", "uid": 0}

TASK [helm : check helm] *******************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:15
ok: [localhost] => {"changed": false, "stat": {"atime": 1658067676.4471529, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 88104, "charset": "unknown", "checksum": "4ef98189af928450906546c6afd8719399a4c181", "ctime": 1658067676.1111548, "dev": 2097204, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 13166480, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658067675.6591575, "nlink": 1, "path": "/root/bin/helm", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 45109248, "uid": 0, "version": "2805724032", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [helm : Install helm] *****************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:22
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [helm : Unzip helm archive] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:33
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create bin directory] ****************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:43
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [helm : Move helm binaries] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:53
skipping: [localhost] => (item=helm)  => {"ansible_loop_var": "bin_item", "bin_item": "helm", "changed": false, "skip_reason": "Conditional result was False"}

TASK [helm : Test helm installation] *******************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:64
ok: [localhost] => {"changed": false, "cmd": ["helm", "version", "--client", "--short"], "delta": "0:00:00.080147", "end": "2022-07-17 16:12:49.224251", "msg": "", "rc": 0, "start": "2022-07-17 16:12:49.144104", "stderr": "", "stderr_lines": [], "stdout": "v3.6.2+gee407bd", "stdout_lines": ["v3.6.2+gee407bd"]}
META: role_complete for localhost

TASK [kubectl : register temporary directory] **********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:8
changed: [localhost] => {"changed": true, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/tmp/ansible.2vmtrpge", "size": 4096, "state": "directory", "uid": 0}

TASK [kubectl : check kubectl] *************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:15
ok: [localhost] => {"changed": false, "stat": {"atime": 1658067664.3912246, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 83960, "charset": "unknown", "checksum": "371d59fce375bd7d74256c136280eeef732d7611", "ctime": 1658067663.979227, "dev": 2097204, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 13166487, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1613566452.0, "nlink": 1, "path": "/root/bin/kubectl", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 42987520, "uid": 0, "version": "4162813991", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [kubectl : Download kubectl binary] ***************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:22
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [kubectl : Unarchive kubernetes-client] ***********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:31
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [kubectl : create bin directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:39
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [kubectl : Copy kubectl binary to destination directory] ******************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:47
skipping: [localhost] => (item=kubectl)  => {"ansible_loop_var": "bin_item", "bin_item": "kubectl", "changed": false, "skip_reason": "Conditional result was False"}

TASK [kubectl : Test kubectl installation] *************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:61
ok: [localhost] => {"changed": false, "cmd": ["kubectl", "version", "--client", "--short"], "delta": "0:00:00.083225", "end": "2022-07-17 16:12:50.796031", "msg": "", "rc": 0, "start": "2022-07-17 16:12:50.712806", "stderr": "", "stderr_lines": [], "stdout": "Client Version: v1.19.8", "stdout_lines": ["Client Version: v1.19.8"]}

TASK [kubectl : Changing the current context namespace to default] *************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:67
changed: [localhost] => {"changed": true, "cmd": "KUBECONFIG=/home/bevel/build/config kubectl config use-context bevel\nKUBECONFIG=/home/bevel/build/config kubectl config set-context --current --namespace=default\n", "delta": "0:00:00.205151", "end": "2022-07-17 16:12:51.369140", "msg": "", "rc": 0, "start": "2022-07-17 16:12:51.163989", "stderr": "", "stderr_lines": [], "stdout": "Switched to context \"bevel\".\nContext \"bevel\" modified.", "stdout_lines": ["Switched to context \"bevel\".", "Context \"bevel\" modified."]}
META: role_complete for localhost

TASK [setup/flux : Checking if the namespace flux-dev already exists] **********
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:8
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"creationTimestamp": "2022-07-17T14:50:54Z", "labels": {"kubernetes.io/metadata.name": "flux-dev"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:labels": {".": {}, "f:kubernetes.io/metadata.name": {}}}}, "manager": "kubectl-create", "operation": "Update", "time": "2022-07-17T14:50:54Z"}], "name": "flux-dev", "resourceVersion": "67194", "uid": "5725059c-89f5-4260-a7ab-a9f6cfcc204f"}, "spec": {"finalizers": ["kubernetes"]}, "status": {"phase": "Active"}}]}

TASK [setup/flux : Create namespaces  flux-dev] ********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/flux : Check if Flux is running] ***********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:22
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"annotations": {"checksum/ssh": "923f37a7070e98516fe4033a387c27a3e1ac2b5ca08ca4b1275fcb72afce3b63"}, "creationTimestamp": "2022-07-17T14:51:02Z", "generateName": "flux-dev-759b8574cb-", "labels": {"app": "flux", "pod-template-hash": "759b8574cb", "release": "flux-dev"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:checksum/ssh": {}}, "f:generateName": {}, "f:labels": {".": {}, "f:app": {}, "f:pod-template-hash": {}, "f:release": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"d22956c0-08b2-4b3b-bfe8-f23e7e7ac182\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {"f:containers": {"k:{\"name\":\"flux\"}": {".": {}, "f:args": {}, "f:env": {".": {}, "k:{\"name\":\"KUBECONFIG\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:livenessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":3030,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}}, "f:readinessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:resources": {".": {}, "f:requests": {".": {}, "f:cpu": {}, "f:memory": {}}}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/etc/fluxd/ssh\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/root/.kubectl\"}": {".": {}, "f:mountPath": {}, "f:name": {}}, "k:{\"mountPath\":\"/root/.ssh\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/var/fluxd/keygen\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:nodeSelector": {".": {}, "f:beta.kubernetes.io/os": {}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"git-key\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}, "k:{\"name\":\"git-keygen\"}": {".": {}, "f:emptyDir": {".": {}, "f:medium": {}}, "f:name": {}}, "k:{\"name\":\"kubedir\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:name": {}}, "f:name": {}}, "k:{\"name\":\"sshdir\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:name": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T14:51:02Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.22\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "time": "2022-07-17T14:51:42Z"}], "name": "flux-dev-759b8574cb-ltrjq", "namespace": "flux-dev", "ownerReferences": [{"apiVersion": "apps/v1", "blockOwnerDeletion": true, "controller": true, "kind": "ReplicaSet", "name": "flux-dev-759b8574cb", "uid": "d22956c0-08b2-4b3b-bfe8-f23e7e7ac182"}], "resourceVersion": "67452", "uid": "dfd6d796-f17f-4ce5-9642-36c7e92e61d2"}, "spec": {"containers": [{"args": ["--log-format=fmt", "--ssh-keygen-dir=/var/fluxd/keygen", "--ssh-keygen-format=RFC4716", "--k8s-secret-name=git-auth-dev", "--memcached-hostname=flux-dev-memcached", "--sync-state=git", "--memcached-service=", "--git-url=ssh://git@github.com/adityajoshi12/bevel.git", "--git-branch=test", "--git-path=platforms/hyperledger-fabric/releases/dev", "--git-readonly=false", "--git-user=Weave Flux", "--git-email=support@weave.works", "--git-verify-signatures=false", "--git-set-author=false", "--git-poll-interval=2m", "--git-timeout=200s", "--sync-interval=2m", "--git-ci-skip=false", "--git-label=sync-dev", "--automation-interval=5m", "--registry-rps=200", "--registry-burst=125", "--registry-trace=false", "--registry-insecure-host=index.docker.io/hyperledgerlabs"], "env": [{"name": "KUBECONFIG", "value": "/root/.kubectl/config"}], "image": "docker.io/fluxcd/flux:1.23.0", "imagePullPolicy": "IfNotPresent", "livenessProbe": {"failureThreshold": 3, "httpGet": {"path": "/api/flux/v6/identity.pub", "port": 3030, "scheme": "HTTP"}, "initialDelaySeconds": 30, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 120}, "name": "flux", "ports": [{"containerPort": 3030, "name": "http", "protocol": "TCP"}], "readinessProbe": {"failureThreshold": 3, "httpGet": {"path": "/api/flux/v6/identity.pub", "port": 3030, "scheme": "HTTP"}, "initialDelaySeconds": 30, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 120}, "resources": {"requests": {"cpu": "50m", "memory": "64Mi"}}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/root/.kubectl", "name": "kubedir"}, {"mountPath": "/root/.ssh", "name": "sshdir", "readOnly": true}, {"mountPath": "/etc/fluxd/ssh", "name": "git-key", "readOnly": true}, {"mountPath": "/var/fluxd/keygen", "name": "git-keygen"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-b2jhz", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "nodeName": "aks-agentpool-84293659-vmss000001", "nodeSelector": {"beta.kubernetes.io/os": "linux"}, "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "flux-dev", "serviceAccountName": "flux-dev", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoSchedule", "key": "node.kubernetes.io/memory-pressure", "operator": "Exists"}], "volumes": [{"configMap": {"defaultMode": 420, "name": "flux-dev-kube-config"}, "name": "kubedir"}, {"configMap": {"defaultMode": 384, "name": "flux-dev-ssh-config"}, "name": "sshdir"}, {"name": "git-key", "secret": {"defaultMode": 256, "secretName": "git-auth-dev"}}, {"emptyDir": {"medium": "Memory"}, "name": "git-keygen"}, {"name": "kube-api-access-b2jhz", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2022-07-17T14:51:02Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T14:51:42Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T14:51:42Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T14:51:02Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://222f98676bbcc7e1675282ad0c5a0b0a36a9443f4b7462c675d96ff50243000a", "image": "docker.io/fluxcd/flux:1.23.0", "imageID": "docker.io/fluxcd/flux@sha256:8e52359b851b15bfc78f6020b61af7d2314b069822181348cb3410cd24f0a4ee", "lastState": {}, "name": "flux", "ready": true, "restartCount": 0, "started": true, "state": {"running": {"startedAt": "2022-07-17T14:51:03Z"}}}], "hostIP": "10.224.0.5", "phase": "Running", "podIP": "10.244.0.22", "podIPs": [{"ip": "10.244.0.22"}], "qosClass": "Burstable", "startTime": "2022-07-17T14:51:02Z"}}]}

TASK [setup/flux : Get ssh known hosts] ****************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/flux : Helm repo add] **********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:44
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/flux : Install flux for over https connection] *********************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:52
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/flux : Install flux for over ssh connection] ***********************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:63
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [wait for pods to come up] ************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:75
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [aws-cli : register temporary directory] **********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:8
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-cli : check aws cli] *************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:15
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-cli : download aws cli] **********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:22
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:31
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create bin directory] ****************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:40
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-cli : install aws cli] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:50
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-cli : configuring aws] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: 

TASK [aws-auth : register temporary directory] *********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:8
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-auth : check aws-authenticator] **************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:15
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-auth : create bin directory] *****************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:22
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-auth : Install aws-authenticator] ************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:30
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-auth : Test Kubernetes connection] ***********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: 

TASK [setup/flux : Checking if the namespace flux-dev already exists] **********
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:8
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"creationTimestamp": "2022-07-17T14:50:54Z", "labels": {"kubernetes.io/metadata.name": "flux-dev"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:labels": {".": {}, "f:kubernetes.io/metadata.name": {}}}}, "manager": "kubectl-create", "operation": "Update", "time": "2022-07-17T14:50:54Z"}], "name": "flux-dev", "resourceVersion": "67194", "uid": "5725059c-89f5-4260-a7ab-a9f6cfcc204f"}, "spec": {"finalizers": ["kubernetes"]}, "status": {"phase": "Active"}}]}

TASK [setup/flux : Create namespaces  flux-dev] ********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/flux : Check if Flux is running] ***********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:22
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"annotations": {"checksum/ssh": "923f37a7070e98516fe4033a387c27a3e1ac2b5ca08ca4b1275fcb72afce3b63"}, "creationTimestamp": "2022-07-17T14:51:02Z", "generateName": "flux-dev-759b8574cb-", "labels": {"app": "flux", "pod-template-hash": "759b8574cb", "release": "flux-dev"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:checksum/ssh": {}}, "f:generateName": {}, "f:labels": {".": {}, "f:app": {}, "f:pod-template-hash": {}, "f:release": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"d22956c0-08b2-4b3b-bfe8-f23e7e7ac182\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {"f:containers": {"k:{\"name\":\"flux\"}": {".": {}, "f:args": {}, "f:env": {".": {}, "k:{\"name\":\"KUBECONFIG\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:livenessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":3030,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}}, "f:readinessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:resources": {".": {}, "f:requests": {".": {}, "f:cpu": {}, "f:memory": {}}}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/etc/fluxd/ssh\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/root/.kubectl\"}": {".": {}, "f:mountPath": {}, "f:name": {}}, "k:{\"mountPath\":\"/root/.ssh\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/var/fluxd/keygen\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:nodeSelector": {".": {}, "f:beta.kubernetes.io/os": {}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"git-key\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}, "k:{\"name\":\"git-keygen\"}": {".": {}, "f:emptyDir": {".": {}, "f:medium": {}}, "f:name": {}}, "k:{\"name\":\"kubedir\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:name": {}}, "f:name": {}}, "k:{\"name\":\"sshdir\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:name": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T14:51:02Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.22\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "time": "2022-07-17T14:51:42Z"}], "name": "flux-dev-759b8574cb-ltrjq", "namespace": "flux-dev", "ownerReferences": [{"apiVersion": "apps/v1", "blockOwnerDeletion": true, "controller": true, "kind": "ReplicaSet", "name": "flux-dev-759b8574cb", "uid": "d22956c0-08b2-4b3b-bfe8-f23e7e7ac182"}], "resourceVersion": "67452", "uid": "dfd6d796-f17f-4ce5-9642-36c7e92e61d2"}, "spec": {"containers": [{"args": ["--log-format=fmt", "--ssh-keygen-dir=/var/fluxd/keygen", "--ssh-keygen-format=RFC4716", "--k8s-secret-name=git-auth-dev", "--memcached-hostname=flux-dev-memcached", "--sync-state=git", "--memcached-service=", "--git-url=ssh://git@github.com/adityajoshi12/bevel.git", "--git-branch=test", "--git-path=platforms/hyperledger-fabric/releases/dev", "--git-readonly=false", "--git-user=Weave Flux", "--git-email=support@weave.works", "--git-verify-signatures=false", "--git-set-author=false", "--git-poll-interval=2m", "--git-timeout=200s", "--sync-interval=2m", "--git-ci-skip=false", "--git-label=sync-dev", "--automation-interval=5m", "--registry-rps=200", "--registry-burst=125", "--registry-trace=false", "--registry-insecure-host=index.docker.io/hyperledgerlabs"], "env": [{"name": "KUBECONFIG", "value": "/root/.kubectl/config"}], "image": "docker.io/fluxcd/flux:1.23.0", "imagePullPolicy": "IfNotPresent", "livenessProbe": {"failureThreshold": 3, "httpGet": {"path": "/api/flux/v6/identity.pub", "port": 3030, "scheme": "HTTP"}, "initialDelaySeconds": 30, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 120}, "name": "flux", "ports": [{"containerPort": 3030, "name": "http", "protocol": "TCP"}], "readinessProbe": {"failureThreshold": 3, "httpGet": {"path": "/api/flux/v6/identity.pub", "port": 3030, "scheme": "HTTP"}, "initialDelaySeconds": 30, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 120}, "resources": {"requests": {"cpu": "50m", "memory": "64Mi"}}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/root/.kubectl", "name": "kubedir"}, {"mountPath": "/root/.ssh", "name": "sshdir", "readOnly": true}, {"mountPath": "/etc/fluxd/ssh", "name": "git-key", "readOnly": true}, {"mountPath": "/var/fluxd/keygen", "name": "git-keygen"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-b2jhz", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "nodeName": "aks-agentpool-84293659-vmss000001", "nodeSelector": {"beta.kubernetes.io/os": "linux"}, "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "flux-dev", "serviceAccountName": "flux-dev", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoSchedule", "key": "node.kubernetes.io/memory-pressure", "operator": "Exists"}], "volumes": [{"configMap": {"defaultMode": 420, "name": "flux-dev-kube-config"}, "name": "kubedir"}, {"configMap": {"defaultMode": 384, "name": "flux-dev-ssh-config"}, "name": "sshdir"}, {"name": "git-key", "secret": {"defaultMode": 256, "secretName": "git-auth-dev"}}, {"emptyDir": {"medium": "Memory"}, "name": "git-keygen"}, {"name": "kube-api-access-b2jhz", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2022-07-17T14:51:02Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T14:51:42Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T14:51:42Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T14:51:02Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://222f98676bbcc7e1675282ad0c5a0b0a36a9443f4b7462c675d96ff50243000a", "image": "docker.io/fluxcd/flux:1.23.0", "imageID": "docker.io/fluxcd/flux@sha256:8e52359b851b15bfc78f6020b61af7d2314b069822181348cb3410cd24f0a4ee", "lastState": {}, "name": "flux", "ready": true, "restartCount": 0, "started": true, "state": {"running": {"startedAt": "2022-07-17T14:51:03Z"}}}], "hostIP": "10.224.0.5", "phase": "Running", "podIP": "10.244.0.22", "podIPs": [{"ip": "10.244.0.22"}], "qosClass": "Burstable", "startTime": "2022-07-17T14:51:02Z"}}]}

TASK [setup/flux : Get ssh known hosts] ****************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/flux : Helm repo add] **********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:44
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/flux : Install flux for over https connection] *********************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:52
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/flux : Install flux for over ssh connection] ***********************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:63
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [wait for pods to come up] ************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:75
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [aws-cli : register temporary directory] **********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:8
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-cli : check aws cli] *************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:15
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-cli : download aws cli] **********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:22
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:31
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create bin directory] ****************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:40
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-cli : install aws cli] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:50
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-cli : configuring aws] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: 

TASK [aws-auth : register temporary directory] *********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:8
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-auth : check aws-authenticator] **************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:15
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-auth : create bin directory] *****************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:22
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-auth : Install aws-authenticator] ************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:30
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-auth : Test Kubernetes connection] ***********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: 

TASK [setup/flux : Checking if the namespace flux-dev already exists] **********
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:8
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"creationTimestamp": "2022-07-17T14:50:54Z", "labels": {"kubernetes.io/metadata.name": "flux-dev"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:labels": {".": {}, "f:kubernetes.io/metadata.name": {}}}}, "manager": "kubectl-create", "operation": "Update", "time": "2022-07-17T14:50:54Z"}], "name": "flux-dev", "resourceVersion": "67194", "uid": "5725059c-89f5-4260-a7ab-a9f6cfcc204f"}, "spec": {"finalizers": ["kubernetes"]}, "status": {"phase": "Active"}}]}

TASK [setup/flux : Create namespaces  flux-dev] ********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/flux : Check if Flux is running] ***********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:22
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"annotations": {"checksum/ssh": "923f37a7070e98516fe4033a387c27a3e1ac2b5ca08ca4b1275fcb72afce3b63"}, "creationTimestamp": "2022-07-17T14:51:02Z", "generateName": "flux-dev-759b8574cb-", "labels": {"app": "flux", "pod-template-hash": "759b8574cb", "release": "flux-dev"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:checksum/ssh": {}}, "f:generateName": {}, "f:labels": {".": {}, "f:app": {}, "f:pod-template-hash": {}, "f:release": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"d22956c0-08b2-4b3b-bfe8-f23e7e7ac182\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {"f:containers": {"k:{\"name\":\"flux\"}": {".": {}, "f:args": {}, "f:env": {".": {}, "k:{\"name\":\"KUBECONFIG\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:livenessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":3030,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}}, "f:readinessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:resources": {".": {}, "f:requests": {".": {}, "f:cpu": {}, "f:memory": {}}}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/etc/fluxd/ssh\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/root/.kubectl\"}": {".": {}, "f:mountPath": {}, "f:name": {}}, "k:{\"mountPath\":\"/root/.ssh\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/var/fluxd/keygen\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:nodeSelector": {".": {}, "f:beta.kubernetes.io/os": {}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"git-key\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}, "k:{\"name\":\"git-keygen\"}": {".": {}, "f:emptyDir": {".": {}, "f:medium": {}}, "f:name": {}}, "k:{\"name\":\"kubedir\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:name": {}}, "f:name": {}}, "k:{\"name\":\"sshdir\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:name": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T14:51:02Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.22\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "time": "2022-07-17T14:51:42Z"}], "name": "flux-dev-759b8574cb-ltrjq", "namespace": "flux-dev", "ownerReferences": [{"apiVersion": "apps/v1", "blockOwnerDeletion": true, "controller": true, "kind": "ReplicaSet", "name": "flux-dev-759b8574cb", "uid": "d22956c0-08b2-4b3b-bfe8-f23e7e7ac182"}], "resourceVersion": "67452", "uid": "dfd6d796-f17f-4ce5-9642-36c7e92e61d2"}, "spec": {"containers": [{"args": ["--log-format=fmt", "--ssh-keygen-dir=/var/fluxd/keygen", "--ssh-keygen-format=RFC4716", "--k8s-secret-name=git-auth-dev", "--memcached-hostname=flux-dev-memcached", "--sync-state=git", "--memcached-service=", "--git-url=ssh://git@github.com/adityajoshi12/bevel.git", "--git-branch=test", "--git-path=platforms/hyperledger-fabric/releases/dev", "--git-readonly=false", "--git-user=Weave Flux", "--git-email=support@weave.works", "--git-verify-signatures=false", "--git-set-author=false", "--git-poll-interval=2m", "--git-timeout=200s", "--sync-interval=2m", "--git-ci-skip=false", "--git-label=sync-dev", "--automation-interval=5m", "--registry-rps=200", "--registry-burst=125", "--registry-trace=false", "--registry-insecure-host=index.docker.io/hyperledgerlabs"], "env": [{"name": "KUBECONFIG", "value": "/root/.kubectl/config"}], "image": "docker.io/fluxcd/flux:1.23.0", "imagePullPolicy": "IfNotPresent", "livenessProbe": {"failureThreshold": 3, "httpGet": {"path": "/api/flux/v6/identity.pub", "port": 3030, "scheme": "HTTP"}, "initialDelaySeconds": 30, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 120}, "name": "flux", "ports": [{"containerPort": 3030, "name": "http", "protocol": "TCP"}], "readinessProbe": {"failureThreshold": 3, "httpGet": {"path": "/api/flux/v6/identity.pub", "port": 3030, "scheme": "HTTP"}, "initialDelaySeconds": 30, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 120}, "resources": {"requests": {"cpu": "50m", "memory": "64Mi"}}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/root/.kubectl", "name": "kubedir"}, {"mountPath": "/root/.ssh", "name": "sshdir", "readOnly": true}, {"mountPath": "/etc/fluxd/ssh", "name": "git-key", "readOnly": true}, {"mountPath": "/var/fluxd/keygen", "name": "git-keygen"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-b2jhz", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "nodeName": "aks-agentpool-84293659-vmss000001", "nodeSelector": {"beta.kubernetes.io/os": "linux"}, "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "flux-dev", "serviceAccountName": "flux-dev", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoSchedule", "key": "node.kubernetes.io/memory-pressure", "operator": "Exists"}], "volumes": [{"configMap": {"defaultMode": 420, "name": "flux-dev-kube-config"}, "name": "kubedir"}, {"configMap": {"defaultMode": 384, "name": "flux-dev-ssh-config"}, "name": "sshdir"}, {"name": "git-key", "secret": {"defaultMode": 256, "secretName": "git-auth-dev"}}, {"emptyDir": {"medium": "Memory"}, "name": "git-keygen"}, {"name": "kube-api-access-b2jhz", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2022-07-17T14:51:02Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T14:51:42Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T14:51:42Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T14:51:02Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://222f98676bbcc7e1675282ad0c5a0b0a36a9443f4b7462c675d96ff50243000a", "image": "docker.io/fluxcd/flux:1.23.0", "imageID": "docker.io/fluxcd/flux@sha256:8e52359b851b15bfc78f6020b61af7d2314b069822181348cb3410cd24f0a4ee", "lastState": {}, "name": "flux", "ready": true, "restartCount": 0, "started": true, "state": {"running": {"startedAt": "2022-07-17T14:51:03Z"}}}], "hostIP": "10.224.0.5", "phase": "Running", "podIP": "10.244.0.22", "podIPs": [{"ip": "10.244.0.22"}], "qosClass": "Burstable", "startTime": "2022-07-17T14:51:02Z"}}]}

TASK [setup/flux : Get ssh known hosts] ****************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/flux : Helm repo add] **********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:44
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/flux : Install flux for over https connection] *********************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:52
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/flux : Install flux for over ssh connection] ***********************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:63
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [wait for pods to come up] ************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:75
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Prepare nodes and clients ports for ambassador] **************************
task path: /home/bevel/platforms/shared/configuration/kubernetes-env-setup.yaml:34
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.supplychain-net:7054', 'certificate': '/home/bevel/build/supplychain/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft'}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {"ansible_loop_var": "organizationItem", "changed": false, "organizationItem": {"ca_data": {"certificate": "/home/bevel/build/supplychain/server.crt", "url": "ca.supplychain-net:7054"}, "cloud_provider": "azure", "country": "UK", "external_url_suffix": "develop.local.com", "fabric_console": "enabled", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "supplychain", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net", "type": "ca"}, "consensus": {"name": "raft"}, "orderers": [{"consensus": "raft", "grpc": {"port": 7050}, "name": "orderer1", "orderer": null, "type": "orderer"}]}, "state": "London", "subject": "O=Orderer,L=51.50/-0.13/London,C=GB", "type": "orderer", "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.manufacturer-net:7054', 'certificate': '/home/bevel/build/manufacturer/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net:7051', 'certificate': '/home/bevel/build/manufacturer/peer0.crt', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain1', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "organizationItem", "changed": false, "organizationItem": {"ca_data": {"certificate": "/home/bevel/build/manufacturer/server.crt", "url": "ca.manufacturer-net:7054"}, "cloud_provider": "azure", "country": "CH", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "Zurich", "name": "manufacturer", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/manufacturer/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain1", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "enabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.manufacturer-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.manufacturer-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "Zurich", "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': '/home/bevel/build/carrier/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net:7051', 'certificate': '/home/bevel/build/carrier/peer0.crt', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "organizationItem", "changed": false, "organizationItem": {"ca_data": {"certificate": "/home/bevel/build/carrier/server.crt", "url": "ca.carrier-net:7054"}, "cloud_provider": "azure", "country": "GB", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "carrier", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/carrier/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "disabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.carrier-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.carrier-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "London", "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}

TASK [include_role : setup/ambassador] *****************************************
task path: /home/bevel/platforms/shared/configuration/kubernetes-env-setup.yaml:43
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.supplychain-net:7054', 'certificate': '/home/bevel/build/supplychain/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft'}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/supplychain/server.crt", "url": "ca.supplychain-net:7054"}, "cloud_provider": "azure", "country": "UK", "external_url_suffix": "develop.local.com", "fabric_console": "enabled", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "supplychain", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net", "type": "ca"}, "consensus": {"name": "raft"}, "orderers": [{"consensus": "raft", "grpc": {"port": 7050}, "name": "orderer1", "orderer": null, "type": "orderer"}]}, "state": "London", "subject": "O=Orderer,L=51.50/-0.13/London,C=GB", "type": "orderer", "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.manufacturer-net:7054', 'certificate': '/home/bevel/build/manufacturer/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net:7051', 'certificate': '/home/bevel/build/manufacturer/peer0.crt', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain1', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/manufacturer/server.crt", "url": "ca.manufacturer-net:7054"}, "cloud_provider": "azure", "country": "CH", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "Zurich", "name": "manufacturer", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/manufacturer/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain1", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "enabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.manufacturer-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.manufacturer-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "Zurich", "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': '/home/bevel/build/carrier/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net:7051', 'certificate': '/home/bevel/build/carrier/peer0.crt', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/carrier/server.crt", "url": "ca.carrier-net:7054"}, "cloud_provider": "azure", "country": "GB", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "carrier", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/carrier/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "disabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.carrier-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.carrier-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "London", "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}

TASK [include_role : setup/haproxy-ingress] ************************************
task path: /home/bevel/platforms/shared/configuration/kubernetes-env-setup.yaml:51
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.supplychain-net:7054', 'certificate': '/home/bevel/build/supplychain/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft'}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/supplychain/server.crt", "url": "ca.supplychain-net:7054"}, "cloud_provider": "azure", "country": "UK", "external_url_suffix": "develop.local.com", "fabric_console": "enabled", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "supplychain", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net", "type": "ca"}, "consensus": {"name": "raft"}, "orderers": [{"consensus": "raft", "grpc": {"port": 7050}, "name": "orderer1", "orderer": null, "type": "orderer"}]}, "state": "London", "subject": "O=Orderer,L=51.50/-0.13/London,C=GB", "type": "orderer", "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.manufacturer-net:7054', 'certificate': '/home/bevel/build/manufacturer/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net:7051', 'certificate': '/home/bevel/build/manufacturer/peer0.crt', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain1', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/manufacturer/server.crt", "url": "ca.manufacturer-net:7054"}, "cloud_provider": "azure", "country": "CH", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "Zurich", "name": "manufacturer", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/manufacturer/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain1", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "enabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.manufacturer-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.manufacturer-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "Zurich", "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': '/home/bevel/build/carrier/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net:7051', 'certificate': '/home/bevel/build/carrier/peer0.crt', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/carrier/server.crt", "url": "ca.carrier-net:7054"}, "cloud_provider": "azure", "country": "GB", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "carrier", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/carrier/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "disabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.carrier-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.carrier-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "London", "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************
META: ran handlers

TASK [Remove build directory] **************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:23
changed: [localhost] => {"changed": true, "path": "./build", "state": "absent"}

TASK [Create namespace and Vault auth for each organization] *******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:29

TASK [Checking if the namespace supplychain-net already exists] ****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:12
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace supplychain-net is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:13
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "3e3781467b99451b319066d41d04f59361cb913c", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"3e3781467b99451b319066d41d04f59361cb913c\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.IRMe38eshOFNiqK6H_-MMMrpvi2hqekrWRR1_-joSn0\"},\"name\":\"supplychain-net\"}}\n"}, "creationTimestamp": "2022-07-17T14:53:22Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.IRMe38eshOFNiqK6H_-MMMrpvi2hqekrWRR1_-joSn0", "kubernetes.io/metadata.name": "supplychain-net"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}, "f:kubernetes.io/metadata.name": {}}}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T14:53:22Z"}], "name": "supplychain-net", "resourceVersion": "67776", "uid": "330aafdc-420a-41a2-ae63-18619e94623e"}, "spec": {"finalizers": ["kubernetes"]}, "status": {"phase": "Active"}}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace supplychain-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:23
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace supplychain-net is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:38
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace supplychain-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:51
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create/namespace_vaultauth : Set Variable] *******************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:23
ok: [localhost] => {"ansible_facts": {"get_namespace": {"api_found": true, "changed": false, "failed": false, "resources": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "3e3781467b99451b319066d41d04f59361cb913c", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"3e3781467b99451b319066d41d04f59361cb913c\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.IRMe38eshOFNiqK6H_-MMMrpvi2hqekrWRR1_-joSn0\"},\"name\":\"supplychain-net\"}}\n"}, "creationTimestamp": "2022-07-17T14:53:22Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.IRMe38eshOFNiqK6H_-MMMrpvi2hqekrWRR1_-joSn0", "kubernetes.io/metadata.name": "supplychain-net"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}, "f:kubernetes.io/metadata.name": {}}}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T14:53:22Z"}], "name": "supplychain-net", "resourceVersion": "67776", "uid": "330aafdc-420a-41a2-ae63-18619e94623e"}, "spec": {"finalizers": ["kubernetes"]}, "status": {"phase": "Active"}}]}}, "changed": false}

TASK [Create namespaces] *******************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:30
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create vault reviewer service account for Organizations] *****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:44
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create vault auth service account for Organizations] *********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create clusterrolebinding for Ordrers] ***********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:72
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:80

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.607067", "end": "2022-07-17 16:13:08.867473", "msg": "", "rc": 0, "start": "2022-07-17 16:13:06.260406", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   0690c69..7c73aeb  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   0690c69..7c73aeb  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main 7c73aeb] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\n 2 files changed, 748 insertions(+), 1 deletion(-)\n create mode 100644 log.txt", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main 7c73aeb] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding", " 2 files changed, 748 insertions(+), 1 deletion(-)", " create mode 100644 log.txt"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main 7c73aeb] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 2 files changed, 748 insertions(+), 1 deletion(-)",
        " create mode 100644 log.txt"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   0690c69..7c73aeb  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost

TASK [Checking for the supplychain-net-role-tokenreview-binding] ***************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:92
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Including the check for ServiceAccount vault-reviewer in supplychain-net] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:105
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-reviewer is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:13
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:23
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-reviewer is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:38
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:51
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "ServiceAccount", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "1815564976fa3e9356fc8e55f0ca4c4187b7724d", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"1815564976fa3e9356fc8e55f0ca4c4187b7724d\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.WI70xe2cIJxl98yzu21kxkaxeA5ShQnYABhwxoZcjsA\"},\"name\":\"vault-reviewer\",\"namespace\":\"supplychain-net\"}}\n"}, "creationTimestamp": "2022-07-17T14:53:22Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.WI70xe2cIJxl98yzu21kxkaxeA5ShQnYABhwxoZcjsA"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:secrets": {".": {}, "k:{\"name\":\"vault-reviewer-token-w8ssw\"}": {".": {}, "f:name": {}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T14:53:22Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}}}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T14:53:22Z"}], "name": "vault-reviewer", "namespace": "supplychain-net", "resourceVersion": "67786", "uid": "862c1104-e5be-429e-909e-145b42a1fd4b"}, "secrets": [{"name": "vault-reviewer-token-w8ssw"}]}]}
META: role_complete for localhost

TASK [Including the check for ServiceAccount vault-auth in supplychain-net] ****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:117
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-auth is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:13
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:23
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-auth is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:38
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:51
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "ServiceAccount", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "c3d1e3a475c54a9b0e0a6e51942fe67b14347ea4", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"c3d1e3a475c54a9b0e0a6e51942fe67b14347ea4\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.WibrnbFMLtAXFmoHqiQ7yoY5qHSRdj3B4StcInH3s2k\"},\"name\":\"vault-auth\",\"namespace\":\"supplychain-net\"}}\n"}, "creationTimestamp": "2022-07-17T14:53:22Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.WibrnbFMLtAXFmoHqiQ7yoY5qHSRdj3B4StcInH3s2k"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:secrets": {".": {}, "k:{\"name\":\"vault-auth-token-pk8rh\"}": {".": {}, "f:name": {}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T14:53:22Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}}}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T14:53:22Z"}], "name": "vault-auth", "namespace": "supplychain-net", "resourceVersion": "67784", "uid": "f4ee318d-8bd0-4a67-9735-0106f97cb36c"}, "secrets": [{"name": "vault-auth-token-pk8rh"}]}]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Checking if the namespace manufacturer-net already exists] ***************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:12

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace manufacturer-net is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:13
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "232f42228953e7b7a2dc4a818e3b166b998f3fed", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"232f42228953e7b7a2dc4a818e3b166b998f3fed\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256._sr71fFK0Xm2kqAjgtd_7Y2m2J6HP7yA__y3JORZgrY\"},\"name\":\"manufacturer-net\"}}\n"}, "creationTimestamp": "2022-07-17T14:55:22Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256._sr71fFK0Xm2kqAjgtd_7Y2m2J6HP7yA__y3JORZgrY", "kubernetes.io/metadata.name": "manufacturer-net"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}, "f:kubernetes.io/metadata.name": {}}}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T14:55:22Z"}], "name": "manufacturer-net", "resourceVersion": "68172", "uid": "f83554e1-25ef-4ca3-81e6-c12a383b14fb"}, "spec": {"finalizers": ["kubernetes"]}, "status": {"phase": "Active"}}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace manufacturer-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:23
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace manufacturer-net is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:38
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace manufacturer-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:51
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create/namespace_vaultauth : Set Variable] *******************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:23
ok: [localhost] => {"ansible_facts": {"get_namespace": {"api_found": true, "changed": false, "failed": false, "resources": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "232f42228953e7b7a2dc4a818e3b166b998f3fed", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"232f42228953e7b7a2dc4a818e3b166b998f3fed\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256._sr71fFK0Xm2kqAjgtd_7Y2m2J6HP7yA__y3JORZgrY\"},\"name\":\"manufacturer-net\"}}\n"}, "creationTimestamp": "2022-07-17T14:55:22Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256._sr71fFK0Xm2kqAjgtd_7Y2m2J6HP7yA__y3JORZgrY", "kubernetes.io/metadata.name": "manufacturer-net"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}, "f:kubernetes.io/metadata.name": {}}}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T14:55:22Z"}], "name": "manufacturer-net", "resourceVersion": "68172", "uid": "f83554e1-25ef-4ca3-81e6-c12a383b14fb"}, "spec": {"finalizers": ["kubernetes"]}, "status": {"phase": "Active"}}]}}, "changed": false}

TASK [Create namespaces] *******************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:30
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create vault reviewer service account for Organizations] *****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:44
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create vault auth service account for Organizations] *********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create clusterrolebinding for Ordrers] ***********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:72
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:80

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.429236", "end": "2022-07-17 16:13:17.378440", "msg": "", "rc": 0, "start": "2022-07-17 16:13:14.949204", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   7c73aeb..7a9fa21  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   7c73aeb..7a9fa21  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main 7a9fa21] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\n 1 file changed, 144 insertions(+)", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main 7a9fa21] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding", " 1 file changed, 144 insertions(+)"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main 7a9fa21] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 1 file changed, 144 insertions(+)"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   7c73aeb..7a9fa21  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost

TASK [Checking for the manufacturer-net-role-tokenreview-binding] **************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:92
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Including the check for ServiceAccount vault-reviewer in manufacturer-net] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:105

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-reviewer is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:13
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:23
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-reviewer is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:38
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:51
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "ServiceAccount", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "d066e7b6fb5ac52209a9009c187424918b57443e", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"d066e7b6fb5ac52209a9009c187424918b57443e\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.vfb26ro71IOb1RHSmyWNt8_iCujkJIOIGRsw074k16o\"},\"name\":\"vault-reviewer\",\"namespace\":\"manufacturer-net\"}}\n"}, "creationTimestamp": "2022-07-17T14:55:22Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.vfb26ro71IOb1RHSmyWNt8_iCujkJIOIGRsw074k16o"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:secrets": {".": {}, "k:{\"name\":\"vault-reviewer-token-45pkj\"}": {".": {}, "f:name": {}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T14:55:22Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}}}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T14:55:22Z"}], "name": "vault-reviewer", "namespace": "manufacturer-net", "resourceVersion": "68184", "uid": "3b4c898e-0be7-465f-89ba-f667bf2445f8"}, "secrets": [{"name": "vault-reviewer-token-45pkj"}]}]}
META: role_complete for localhost

TASK [Including the check for ServiceAccount vault-auth in manufacturer-net] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:117

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-auth is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:13
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:23
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-auth is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:38
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:51
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "ServiceAccount", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "4651c9d3bdffdf2db6de8e491b4e9a1fba591846", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"4651c9d3bdffdf2db6de8e491b4e9a1fba591846\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.tumpJX2Us2WWRSnzn90asc6m3BTB0trXG_bYyrjv8L4\"},\"name\":\"vault-auth\",\"namespace\":\"manufacturer-net\"}}\n"}, "creationTimestamp": "2022-07-17T14:55:22Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.tumpJX2Us2WWRSnzn90asc6m3BTB0trXG_bYyrjv8L4"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:secrets": {".": {}, "k:{\"name\":\"vault-auth-token-4ps9j\"}": {".": {}, "f:name": {}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T14:55:22Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}}}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T14:55:22Z"}], "name": "vault-auth", "namespace": "manufacturer-net", "resourceVersion": "68182", "uid": "6ad92c11-ef2d-4029-94c9-c76007dc1f9c"}, "secrets": [{"name": "vault-auth-token-4ps9j"}]}]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Checking if the namespace carrier-net already exists] ********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:12

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace carrier-net is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:13
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "9caeb41821a229aac426fa223fc4c5e4a1457332", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"9caeb41821a229aac426fa223fc4c5e4a1457332\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.YuKbj223uaHS-8etYgjS8tf9UifVidH7NL7LW97j_PU\"},\"name\":\"carrier-net\"}}\n"}, "creationTimestamp": "2022-07-17T14:57:25Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.YuKbj223uaHS-8etYgjS8tf9UifVidH7NL7LW97j_PU", "kubernetes.io/metadata.name": "carrier-net"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}, "f:kubernetes.io/metadata.name": {}}}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T14:57:25Z"}], "name": "carrier-net", "resourceVersion": "68576", "uid": "660c5013-2fb3-4502-8665-2638aa5ce0a4"}, "spec": {"finalizers": ["kubernetes"]}, "status": {"phase": "Active"}}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:23
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace carrier-net is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:38
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:51
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create/namespace_vaultauth : Set Variable] *******************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:23
ok: [localhost] => {"ansible_facts": {"get_namespace": {"api_found": true, "changed": false, "failed": false, "resources": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "9caeb41821a229aac426fa223fc4c5e4a1457332", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"9caeb41821a229aac426fa223fc4c5e4a1457332\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.YuKbj223uaHS-8etYgjS8tf9UifVidH7NL7LW97j_PU\"},\"name\":\"carrier-net\"}}\n"}, "creationTimestamp": "2022-07-17T14:57:25Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.YuKbj223uaHS-8etYgjS8tf9UifVidH7NL7LW97j_PU", "kubernetes.io/metadata.name": "carrier-net"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}, "f:kubernetes.io/metadata.name": {}}}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T14:57:25Z"}], "name": "carrier-net", "resourceVersion": "68576", "uid": "660c5013-2fb3-4502-8665-2638aa5ce0a4"}, "spec": {"finalizers": ["kubernetes"]}, "status": {"phase": "Active"}}]}}, "changed": false}

TASK [Create namespaces] *******************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:30
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create vault reviewer service account for Organizations] *****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:44
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create vault auth service account for Organizations] *********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create clusterrolebinding for Ordrers] ***********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:72
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:80

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.406890", "end": "2022-07-17 16:13:26.198876", "msg": "", "rc": 0, "start": "2022-07-17 16:13:23.791986", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   7a9fa21..97521d5  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   7a9fa21..97521d5  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main 97521d5] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\n 1 file changed, 135 insertions(+)", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main 97521d5] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding", " 1 file changed, 135 insertions(+)"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main 97521d5] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 1 file changed, 135 insertions(+)"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   7a9fa21..97521d5  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost

TASK [Checking for the carrier-net-role-tokenreview-binding] *******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:92
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Including the check for ServiceAccount vault-reviewer in carrier-net] ****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:105

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-reviewer is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:13
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:23
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-reviewer is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:38
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:51
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "ServiceAccount", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "b58363452cf175c51393cb14895aa328f29926fb", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"b58363452cf175c51393cb14895aa328f29926fb\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.tHxyhRAyNW-IgH_c1xKvrd3n1zb9DYhKVisIJDA0fcU\"},\"name\":\"vault-reviewer\",\"namespace\":\"carrier-net\"}}\n"}, "creationTimestamp": "2022-07-17T14:57:25Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.tHxyhRAyNW-IgH_c1xKvrd3n1zb9DYhKVisIJDA0fcU"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:secrets": {".": {}, "k:{\"name\":\"vault-reviewer-token-c58fp\"}": {".": {}, "f:name": {}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T14:57:25Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}}}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T14:57:25Z"}], "name": "vault-reviewer", "namespace": "carrier-net", "resourceVersion": "68586", "uid": "7a24a4fa-a29b-4219-9bb6-a9691d72ad28"}, "secrets": [{"name": "vault-reviewer-token-c58fp"}]}]}
META: role_complete for localhost

TASK [Including the check for ServiceAccount vault-auth in carrier-net] ********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:117

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-auth is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:13
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:23
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-auth is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:38
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:51
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "ServiceAccount", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "1f1e2eea45453e92f0290eba38f04db3a5b9e630", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"1f1e2eea45453e92f0290eba38f04db3a5b9e630\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.WJM3Wl3RRTm53NxsYh1jBuh55cJe6Xh-1He7iqeV2ek\"},\"name\":\"vault-auth\",\"namespace\":\"carrier-net\"}}\n"}, "creationTimestamp": "2022-07-17T14:57:25Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.WJM3Wl3RRTm53NxsYh1jBuh55cJe6Xh-1He7iqeV2ek"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:secrets": {".": {}, "k:{\"name\":\"vault-auth-token-t6482\"}": {".": {}, "f:name": {}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T14:57:25Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}}}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T14:57:25Z"}], "name": "vault-auth", "namespace": "carrier-net", "resourceVersion": "68583", "uid": "1bf369e3-e820-4501-a6be-2f2de86f41fb"}, "secrets": [{"name": "vault-auth-token-t6482"}]}]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Setup Vault Kubernetes for each organization] ****************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:40

TASK [Waiting for the namespace supplychain-net to be created] *****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:13
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace supplychain-net is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:13
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace supplychain-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:23
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "3e3781467b99451b319066d41d04f59361cb913c", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"3e3781467b99451b319066d41d04f59361cb913c\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.IRMe38eshOFNiqK6H_-MMMrpvi2hqekrWRR1_-joSn0\"},\"name\":\"supplychain-net\"}}\n"}, "creationTimestamp": "2022-07-17T14:53:22Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.IRMe38eshOFNiqK6H_-MMMrpvi2hqekrWRR1_-joSn0", "kubernetes.io/metadata.name": "supplychain-net"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}, "f:kubernetes.io/metadata.name": {}}}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T14:53:22Z"}], "name": "supplychain-net", "resourceVersion": "67776", "uid": "330aafdc-420a-41a2-ae63-18619e94623e"}, "spec": {"finalizers": ["kubernetes"]}, "status": {"phase": "Active"}}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace supplychain-net is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:38
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace supplychain-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:51
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Create docker credentials secret] ****************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:23
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s

TASK [create/k8s_secrets : Check if root token exists in the namespace] ********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:13
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Put root token of every organization] ***************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:25
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Checking if the docker credentials already exists] ***********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:43
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "data": {".dockerconfigjson": "eyJhdXRocyI6IHsiaW5kZXguZG9ja2VyLmlvL2h5cGVybGVkZ2VybGFicyI6IHsidXNlcm5hbWUiOiAiYWRpdHlham9zaGkxMiIsICJwYXNzd29yZCI6ICJGYXJjcnlAMjAxNCIsICJlbWFpbCI6ICJ0ZXN0QGFiYy5tYWlsIiwgImF1dGgiOiAiWVdScGRIbGhhbTl6YUdreE1qcEdZWEpqY25sQU1qQXhOQT09In19fQ=="}, "kind": "Secret", "metadata": {"creationTimestamp": "2022-07-17T14:57:37Z", "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:data": {".": {}, "f:.dockerconfigjson": {}}, "f:type": {}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2022-07-17T14:57:37Z"}], "name": "regcred", "namespace": "supplychain-net", "resourceVersion": "68625", "uid": "c3e18f3f-ed9c-49e5-a9b9-217dee9d6a4f"}, "type": "kubernetes.io/dockerconfigjson"}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:51
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:55
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:59
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the docker pull credentials] *****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:65
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check Ambassador cred exists] ***********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:83
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca certs already created] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:97
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca key already created] ********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:112
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the Ambassador credentials] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:127
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check Ambassador cred exists for orderers] **********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:151
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca certs already created for orderers] *****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:165
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca key already created for orderers] *******
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:180
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the Ambassador credentials for orderers] *****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:195
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if endorser certs secret exists in the namespace] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:219
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create endorser certs secret exists in the namespace] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:231
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Create vault token secret] ***********************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:33
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s

TASK [create/k8s_secrets : Check if root token exists in the namespace] ********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:13
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": []}

TASK [create/k8s_secrets : Put root token of every organization] ***************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:25
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s
changed: [localhost] => {"changed": true, "method": "create", "result": {"apiVersion": "v1", "data": {"config.yaml": "", "token": "aHZzLnFwYjlUeVVWSWtkQnVCRE1ieUFtQ0VIeQ=="}, "kind": "Secret", "metadata": {"creationTimestamp": "2022-07-17T16:13:37Z", "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:data": {".": {}, "f:config.yaml": {}, "f:token": {}}, "f:type": {}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2022-07-17T16:13:37Z"}], "name": "roottoken", "namespace": "supplychain-net", "resourceVersion": "85771", "uid": "9a1b8240-7f06-4aa7-a983-3e1abe552a15"}, "type": "Opaque"}}

TASK [Checking if the docker credentials already exists] ***********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:43

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "data": {".dockerconfigjson": "eyJhdXRocyI6IHsiaW5kZXguZG9ja2VyLmlvL2h5cGVybGVkZ2VybGFicyI6IHsidXNlcm5hbWUiOiAiYWRpdHlham9zaGkxMiIsICJwYXNzd29yZCI6ICJGYXJjcnlAMjAxNCIsICJlbWFpbCI6ICJ0ZXN0QGFiYy5tYWlsIiwgImF1dGgiOiAiWVdScGRIbGhhbTl6YUdreE1qcEdZWEpqY25sQU1qQXhOQT09In19fQ=="}, "kind": "Secret", "metadata": {"creationTimestamp": "2022-07-17T14:57:37Z", "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:data": {".": {}, "f:.dockerconfigjson": {}}, "f:type": {}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2022-07-17T14:57:37Z"}], "name": "regcred", "namespace": "supplychain-net", "resourceVersion": "68625", "uid": "c3e18f3f-ed9c-49e5-a9b9-217dee9d6a4f"}, "type": "kubernetes.io/dockerconfigjson"}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:51
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:55
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:59
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the docker pull credentials] *****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:65
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check Ambassador cred exists] ***********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:83
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca certs already created] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:97
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca key already created] ********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:112
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the Ambassador credentials] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:127
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check Ambassador cred exists for orderers] **********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:151
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca certs already created for orderers] *****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:165
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca key already created for orderers] *******
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:180
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the Ambassador credentials for orderers] *****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:195
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if endorser certs secret exists in the namespace] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:219
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create endorser certs secret exists in the namespace] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:231
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [setup/vault_kubernetes : Get the kubernetes server url] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:44
changed: [localhost] => {"changed": true, "cmd": "KUBECONFIG=/home/bevel/build/config kubectl config view --minify | grep server | cut -f 2- -d \":\" | tr -d \" \"\n", "delta": "0:00:00.111741", "end": "2022-07-17 16:13:40.612552", "msg": "", "rc": 0, "start": "2022-07-17 16:13:40.500811", "stderr": "", "stderr_lines": [], "stdout": "https://bevel-dns-6a0e538d.hcp.centralindia.azmk8s.io:443", "stdout_lines": ["https://bevel-dns-6a0e538d.hcp.centralindia.azmk8s.io:443"]}

TASK [Create value file for vault_kubernetes] **********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:51

TASK [helm_component : Ensures /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/supplychain dir exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:14
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/supplychain", "size": 4096, "state": "directory", "uid": 0}

TASK [helm_component : create value file for supplychain-vaultkubernetes-job] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:23
ok: [localhost] => {"changed": false, "checksum": "a0673a62a3846d412fd5cdfe2d093a87d172ddde", "dest": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/supplychain/supplychain-vaultkubernetes-job.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/supplychain/supplychain-vaultkubernetes-job.yaml", "size": 966, "state": "file", "uid": 0}

TASK [Helm lint] ***************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:32

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
ok: [localhost] => {"changed": false, "stat": {"atime": 1658069865.2807546, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "checksum": "a0673a62a3846d412fd5cdfe2d093a87d172ddde", "ctime": 1658069864.7687552, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626751, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658069864.4967554, "nlink": 1, "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/supplychain/supplychain-vaultkubernetes-job.yaml", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 966, "uid": 0, "version": "3436199913", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [Check or create test directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:22
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"exists": false}}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
changed: [localhost] => {"changed": true, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "./build/test", "size": 4096, "state": "directory", "uid": 0}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:31
ok: [localhost] => {"ansible_facts": {"apiVersion": "helm.fluxcd.io/v1", "kind": "HelmRelease", "metadata": {"annotations": {"fluxcd.io/automated": "false"}, "name": "supplychain-vaultkubenertes-job", "namespace": "supplychain-net"}, "spec": {"chart": {"git": "ssh://git@github.com/adityajoshi12/bevel.git", "path": "platforms/hyperledger-fabric/charts/vault_kubernetes", "ref": "test"}, "releaseName": "supplychain-vaultkubenertes-job", "values": {"k8s": {"kubernetes_url": "https://bevel-dns-6a0e538d.hcp.centralindia.azmk8s.io:443"}, "metadata": {"component_type": "orderer", "images": {"alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0"}, "name": "supplychain", "namespace": "supplychain-net"}, "vault": {"address": "http://20.197.63.209:8200", "authpath": "devsupplychain-net-auth", "imagesecretname": "regcred", "policy": "vault-crypto-orderer-supplychain-net-ro", "reviewer_service": "vault-reviewer", "role": "vault-role", "secret_path": "secretv2", "serviceaccountname": "vault-auth"}}}}, "ansible_included_var_files": ["/home/bevel/platforms/hyperledger-fabric/releases/dev/supplychain/supplychain/supplychain-vaultkubernetes-job.yaml"], "changed": false}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:36
ok: [localhost] => {"changed": false, "checksum": "3340b7fb60e525b22649b78cc9f82f570a3bd2a7", "dest": "./build/test/supplychain-vaultkubenertes-job.yaml", "gid": 0, "group": "root", "md5sum": "bca10e094416db0f924c9adb0edd00e7", "mode": "0644", "owner": "root", "size": 540, "src": "/root/.ansible/tmp/ansible-tmp-1658074423.9583988-31368-51350582727466/source", "state": "file", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:42
changed: [localhost] => {"changed": true, "cmd": "helm lint -f \"./build/test/supplychain-vaultkubenertes-job.yaml\" \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/vault_kubernetes\"\n", "delta": "0:00:00.086757", "end": "2022-07-17 16:13:45.012022", "msg": "", "rc": 0, "start": "2022-07-17 16:13:44.925265", "stderr": "", "stderr_lines": [], "stdout": "==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/vault_kubernetes\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, 0 chart(s) failed", "stdout_lines": ["==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/vault_kubernetes", "[INFO] Chart.yaml: icon is recommended", "", "1 chart(s) linted, 0 chart(s) failed"]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:70

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing vault_kubernetes files\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.446561", "end": "2022-07-17 16:13:48.574376", "msg": "", "rc": 0, "start": "2022-07-17 16:13:46.127815", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   97521d5..ad39f1f  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   97521d5..ad39f1f  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main ad39f1f] [ci skip] Pushing vault_kubernetes files\n 1 file changed, 416 insertions(+)", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main ad39f1f] [ci skip] Pushing vault_kubernetes files", " 1 file changed, 416 insertions(+)"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main ad39f1f] [ci skip] Pushing vault_kubernetes files",
        " 1 file changed, 416 insertions(+)"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   97521d5..ad39f1f  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost

TASK [Check if vault_kubernetes job is completed] ******************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:80
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job supplychain-vaultkubenertes-job in supplychain-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:11
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2022-07-17T14:59:36Z", "generateName": "supplychain-vaultkubenertes-job-", "labels": {"app": "supplychain-vaultkubenertes-job", "app.kubernetes.io/instance": "supplychain-vaultkubenertes-job", "app.kubernetes.io/managed-by": "Helm", "app.kubernetes.io/name": "supplychain-vaultkubenertes-job", "controller-uid": "fd8f81b2-8ab1-45fb-b909-ebe018db6524", "helm.sh/chart": "vault_kubernetes-0.2.0", "job-name": "supplychain-vaultkubenertes-job"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:app": {}, "f:app.kubernetes.io/instance": {}, "f:app.kubernetes.io/managed-by": {}, "f:app.kubernetes.io/name": {}, "f:controller-uid": {}, "f:helm.sh/chart": {}, "f:job-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"fd8f81b2-8ab1-45fb-b909-ebe018db6524\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {"f:containers": {"k:{\"name\":\"vault-kubernetes\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"COMPONENT_TYPE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"KUBERNETES_AUTH_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"KUBERNETES_URL\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"NAMESPACE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"POLICIES_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"POLICY_NAME\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"ROOT_TOKEN\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:secretKeyRef": {".": {}, "f:key": {}, "f:name": {}}}}, "k:{\"name\":\"VAULT_ADDR\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ROLE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SA\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/policies/policies-config-orderer.json.tmpl\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:subPath": {}}, "k:{\"mountPath\":\"/policies/policies-config-peer.json.tmpl\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:subPath": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:imagePullSecrets": {".": {}, "k:{\"name\":\"regcred\"}": {".": {}, "f:name": {}}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"policies\"}": {".": {}, "f:emptyDir": {".": {}, "f:medium": {}}, "f:name": {}}, "k:{\"name\":\"policies-config-orderer\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:items": {}, "f:name": {}}, "f:name": {}}, "k:{\"name\":\"policies-config-peer\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:items": {}, "f:name": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T14:59:36Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.24\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "time": "2022-07-17T14:59:40Z"}], "name": "supplychain-vaultkubenertes-job-ccpq6", "namespace": "supplychain-net", "ownerReferences": [{"apiVersion": "batch/v1", "blockOwnerDeletion": true, "controller": true, "kind": "Job", "name": "supplychain-vaultkubenertes-job", "uid": "fd8f81b2-8ab1-45fb-b909-ebe018db6524"}], "resourceVersion": "69042", "uid": "b6b67adf-3008-40c6-a872-945da0fa6bc6"}, "spec": {"containers": [{"args": ["apk update && apk add jq curl;\n\nvalidateVaultResponse () {\n  if [ ${1} != 200 -a ${1} != 204 ]; then\n    echo \"ERROR: Unable to retrieve. Http status: ${1}\"\n    exit 1\n  fi\n};\n\n# Check if authpath already created\nvault_auth_check=$(curl --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  ${VAULT_ADDR}/v1/sys/auth | jq '.\"devsupplychain-net-auth/\"');\n\nif [ \"$vault_auth_check\" == 'null' ]; then\n  echo \"authpath does not exist. Creating ...\"\n  # This command enables the path for the organizations and orderers on vault\n  curl \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  --request POST \\\n  --data '{\"type\": \"kubernetes\"}' \\\n  ${VAULT_ADDR}/v1/sys/auth/${KUBERNETES_AUTH_PATH}\n\n  while IFS= read -r line\n  do\n    echo \"$line\\n\"\n  done < /var/run/secrets/kubernetes.io/serviceaccount/ca.crt > ca_formatted.txt\n\n  KUBE_SA_CRT_ONELINE=$(cat ca_formatted.txt)\n  export REVIEWER_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token);\n\n  # This echo get the certificate for the cluster\n  echo \"\n    {\n      \\\"token_reviewer_jwt\\\": \\\"${REVIEWER_TOKEN}\\\",\n      \\\"kubernetes_host\\\": \\\"${KUBERNETES_URL}\\\",\n      \\\"disable_iss_validation\\\":\\\"true\\\",\n      \\\"kubernetes_ca_cert\\\": \\\"${KUBE_SA_CRT_ONELINE}\\\"\n    }\" > payload.json\n\n  # This command writtes the Service Account token to the vault for Organisations\n  curl \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  --request POST \\\n  --data @payload.json \\\n  ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/config\n\n  # Check auth\n  response_status=$(curl -s -o /dev/null -w \"%{http_code}\" \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/config);\n\n  rm payload.json\n\n  validateVaultResponse ${response_status};\nfi;\n\n# Check if policy already created\nvault_policy_check=$(curl --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  ${VAULT_ADDR}/v1/sys/policy/${POLICY_NAME} | jq -r '.name');\n\nif [ \"$vault_policy_check\" == 'null' ]; then\n  echo \"vaultpolicy does not exist. Creating ...\"\n  mkdir -p ${POLICIES_PATH}\n\n  if [ $COMPONENT_TYPE == 'orderer' ]; then\n    \n    # This command writes the policies to the vault\n    curl \\\n    --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n    --request POST \\\n    --data @${POLICIES_PATH}/policies-config-orderer.json.tmpl \\\n    ${VAULT_ADDR}/v1/sys/policy/${POLICY_NAME}\n\n  fi;\n\n  if [ $COMPONENT_TYPE == 'peer' ]; then\n\n    # This command writes the policies to the vault\n    curl \\\n    --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n    --request POST \\\n    --data @${POLICIES_PATH}/policies-config-peer.json.tmpl \\\n    ${VAULT_ADDR}/v1/sys/policy/${POLICY_NAME}\n\n  fi;\n\n  # Check policy\n  response_status=$(curl -s -o /dev/null -w \"%{http_code}\" \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  ${VAULT_ADDR}/v1/sys/policy/${POLICY_NAME});\n\n  validateVaultResponse ${response_status};\nfi;\n\nif [ \"$vault_auth_check\" == 'null' ]; then\n  echo \"Need vault auth role\"\n\n  echo \" {\\\"bound_service_account_names\\\": \\\"${VAULT_SA}\\\", \\\n  \\\"bound_service_account_namespaces\\\": \\\"${NAMESPACE}\\\", \\\n  \\\"policies\\\": [\\\"${POLICY_NAME}\\\"], \\\"ttl\\\": \\\"1200s\\\"}\" > payload.json\n\n  curl \\\n  -s -o /dev/null -w \"%{http_code}\" \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  --request POST \\\n  --data @payload.json \\\n  ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/role/${VAULT_ROLE}\n\n  # Check role\n  response_status=$(curl -s -o /dev/null -w \"%{http_code}\" \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/role/${VAULT_ROLE});\n\n  rm payload.json\n\n  validateVaultResponse ${response_status};\nfi;"], "command": ["sh", "-c"], "env": [{"name": "VAULT_ADDR", "value": "http://20.197.63.209:8200"}, {"name": "VAULT_SECRET_PATH", "value": "secretv2"}, {"name": "KUBERNETES_AUTH_PATH", "value": "devsupplychain-net-auth"}, {"name": "VAULT_ROLE", "value": "vault-role"}, {"name": "VAULT_SA", "value": "vault-auth"}, {"name": "KUBERNETES_URL", "value": "https://bevel-dns-6a0e538d.hcp.centralindia.azmk8s.io:443"}, {"name": "POLICY_NAME", "value": "vault-crypto-orderer-supplychain-net-ro"}, {"name": "COMPONENT_TYPE", "value": "orderer"}, {"name": "NAMESPACE", "value": "supplychain-net"}, {"name": "POLICIES_PATH", "value": "/policies"}, {"name": "ROOT_TOKEN", "valueFrom": {"secretKeyRef": {"key": "token", "name": "roottoken"}}}], "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "imagePullPolicy": "IfNotPresent", "name": "vault-kubernetes", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/policies/policies-config-orderer.json.tmpl", "name": "policies-config-orderer", "subPath": "policies-config-orderer.json.tmpl"}, {"mountPath": "/policies/policies-config-peer.json.tmpl", "name": "policies-config-peer", "subPath": "policies-config-peer.json.tmpl"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-svpxp", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "imagePullSecrets": [{"name": "regcred"}], "nodeName": "aks-agentpool-84293659-vmss000001", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "OnFailure", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "vault-reviewer", "serviceAccountName": "vault-reviewer", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"emptyDir": {"medium": "Memory"}, "name": "policies"}, {"configMap": {"defaultMode": 420, "items": [{"key": "policies-config-orderer.json.tmpl", "path": "policies-config-orderer.json.tmpl"}], "name": "policies-config-orderer"}, "name": "policies-config-orderer"}, {"configMap": {"defaultMode": 420, "items": [{"key": "policies-config-peer.json.tmpl", "path": "policies-config-peer.json.tmpl"}], "name": "policies-config-orderer"}, "name": "policies-config-peer"}, {"name": "kube-api-access-svpxp", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2022-07-17T14:59:36Z", "reason": "PodCompleted", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T14:59:40Z", "reason": "PodCompleted", "status": "False", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T14:59:40Z", "reason": "PodCompleted", "status": "False", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T14:59:36Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://54077e4bc330f97a3172e915118060c8b42076c3385769af7b629fc7816313a6", "image": "docker.io/hyperledgerlabs/alpine-utils:1.0", "imageID": "docker.io/hyperledgerlabs/alpine-utils@sha256:cab1d1566ddaa28e482b5eeda7426791bdf607cee41e2b752ccc566553810f74", "lastState": {}, "name": "vault-kubernetes", "ready": false, "restartCount": 0, "started": false, "state": {"terminated": {"containerID": "containerd://54077e4bc330f97a3172e915118060c8b42076c3385769af7b629fc7816313a6", "exitCode": 0, "finishedAt": "2022-07-17T14:59:40Z", "reason": "Completed", "startedAt": "2022-07-17T14:59:37Z"}}}], "hostIP": "10.224.0.5", "phase": "Succeeded", "podIP": "10.244.0.24", "podIPs": [{"ip": "10.244.0.24"}], "qosClass": "BestEffort", "startTime": "2022-07-17T14:59:36Z"}}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:28
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job supplychain-vaultkubenertes-job in supplychain-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:42
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Delete vault token secret] ***********************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:91
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s

TASK [delete/k8s_secrets : Delete vault roottoken] *****************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/delete/k8s_secrets/tasks/main.yaml:8
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s
changed: [localhost] => {"changed": true, "method": "delete", "result": {"apiVersion": "v1", "details": {"kind": "secrets", "name": "roottoken", "uid": "9a1b8240-7f06-4aa7-a983-3e1abe552a15"}, "kind": "Status", "metadata": {}, "status": "Success"}}
META: role_complete for localhost
META: role_complete for localhost

TASK [Waiting for the namespace manufacturer-net to be created] ****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:13

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace manufacturer-net is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:13
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace manufacturer-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:23
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "232f42228953e7b7a2dc4a818e3b166b998f3fed", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"232f42228953e7b7a2dc4a818e3b166b998f3fed\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256._sr71fFK0Xm2kqAjgtd_7Y2m2J6HP7yA__y3JORZgrY\"},\"name\":\"manufacturer-net\"}}\n"}, "creationTimestamp": "2022-07-17T14:55:22Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256._sr71fFK0Xm2kqAjgtd_7Y2m2J6HP7yA__y3JORZgrY", "kubernetes.io/metadata.name": "manufacturer-net"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}, "f:kubernetes.io/metadata.name": {}}}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T14:55:22Z"}], "name": "manufacturer-net", "resourceVersion": "68172", "uid": "f83554e1-25ef-4ca3-81e6-c12a383b14fb"}, "spec": {"finalizers": ["kubernetes"]}, "status": {"phase": "Active"}}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace manufacturer-net is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:38
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace manufacturer-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:51
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Create docker credentials secret] ****************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:23

TASK [create/k8s_secrets : Check if root token exists in the namespace] ********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:13
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Put root token of every organization] ***************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:25
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Checking if the docker credentials already exists] ***********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:43

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "data": {".dockerconfigjson": "eyJhdXRocyI6IHsiaW5kZXguZG9ja2VyLmlvL2h5cGVybGVkZ2VybGFicyI6IHsidXNlcm5hbWUiOiAiYWRpdHlham9zaGkxMiIsICJwYXNzd29yZCI6ICJGYXJjcnlAMjAxNCIsICJlbWFpbCI6ICJ0ZXN0QGFiYy5tYWlsIiwgImF1dGgiOiAiWVdScGRIbGhhbTl6YUdreE1qcEdZWEpqY25sQU1qQXhOQT09In19fQ=="}, "kind": "Secret", "metadata": {"creationTimestamp": "2022-07-17T15:00:04Z", "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:data": {".": {}, "f:.dockerconfigjson": {}}, "f:type": {}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2022-07-17T15:00:04Z"}], "name": "regcred", "namespace": "manufacturer-net", "resourceVersion": "69124", "uid": "70e5b11b-c3a9-430b-90f5-0bc44fc1b9af"}, "type": "kubernetes.io/dockerconfigjson"}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:51
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:55
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:59
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the docker pull credentials] *****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:65
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check Ambassador cred exists] ***********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:83
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca certs already created] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:97
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca key already created] ********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:112
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the Ambassador credentials] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:127
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check Ambassador cred exists for orderers] **********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:151
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca certs already created for orderers] *****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:165
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca key already created for orderers] *******
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:180
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the Ambassador credentials for orderers] *****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:195
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if endorser certs secret exists in the namespace] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:219
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create endorser certs secret exists in the namespace] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:231
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Create vault token secret] ***********************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:33

TASK [create/k8s_secrets : Check if root token exists in the namespace] ********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:13
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": []}

TASK [create/k8s_secrets : Put root token of every organization] ***************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:25
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s
changed: [localhost] => {"changed": true, "method": "create", "result": {"apiVersion": "v1", "data": {"config.yaml": "", "token": "aHZzLnFwYjlUeVVWSWtkQnVCRE1ieUFtQ0VIeQ=="}, "kind": "Secret", "metadata": {"creationTimestamp": "2022-07-17T16:13:59Z", "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:data": {".": {}, "f:config.yaml": {}, "f:token": {}}, "f:type": {}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2022-07-17T16:13:59Z"}], "name": "roottoken", "namespace": "manufacturer-net", "resourceVersion": "85849", "uid": "48b3b8ea-c2e5-4c5f-bad2-9b10956d4ae5"}, "type": "Opaque"}}

TASK [Checking if the docker credentials already exists] ***********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:43

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "data": {".dockerconfigjson": "eyJhdXRocyI6IHsiaW5kZXguZG9ja2VyLmlvL2h5cGVybGVkZ2VybGFicyI6IHsidXNlcm5hbWUiOiAiYWRpdHlham9zaGkxMiIsICJwYXNzd29yZCI6ICJGYXJjcnlAMjAxNCIsICJlbWFpbCI6ICJ0ZXN0QGFiYy5tYWlsIiwgImF1dGgiOiAiWVdScGRIbGhhbTl6YUdreE1qcEdZWEpqY25sQU1qQXhOQT09In19fQ=="}, "kind": "Secret", "metadata": {"creationTimestamp": "2022-07-17T15:00:04Z", "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:data": {".": {}, "f:.dockerconfigjson": {}}, "f:type": {}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2022-07-17T15:00:04Z"}], "name": "regcred", "namespace": "manufacturer-net", "resourceVersion": "69124", "uid": "70e5b11b-c3a9-430b-90f5-0bc44fc1b9af"}, "type": "kubernetes.io/dockerconfigjson"}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:51
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:55
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:59
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the docker pull credentials] *****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:65
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check Ambassador cred exists] ***********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:83
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca certs already created] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:97
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca key already created] ********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:112
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the Ambassador credentials] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:127
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check Ambassador cred exists for orderers] **********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:151
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca certs already created for orderers] *****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:165
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca key already created for orderers] *******
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:180
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the Ambassador credentials for orderers] *****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:195
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if endorser certs secret exists in the namespace] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:219
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create endorser certs secret exists in the namespace] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:231
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [setup/vault_kubernetes : Get the kubernetes server url] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:44
changed: [localhost] => {"changed": true, "cmd": "KUBECONFIG=/home/bevel/build/config kubectl config view --minify | grep server | cut -f 2- -d \":\" | tr -d \" \"\n", "delta": "0:00:00.094297", "end": "2022-07-17 16:14:02.364223", "msg": "", "rc": 0, "start": "2022-07-17 16:14:02.269926", "stderr": "", "stderr_lines": [], "stdout": "https://bevel-dns-6a0e538d.hcp.centralindia.azmk8s.io:443", "stdout_lines": ["https://bevel-dns-6a0e538d.hcp.centralindia.azmk8s.io:443"]}

TASK [Create value file for vault_kubernetes] **********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:51

TASK [helm_component : Ensures /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer dir exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:14
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer", "size": 4096, "state": "directory", "uid": 0}

TASK [helm_component : create value file for manufacturer-vaultkubernetes-job] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:23
ok: [localhost] => {"changed": false, "checksum": "1eb6f7f17d6fb67e3a1149c9857b470b172eb9fb", "dest": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer/manufacturer-vaultkubernetes-job.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer/manufacturer-vaultkubernetes-job.yaml", "size": 967, "state": "file", "uid": 0}

TASK [Helm lint] ***************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:32

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
ok: [localhost] => {"changed": false, "stat": {"atime": 1658070013.7165685, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "checksum": "1eb6f7f17d6fb67e3a1149c9857b470b172eb9fb", "ctime": 1658070013.1845691, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626756, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658070012.8845696, "nlink": 1, "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer/manufacturer-vaultkubernetes-job.yaml", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 967, "uid": 0, "version": "1169477485", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [Check or create test directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:22

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"atime": 1658074423.378228, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "ctime": 1658074424.4862227, "dev": 64513, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626754, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658074424.4862227, "nlink": 2, "path": "./build/test", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "version": "4197237393", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:31
ok: [localhost] => {"ansible_facts": {"apiVersion": "helm.fluxcd.io/v1", "kind": "HelmRelease", "metadata": {"annotations": {"fluxcd.io/automated": "false"}, "name": "manufacturer-vaultkubenertes-job", "namespace": "manufacturer-net"}, "spec": {"chart": {"git": "ssh://git@github.com/adityajoshi12/bevel.git", "path": "platforms/hyperledger-fabric/charts/vault_kubernetes", "ref": "test"}, "releaseName": "manufacturer-vaultkubenertes-job", "values": {"k8s": {"kubernetes_url": "https://bevel-dns-6a0e538d.hcp.centralindia.azmk8s.io:443"}, "metadata": {"component_type": "peer", "images": {"alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0"}, "name": "manufacturer", "namespace": "manufacturer-net"}, "vault": {"address": "http://20.197.63.209:8200", "authpath": "devmanufacturer-net-auth", "imagesecretname": "regcred", "policy": "vault-crypto-peer-manufacturer-net-ro", "reviewer_service": "vault-reviewer", "role": "vault-role", "secret_path": "secretv2", "serviceaccountname": "vault-auth"}}}}, "ansible_included_var_files": ["/home/bevel/platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer/manufacturer-vaultkubernetes-job.yaml"], "changed": false}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:36
ok: [localhost] => {"changed": false, "checksum": "bd19b5d55b73e7b7fe971baee50651b45231d0b9", "dest": "./build/test/manufacturer-vaultkubenertes-job.yaml", "gid": 0, "group": "root", "md5sum": "50c11ac50a6e80be824f7ea4f6a6df6b", "mode": "0644", "owner": "root", "size": 538, "src": "/root/.ansible/tmp/ansible-tmp-1658074445.2659812-31987-47454597393833/source", "state": "file", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:42
changed: [localhost] => {"changed": true, "cmd": "helm lint -f \"./build/test/manufacturer-vaultkubenertes-job.yaml\" \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/vault_kubernetes\"\n", "delta": "0:00:00.095906", "end": "2022-07-17 16:14:06.319611", "msg": "", "rc": 0, "start": "2022-07-17 16:14:06.223705", "stderr": "", "stderr_lines": [], "stdout": "==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/vault_kubernetes\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, 0 chart(s) failed", "stdout_lines": ["==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/vault_kubernetes", "[INFO] Chart.yaml: icon is recommended", "", "1 chart(s) linted, 0 chart(s) failed"]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:70

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing vault_kubernetes files\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.454263", "end": "2022-07-17 16:14:09.761130", "msg": "", "rc": 0, "start": "2022-07-17 16:14:07.306867", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   ad39f1f..b4ba6a9  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   ad39f1f..b4ba6a9  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main b4ba6a9] [ci skip] Pushing vault_kubernetes files\n 1 file changed, 371 insertions(+)", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main b4ba6a9] [ci skip] Pushing vault_kubernetes files", " 1 file changed, 371 insertions(+)"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main b4ba6a9] [ci skip] Pushing vault_kubernetes files",
        " 1 file changed, 371 insertions(+)"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   ad39f1f..b4ba6a9  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost

TASK [Check if vault_kubernetes job is completed] ******************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:80

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job manufacturer-vaultkubenertes-job in manufacturer-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:11
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2022-07-17T15:01:31Z", "generateName": "manufacturer-vaultkubenertes-job-", "labels": {"app": "manufacturer-vaultkubenertes-job", "app.kubernetes.io/instance": "manufacturer-vaultkubenertes-job", "app.kubernetes.io/managed-by": "Helm", "app.kubernetes.io/name": "manufacturer-vaultkubenertes-job", "controller-uid": "34cd078b-766f-451f-80de-3c42f13826d4", "helm.sh/chart": "vault_kubernetes-0.2.0", "job-name": "manufacturer-vaultkubenertes-job"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:app": {}, "f:app.kubernetes.io/instance": {}, "f:app.kubernetes.io/managed-by": {}, "f:app.kubernetes.io/name": {}, "f:controller-uid": {}, "f:helm.sh/chart": {}, "f:job-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"34cd078b-766f-451f-80de-3c42f13826d4\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {"f:containers": {"k:{\"name\":\"vault-kubernetes\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"COMPONENT_TYPE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"KUBERNETES_AUTH_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"KUBERNETES_URL\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"NAMESPACE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"POLICIES_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"POLICY_NAME\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"ROOT_TOKEN\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:secretKeyRef": {".": {}, "f:key": {}, "f:name": {}}}}, "k:{\"name\":\"VAULT_ADDR\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ROLE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SA\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/policies/policies-config-orderer.json.tmpl\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:subPath": {}}, "k:{\"mountPath\":\"/policies/policies-config-peer.json.tmpl\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:subPath": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:imagePullSecrets": {".": {}, "k:{\"name\":\"regcred\"}": {".": {}, "f:name": {}}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"policies\"}": {".": {}, "f:emptyDir": {".": {}, "f:medium": {}}, "f:name": {}}, "k:{\"name\":\"policies-config-orderer\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:items": {}, "f:name": {}}, "f:name": {}}, "k:{\"name\":\"policies-config-peer\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:items": {}, "f:name": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T15:01:31Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.25\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "time": "2022-07-17T15:01:35Z"}], "name": "manufacturer-vaultkubenertes-job-2dkcn", "namespace": "manufacturer-net", "ownerReferences": [{"apiVersion": "batch/v1", "blockOwnerDeletion": true, "controller": true, "kind": "Job", "name": "manufacturer-vaultkubenertes-job", "uid": "34cd078b-766f-451f-80de-3c42f13826d4"}], "resourceVersion": "69440", "uid": "4e9b2c6f-c455-4269-8035-3685b339511d"}, "spec": {"containers": [{"args": ["apk update && apk add jq curl;\n\nvalidateVaultResponse () {\n  if [ ${1} != 200 -a ${1} != 204 ]; then\n    echo \"ERROR: Unable to retrieve. Http status: ${1}\"\n    exit 1\n  fi\n};\n\n# Check if authpath already created\nvault_auth_check=$(curl --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  ${VAULT_ADDR}/v1/sys/auth | jq '.\"devmanufacturer-net-auth/\"');\n\nif [ \"$vault_auth_check\" == 'null' ]; then\n  echo \"authpath does not exist. Creating ...\"\n  # This command enables the path for the organizations and orderers on vault\n  curl \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  --request POST \\\n  --data '{\"type\": \"kubernetes\"}' \\\n  ${VAULT_ADDR}/v1/sys/auth/${KUBERNETES_AUTH_PATH}\n\n  while IFS= read -r line\n  do\n    echo \"$line\\n\"\n  done < /var/run/secrets/kubernetes.io/serviceaccount/ca.crt > ca_formatted.txt\n\n  KUBE_SA_CRT_ONELINE=$(cat ca_formatted.txt)\n  export REVIEWER_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token);\n\n  # This echo get the certificate for the cluster\n  echo \"\n    {\n      \\\"token_reviewer_jwt\\\": \\\"${REVIEWER_TOKEN}\\\",\n      \\\"kubernetes_host\\\": \\\"${KUBERNETES_URL}\\\",\n      \\\"disable_iss_validation\\\":\\\"true\\\",\n      \\\"kubernetes_ca_cert\\\": \\\"${KUBE_SA_CRT_ONELINE}\\\"\n    }\" > payload.json\n\n  # This command writtes the Service Account token to the vault for Organisations\n  curl \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  --request POST \\\n  --data @payload.json \\\n  ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/config\n\n  # Check auth\n  response_status=$(curl -s -o /dev/null -w \"%{http_code}\" \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/config);\n\n  rm payload.json\n\n  validateVaultResponse ${response_status};\nfi;\n\n# Check if policy already created\nvault_policy_check=$(curl --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  ${VAULT_ADDR}/v1/sys/policy/${POLICY_NAME} | jq -r '.name');\n\nif [ \"$vault_policy_check\" == 'null' ]; then\n  echo \"vaultpolicy does not exist. Creating ...\"\n  mkdir -p ${POLICIES_PATH}\n\n  if [ $COMPONENT_TYPE == 'orderer' ]; then\n    \n    # This command writes the policies to the vault\n    curl \\\n    --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n    --request POST \\\n    --data @${POLICIES_PATH}/policies-config-orderer.json.tmpl \\\n    ${VAULT_ADDR}/v1/sys/policy/${POLICY_NAME}\n\n  fi;\n\n  if [ $COMPONENT_TYPE == 'peer' ]; then\n\n    # This command writes the policies to the vault\n    curl \\\n    --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n    --request POST \\\n    --data @${POLICIES_PATH}/policies-config-peer.json.tmpl \\\n    ${VAULT_ADDR}/v1/sys/policy/${POLICY_NAME}\n\n  fi;\n\n  # Check policy\n  response_status=$(curl -s -o /dev/null -w \"%{http_code}\" \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  ${VAULT_ADDR}/v1/sys/policy/${POLICY_NAME});\n\n  validateVaultResponse ${response_status};\nfi;\n\nif [ \"$vault_auth_check\" == 'null' ]; then\n  echo \"Need vault auth role\"\n\n  echo \" {\\\"bound_service_account_names\\\": \\\"${VAULT_SA}\\\", \\\n  \\\"bound_service_account_namespaces\\\": \\\"${NAMESPACE}\\\", \\\n  \\\"policies\\\": [\\\"${POLICY_NAME}\\\"], \\\"ttl\\\": \\\"1200s\\\"}\" > payload.json\n\n  curl \\\n  -s -o /dev/null -w \"%{http_code}\" \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  --request POST \\\n  --data @payload.json \\\n  ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/role/${VAULT_ROLE}\n\n  # Check role\n  response_status=$(curl -s -o /dev/null -w \"%{http_code}\" \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/role/${VAULT_ROLE});\n\n  rm payload.json\n\n  validateVaultResponse ${response_status};\nfi;"], "command": ["sh", "-c"], "env": [{"name": "VAULT_ADDR", "value": "http://20.197.63.209:8200"}, {"name": "VAULT_SECRET_PATH", "value": "secretv2"}, {"name": "KUBERNETES_AUTH_PATH", "value": "devmanufacturer-net-auth"}, {"name": "VAULT_ROLE", "value": "vault-role"}, {"name": "VAULT_SA", "value": "vault-auth"}, {"name": "KUBERNETES_URL", "value": "https://bevel-dns-6a0e538d.hcp.centralindia.azmk8s.io:443"}, {"name": "POLICY_NAME", "value": "vault-crypto-peer-manufacturer-net-ro"}, {"name": "COMPONENT_TYPE", "value": "peer"}, {"name": "NAMESPACE", "value": "manufacturer-net"}, {"name": "POLICIES_PATH", "value": "/policies"}, {"name": "ROOT_TOKEN", "valueFrom": {"secretKeyRef": {"key": "token", "name": "roottoken"}}}], "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "imagePullPolicy": "IfNotPresent", "name": "vault-kubernetes", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/policies/policies-config-orderer.json.tmpl", "name": "policies-config-orderer", "subPath": "policies-config-orderer.json.tmpl"}, {"mountPath": "/policies/policies-config-peer.json.tmpl", "name": "policies-config-peer", "subPath": "policies-config-peer.json.tmpl"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-s2zrn", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "imagePullSecrets": [{"name": "regcred"}], "nodeName": "aks-agentpool-84293659-vmss000001", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "OnFailure", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "vault-reviewer", "serviceAccountName": "vault-reviewer", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"emptyDir": {"medium": "Memory"}, "name": "policies"}, {"configMap": {"defaultMode": 420, "items": [{"key": "policies-config-orderer.json.tmpl", "path": "policies-config-orderer.json.tmpl"}], "name": "policies-config-peer"}, "name": "policies-config-orderer"}, {"configMap": {"defaultMode": 420, "items": [{"key": "policies-config-peer.json.tmpl", "path": "policies-config-peer.json.tmpl"}], "name": "policies-config-peer"}, "name": "policies-config-peer"}, {"name": "kube-api-access-s2zrn", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:01:31Z", "reason": "PodCompleted", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:01:35Z", "reason": "PodCompleted", "status": "False", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:01:35Z", "reason": "PodCompleted", "status": "False", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:01:31Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://70855c3443b470c3c6f9c0134c4053038ee13aa9fd0731d2a9cf5693a655f6f0", "image": "docker.io/hyperledgerlabs/alpine-utils:1.0", "imageID": "docker.io/hyperledgerlabs/alpine-utils@sha256:cab1d1566ddaa28e482b5eeda7426791bdf607cee41e2b752ccc566553810f74", "lastState": {}, "name": "vault-kubernetes", "ready": false, "restartCount": 0, "started": false, "state": {"terminated": {"containerID": "containerd://70855c3443b470c3c6f9c0134c4053038ee13aa9fd0731d2a9cf5693a655f6f0", "exitCode": 0, "finishedAt": "2022-07-17T15:01:34Z", "reason": "Completed", "startedAt": "2022-07-17T15:01:32Z"}}}], "hostIP": "10.224.0.5", "phase": "Succeeded", "podIP": "10.244.0.25", "podIPs": [{"ip": "10.244.0.25"}], "qosClass": "BestEffort", "startTime": "2022-07-17T15:01:31Z"}}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:28
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job manufacturer-vaultkubenertes-job in manufacturer-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:42
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Delete vault token secret] ***********************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:91

TASK [delete/k8s_secrets : Delete vault roottoken] *****************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/delete/k8s_secrets/tasks/main.yaml:8
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s
changed: [localhost] => {"changed": true, "method": "delete", "result": {"apiVersion": "v1", "details": {"kind": "secrets", "name": "roottoken", "uid": "48b3b8ea-c2e5-4c5f-bad2-9b10956d4ae5"}, "kind": "Status", "metadata": {}, "status": "Success"}}
META: role_complete for localhost
META: role_complete for localhost

TASK [Waiting for the namespace carrier-net to be created] *********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:13

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace carrier-net is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:13
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:23
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "9caeb41821a229aac426fa223fc4c5e4a1457332", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"9caeb41821a229aac426fa223fc4c5e4a1457332\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.YuKbj223uaHS-8etYgjS8tf9UifVidH7NL7LW97j_PU\"},\"name\":\"carrier-net\"}}\n"}, "creationTimestamp": "2022-07-17T14:57:25Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.YuKbj223uaHS-8etYgjS8tf9UifVidH7NL7LW97j_PU", "kubernetes.io/metadata.name": "carrier-net"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}, "f:kubernetes.io/metadata.name": {}}}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T14:57:25Z"}], "name": "carrier-net", "resourceVersion": "68576", "uid": "660c5013-2fb3-4502-8665-2638aa5ce0a4"}, "spec": {"finalizers": ["kubernetes"]}, "status": {"phase": "Active"}}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace carrier-net is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:38
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:51
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Create docker credentials secret] ****************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:23

TASK [create/k8s_secrets : Check if root token exists in the namespace] ********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:13
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Put root token of every organization] ***************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:25
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Checking if the docker credentials already exists] ***********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:43

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "data": {".dockerconfigjson": "eyJhdXRocyI6IHsiaW5kZXguZG9ja2VyLmlvL2h5cGVybGVkZ2VybGFicyI6IHsidXNlcm5hbWUiOiAiYWRpdHlham9zaGkxMiIsICJwYXNzd29yZCI6ICJGYXJjcnlAMjAxNCIsICJlbWFpbCI6ICJ0ZXN0QGFiYy5tYWlsIiwgImF1dGgiOiAiWVdScGRIbGhhbTl6YUdreE1qcEdZWEpqY25sQU1qQXhOQT09In19fQ=="}, "kind": "Secret", "metadata": {"creationTimestamp": "2022-07-17T15:02:01Z", "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:data": {".": {}, "f:.dockerconfigjson": {}}, "f:type": {}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2022-07-17T15:02:01Z"}], "name": "regcred", "namespace": "carrier-net", "resourceVersion": "69525", "uid": "b5f1f4db-5970-4a3d-8fa2-2a8fffb38a58"}, "type": "kubernetes.io/dockerconfigjson"}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:51
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:55
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:59
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the docker pull credentials] *****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:65
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check Ambassador cred exists] ***********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:83
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca certs already created] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:97
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca key already created] ********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:112
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the Ambassador credentials] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:127
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check Ambassador cred exists for orderers] **********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:151
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca certs already created for orderers] *****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:165
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca key already created for orderers] *******
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:180
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the Ambassador credentials for orderers] *****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:195
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if endorser certs secret exists in the namespace] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:219
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create endorser certs secret exists in the namespace] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:231
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Create vault token secret] ***********************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:33

TASK [create/k8s_secrets : Check if root token exists in the namespace] ********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:13
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": []}

TASK [create/k8s_secrets : Put root token of every organization] ***************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:25
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s
changed: [localhost] => {"changed": true, "method": "create", "result": {"apiVersion": "v1", "data": {"config.yaml": "", "token": "aHZzLnFwYjlUeVVWSWtkQnVCRE1ieUFtQ0VIeQ=="}, "kind": "Secret", "metadata": {"creationTimestamp": "2022-07-17T16:14:20Z", "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:data": {".": {}, "f:config.yaml": {}, "f:token": {}}, "f:type": {}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2022-07-17T16:14:20Z"}], "name": "roottoken", "namespace": "carrier-net", "resourceVersion": "85922", "uid": "a5a855be-826e-4c3d-be17-da9ef425e010"}, "type": "Opaque"}}

TASK [Checking if the docker credentials already exists] ***********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:43

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "data": {".dockerconfigjson": "eyJhdXRocyI6IHsiaW5kZXguZG9ja2VyLmlvL2h5cGVybGVkZ2VybGFicyI6IHsidXNlcm5hbWUiOiAiYWRpdHlham9zaGkxMiIsICJwYXNzd29yZCI6ICJGYXJjcnlAMjAxNCIsICJlbWFpbCI6ICJ0ZXN0QGFiYy5tYWlsIiwgImF1dGgiOiAiWVdScGRIbGhhbTl6YUdreE1qcEdZWEpqY25sQU1qQXhOQT09In19fQ=="}, "kind": "Secret", "metadata": {"creationTimestamp": "2022-07-17T15:02:01Z", "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:data": {".": {}, "f:.dockerconfigjson": {}}, "f:type": {}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2022-07-17T15:02:01Z"}], "name": "regcred", "namespace": "carrier-net", "resourceVersion": "69525", "uid": "b5f1f4db-5970-4a3d-8fa2-2a8fffb38a58"}, "type": "kubernetes.io/dockerconfigjson"}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:51
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:55
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:59
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the docker pull credentials] *****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:65
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check Ambassador cred exists] ***********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:83
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca certs already created] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:97
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca key already created] ********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:112
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the Ambassador credentials] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:127
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check Ambassador cred exists for orderers] **********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:151
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca certs already created for orderers] *****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:165
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca key already created for orderers] *******
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:180
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the Ambassador credentials for orderers] *****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:195
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if endorser certs secret exists in the namespace] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:219
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create endorser certs secret exists in the namespace] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:231
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [setup/vault_kubernetes : Get the kubernetes server url] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:44
changed: [localhost] => {"changed": true, "cmd": "KUBECONFIG=/home/bevel/build/config kubectl config view --minify | grep server | cut -f 2- -d \":\" | tr -d \" \"\n", "delta": "0:00:00.081340", "end": "2022-07-17 16:14:23.444854", "msg": "", "rc": 0, "start": "2022-07-17 16:14:23.363514", "stderr": "", "stderr_lines": [], "stdout": "https://bevel-dns-6a0e538d.hcp.centralindia.azmk8s.io:443", "stdout_lines": ["https://bevel-dns-6a0e538d.hcp.centralindia.azmk8s.io:443"]}

TASK [Create value file for vault_kubernetes] **********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:51

TASK [helm_component : Ensures /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier dir exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:14
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier", "size": 4096, "state": "directory", "uid": 0}

TASK [helm_component : create value file for carrier-vaultkubernetes-job] ******
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:23
ok: [localhost] => {"changed": false, "checksum": "cb60fe819e22de0221cf6a52f72d86eaa1dcff04", "dest": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/carrier-vaultkubernetes-job.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/carrier-vaultkubernetes-job.yaml", "size": 932, "state": "file", "uid": 0}

TASK [Helm lint] ***************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:32

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
ok: [localhost] => {"changed": false, "stat": {"atime": 1658070130.4163873, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "checksum": "cb60fe819e22de0221cf6a52f72d86eaa1dcff04", "ctime": 1658070129.9163883, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626760, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658070129.6123886, "nlink": 1, "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/carrier-vaultkubernetes-job.yaml", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 932, "uid": 0, "version": "3271988974", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [Check or create test directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:22

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"atime": 1658074423.378228, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "ctime": 1658074445.7941227, "dev": 64513, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626754, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658074445.7941227, "nlink": 2, "path": "./build/test", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "version": "4197237393", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:31
ok: [localhost] => {"ansible_facts": {"apiVersion": "helm.fluxcd.io/v1", "kind": "HelmRelease", "metadata": {"annotations": {"fluxcd.io/automated": "false"}, "name": "carrier-vaultkubenertes-job", "namespace": "carrier-net"}, "spec": {"chart": {"git": "ssh://git@github.com/adityajoshi12/bevel.git", "path": "platforms/hyperledger-fabric/charts/vault_kubernetes", "ref": "test"}, "releaseName": "carrier-vaultkubenertes-job", "values": {"k8s": {"kubernetes_url": "https://bevel-dns-6a0e538d.hcp.centralindia.azmk8s.io:443"}, "metadata": {"component_type": "peer", "images": {"alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0"}, "name": "carrier", "namespace": "carrier-net"}, "vault": {"address": "http://20.197.63.209:8200", "authpath": "devcarrier-net-auth", "imagesecretname": "regcred", "policy": "vault-crypto-peer-carrier-net-ro", "reviewer_service": "vault-reviewer", "role": "vault-role", "secret_path": "secretv2", "serviceaccountname": "vault-auth"}}}}, "ansible_included_var_files": ["/home/bevel/platforms/hyperledger-fabric/releases/dev/carrier/carrier/carrier-vaultkubernetes-job.yaml"], "changed": false}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:36
ok: [localhost] => {"changed": false, "checksum": "2bc66f911b79200988c664c16f790c78e23961db", "dest": "./build/test/carrier-vaultkubenertes-job.yaml", "gid": 0, "group": "root", "md5sum": "92642b19d184398fceca822b8b049601", "mode": "0644", "owner": "root", "size": 518, "src": "/root/.ansible/tmp/ansible-tmp-1658074466.504338-32606-193045164845900/source", "state": "file", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:42
changed: [localhost] => {"changed": true, "cmd": "helm lint -f \"./build/test/carrier-vaultkubenertes-job.yaml\" \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/vault_kubernetes\"\n", "delta": "0:00:00.098392", "end": "2022-07-17 16:14:27.687785", "msg": "", "rc": 0, "start": "2022-07-17 16:14:27.589393", "stderr": "", "stderr_lines": [], "stdout": "==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/vault_kubernetes\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, 0 chart(s) failed", "stdout_lines": ["==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/vault_kubernetes", "[INFO] Chart.yaml: icon is recommended", "", "1 chart(s) linted, 0 chart(s) failed"]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:70

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing vault_kubernetes files\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.394778", "end": "2022-07-17 16:14:31.203844", "msg": "", "rc": 0, "start": "2022-07-17 16:14:28.809066", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   b4ba6a9..f8090d6  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   b4ba6a9..f8090d6  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main f8090d6] [ci skip] Pushing vault_kubernetes files\n 1 file changed, 367 insertions(+)", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main f8090d6] [ci skip] Pushing vault_kubernetes files", " 1 file changed, 367 insertions(+)"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main f8090d6] [ci skip] Pushing vault_kubernetes files",
        " 1 file changed, 367 insertions(+)"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   b4ba6a9..f8090d6  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost

TASK [Check if vault_kubernetes job is completed] ******************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:80

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job carrier-vaultkubenertes-job in carrier-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:11
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2022-07-17T15:03:35Z", "generateName": "carrier-vaultkubenertes-job-", "labels": {"app": "carrier-vaultkubenertes-job", "app.kubernetes.io/instance": "carrier-vaultkubenertes-job", "app.kubernetes.io/managed-by": "Helm", "app.kubernetes.io/name": "carrier-vaultkubenertes-job", "controller-uid": "55d16278-f6d5-45e0-b82c-6bd643938fcd", "helm.sh/chart": "vault_kubernetes-0.2.0", "job-name": "carrier-vaultkubenertes-job"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:app": {}, "f:app.kubernetes.io/instance": {}, "f:app.kubernetes.io/managed-by": {}, "f:app.kubernetes.io/name": {}, "f:controller-uid": {}, "f:helm.sh/chart": {}, "f:job-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"55d16278-f6d5-45e0-b82c-6bd643938fcd\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {"f:containers": {"k:{\"name\":\"vault-kubernetes\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"COMPONENT_TYPE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"KUBERNETES_AUTH_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"KUBERNETES_URL\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"NAMESPACE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"POLICIES_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"POLICY_NAME\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"ROOT_TOKEN\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:secretKeyRef": {".": {}, "f:key": {}, "f:name": {}}}}, "k:{\"name\":\"VAULT_ADDR\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ROLE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SA\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/policies/policies-config-orderer.json.tmpl\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:subPath": {}}, "k:{\"mountPath\":\"/policies/policies-config-peer.json.tmpl\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:subPath": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:imagePullSecrets": {".": {}, "k:{\"name\":\"regcred\"}": {".": {}, "f:name": {}}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"policies\"}": {".": {}, "f:emptyDir": {".": {}, "f:medium": {}}, "f:name": {}}, "k:{\"name\":\"policies-config-orderer\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:items": {}, "f:name": {}}, "f:name": {}}, "k:{\"name\":\"policies-config-peer\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:items": {}, "f:name": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T15:03:35Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.26\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "time": "2022-07-17T15:03:38Z"}], "name": "carrier-vaultkubenertes-job-n88k7", "namespace": "carrier-net", "ownerReferences": [{"apiVersion": "batch/v1", "blockOwnerDeletion": true, "controller": true, "kind": "Job", "name": "carrier-vaultkubenertes-job", "uid": "55d16278-f6d5-45e0-b82c-6bd643938fcd"}], "resourceVersion": "69864", "uid": "42020edc-9554-4a33-a4a1-e727ed625f67"}, "spec": {"containers": [{"args": ["apk update && apk add jq curl;\n\nvalidateVaultResponse () {\n  if [ ${1} != 200 -a ${1} != 204 ]; then\n    echo \"ERROR: Unable to retrieve. Http status: ${1}\"\n    exit 1\n  fi\n};\n\n# Check if authpath already created\nvault_auth_check=$(curl --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  ${VAULT_ADDR}/v1/sys/auth | jq '.\"devcarrier-net-auth/\"');\n\nif [ \"$vault_auth_check\" == 'null' ]; then\n  echo \"authpath does not exist. Creating ...\"\n  # This command enables the path for the organizations and orderers on vault\n  curl \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  --request POST \\\n  --data '{\"type\": \"kubernetes\"}' \\\n  ${VAULT_ADDR}/v1/sys/auth/${KUBERNETES_AUTH_PATH}\n\n  while IFS= read -r line\n  do\n    echo \"$line\\n\"\n  done < /var/run/secrets/kubernetes.io/serviceaccount/ca.crt > ca_formatted.txt\n\n  KUBE_SA_CRT_ONELINE=$(cat ca_formatted.txt)\n  export REVIEWER_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token);\n\n  # This echo get the certificate for the cluster\n  echo \"\n    {\n      \\\"token_reviewer_jwt\\\": \\\"${REVIEWER_TOKEN}\\\",\n      \\\"kubernetes_host\\\": \\\"${KUBERNETES_URL}\\\",\n      \\\"disable_iss_validation\\\":\\\"true\\\",\n      \\\"kubernetes_ca_cert\\\": \\\"${KUBE_SA_CRT_ONELINE}\\\"\n    }\" > payload.json\n\n  # This command writtes the Service Account token to the vault for Organisations\n  curl \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  --request POST \\\n  --data @payload.json \\\n  ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/config\n\n  # Check auth\n  response_status=$(curl -s -o /dev/null -w \"%{http_code}\" \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/config);\n\n  rm payload.json\n\n  validateVaultResponse ${response_status};\nfi;\n\n# Check if policy already created\nvault_policy_check=$(curl --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  ${VAULT_ADDR}/v1/sys/policy/${POLICY_NAME} | jq -r '.name');\n\nif [ \"$vault_policy_check\" == 'null' ]; then\n  echo \"vaultpolicy does not exist. Creating ...\"\n  mkdir -p ${POLICIES_PATH}\n\n  if [ $COMPONENT_TYPE == 'orderer' ]; then\n    \n    # This command writes the policies to the vault\n    curl \\\n    --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n    --request POST \\\n    --data @${POLICIES_PATH}/policies-config-orderer.json.tmpl \\\n    ${VAULT_ADDR}/v1/sys/policy/${POLICY_NAME}\n\n  fi;\n\n  if [ $COMPONENT_TYPE == 'peer' ]; then\n\n    # This command writes the policies to the vault\n    curl \\\n    --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n    --request POST \\\n    --data @${POLICIES_PATH}/policies-config-peer.json.tmpl \\\n    ${VAULT_ADDR}/v1/sys/policy/${POLICY_NAME}\n\n  fi;\n\n  # Check policy\n  response_status=$(curl -s -o /dev/null -w \"%{http_code}\" \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  ${VAULT_ADDR}/v1/sys/policy/${POLICY_NAME});\n\n  validateVaultResponse ${response_status};\nfi;\n\nif [ \"$vault_auth_check\" == 'null' ]; then\n  echo \"Need vault auth role\"\n\n  echo \" {\\\"bound_service_account_names\\\": \\\"${VAULT_SA}\\\", \\\n  \\\"bound_service_account_namespaces\\\": \\\"${NAMESPACE}\\\", \\\n  \\\"policies\\\": [\\\"${POLICY_NAME}\\\"], \\\"ttl\\\": \\\"1200s\\\"}\" > payload.json\n\n  curl \\\n  -s -o /dev/null -w \"%{http_code}\" \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  --request POST \\\n  --data @payload.json \\\n  ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/role/${VAULT_ROLE}\n\n  # Check role\n  response_status=$(curl -s -o /dev/null -w \"%{http_code}\" \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/role/${VAULT_ROLE});\n\n  rm payload.json\n\n  validateVaultResponse ${response_status};\nfi;"], "command": ["sh", "-c"], "env": [{"name": "VAULT_ADDR", "value": "http://20.197.63.209:8200"}, {"name": "VAULT_SECRET_PATH", "value": "secretv2"}, {"name": "KUBERNETES_AUTH_PATH", "value": "devcarrier-net-auth"}, {"name": "VAULT_ROLE", "value": "vault-role"}, {"name": "VAULT_SA", "value": "vault-auth"}, {"name": "KUBERNETES_URL", "value": "https://bevel-dns-6a0e538d.hcp.centralindia.azmk8s.io:443"}, {"name": "POLICY_NAME", "value": "vault-crypto-peer-carrier-net-ro"}, {"name": "COMPONENT_TYPE", "value": "peer"}, {"name": "NAMESPACE", "value": "carrier-net"}, {"name": "POLICIES_PATH", "value": "/policies"}, {"name": "ROOT_TOKEN", "valueFrom": {"secretKeyRef": {"key": "token", "name": "roottoken"}}}], "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "imagePullPolicy": "IfNotPresent", "name": "vault-kubernetes", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/policies/policies-config-orderer.json.tmpl", "name": "policies-config-orderer", "subPath": "policies-config-orderer.json.tmpl"}, {"mountPath": "/policies/policies-config-peer.json.tmpl", "name": "policies-config-peer", "subPath": "policies-config-peer.json.tmpl"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-2lj4m", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "imagePullSecrets": [{"name": "regcred"}], "nodeName": "aks-agentpool-84293659-vmss000001", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "OnFailure", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "vault-reviewer", "serviceAccountName": "vault-reviewer", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"emptyDir": {"medium": "Memory"}, "name": "policies"}, {"configMap": {"defaultMode": 420, "items": [{"key": "policies-config-orderer.json.tmpl", "path": "policies-config-orderer.json.tmpl"}], "name": "policies-config-peer"}, "name": "policies-config-orderer"}, {"configMap": {"defaultMode": 420, "items": [{"key": "policies-config-peer.json.tmpl", "path": "policies-config-peer.json.tmpl"}], "name": "policies-config-peer"}, "name": "policies-config-peer"}, {"name": "kube-api-access-2lj4m", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:03:35Z", "reason": "PodCompleted", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:03:38Z", "reason": "PodCompleted", "status": "False", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:03:38Z", "reason": "PodCompleted", "status": "False", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:03:35Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://c186262b589dd0c4386d487ac8e2439fa3f48ca1aad5c8aee5f1d29767415aeb", "image": "docker.io/hyperledgerlabs/alpine-utils:1.0", "imageID": "docker.io/hyperledgerlabs/alpine-utils@sha256:cab1d1566ddaa28e482b5eeda7426791bdf607cee41e2b752ccc566553810f74", "lastState": {}, "name": "vault-kubernetes", "ready": false, "restartCount": 0, "started": false, "state": {"terminated": {"containerID": "containerd://c186262b589dd0c4386d487ac8e2439fa3f48ca1aad5c8aee5f1d29767415aeb", "exitCode": 0, "finishedAt": "2022-07-17T15:03:37Z", "reason": "Completed", "startedAt": "2022-07-17T15:03:36Z"}}}], "hostIP": "10.224.0.5", "phase": "Succeeded", "podIP": "10.244.0.26", "podIPs": [{"ip": "10.244.0.26"}], "qosClass": "BestEffort", "startTime": "2022-07-17T15:03:35Z"}}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:28
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job carrier-vaultkubenertes-job in carrier-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:42
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Delete vault token secret] ***********************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:91

TASK [delete/k8s_secrets : Delete vault roottoken] *****************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/delete/k8s_secrets/tasks/main.yaml:8
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s
changed: [localhost] => {"changed": true, "method": "delete", "result": {"apiVersion": "v1", "details": {"kind": "secrets", "name": "roottoken", "uid": "a5a855be-826e-4c3d-be17-da9ef425e010"}, "kind": "Status", "metadata": {}, "status": "Success"}}
META: role_complete for localhost
META: role_complete for localhost

TASK [Create storageclass for each organization] *******************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:52

TASK [Checking if the storage class supplychainsc already exists] **************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:12
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check StorageClass supplychainsc is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:13
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"allowVolumeExpansion": true, "apiVersion": "storage.k8s.io/v1", "kind": "StorageClass", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "561507a628b179ebd66840d514405746bcfc2f0c", "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"561507a628b179ebd66840d514405746bcfc2f0c\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.QBSPGCX3U6nghOWonfbCSN9mLiieFPqfE98zfVtobik\"},\"name\":\"supplychainsc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"}, "creationTimestamp": "2022-07-17T15:05:35Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.QBSPGCX3U6nghOWonfbCSN9mLiieFPqfE98zfVtobik"}, "managedFields": [{"apiVersion": "storage.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:allowVolumeExpansion": {}, "f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}}}, "f:parameters": {".": {}, "f:kind": {}, "f:storageaccounttype": {}}, "f:provisioner": {}, "f:reclaimPolicy": {}, "f:volumeBindingMode": {}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T15:05:35Z"}], "name": "supplychainsc", "resourceVersion": "70242", "uid": "b7c804bc-8085-46d5-9836-e6206a60e6c4"}, "parameters": {"kind": "Managed", "storageaccounttype": "Premium_LRS"}, "provisioner": "kubernetes.io/azure-disk", "reclaimPolicy": "Retain", "volumeBindingMode": "Immediate"}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass supplychainsc] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:23
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check StorageClass supplychainsc is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:38
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass supplychainsc] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:51
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create/storageclass : Set Variable] **************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:20
ok: [localhost] => {"ansible_facts": {"get_sc": {"api_found": true, "changed": false, "failed": false, "resources": [{"allowVolumeExpansion": true, "apiVersion": "storage.k8s.io/v1", "kind": "StorageClass", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "561507a628b179ebd66840d514405746bcfc2f0c", "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"561507a628b179ebd66840d514405746bcfc2f0c\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.QBSPGCX3U6nghOWonfbCSN9mLiieFPqfE98zfVtobik\"},\"name\":\"supplychainsc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"}, "creationTimestamp": "2022-07-17T15:05:35Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.QBSPGCX3U6nghOWonfbCSN9mLiieFPqfE98zfVtobik"}, "managedFields": [{"apiVersion": "storage.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:allowVolumeExpansion": {}, "f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}}}, "f:parameters": {".": {}, "f:kind": {}, "f:storageaccounttype": {}}, "f:provisioner": {}, "f:reclaimPolicy": {}, "f:volumeBindingMode": {}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T15:05:35Z"}], "name": "supplychainsc", "resourceVersion": "70242", "uid": "b7c804bc-8085-46d5-9836-e6206a60e6c4"}, "parameters": {"kind": "Managed", "storageaccounttype": "Premium_LRS"}, "provisioner": "kubernetes.io/azure-disk", "reclaimPolicy": "Retain", "volumeBindingMode": "Immediate"}]}}, "changed": false}

TASK [creating /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/orderer directory] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:25
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/storageclass : Create Storage Class value file for orderers] ******
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:35
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/storageclass : Create Storage Class value file for Organizations] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:57
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Waiting for the creation of supplychainsc storage class] *****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:70
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Checking if the storage class manufacturersc already exists] *************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:12

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check StorageClass manufacturersc is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:13
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"allowVolumeExpansion": true, "apiVersion": "storage.k8s.io/v1", "kind": "StorageClass", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "afc6da04e7f0a6385b2e788e77f35dbf4350469f", "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"afc6da04e7f0a6385b2e788e77f35dbf4350469f\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.9CmEP41dik860yhy6B0RfhuKfQ-S5Nbx21_0pTtVdJA\"},\"name\":\"manufacturersc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"}, "creationTimestamp": "2022-07-17T15:07:37Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.9CmEP41dik860yhy6B0RfhuKfQ-S5Nbx21_0pTtVdJA"}, "managedFields": [{"apiVersion": "storage.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:allowVolumeExpansion": {}, "f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}}}, "f:parameters": {".": {}, "f:kind": {}, "f:storageaccounttype": {}}, "f:provisioner": {}, "f:reclaimPolicy": {}, "f:volumeBindingMode": {}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T15:07:37Z"}], "name": "manufacturersc", "resourceVersion": "70638", "uid": "5067a520-6c8e-4935-9457-c748198126c8"}, "parameters": {"kind": "Managed", "storageaccounttype": "Premium_LRS"}, "provisioner": "kubernetes.io/azure-disk", "reclaimPolicy": "Retain", "volumeBindingMode": "Immediate"}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass manufacturersc] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:23
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check StorageClass manufacturersc is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:38
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass manufacturersc] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:51
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create/storageclass : Set Variable] **************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:20
ok: [localhost] => {"ansible_facts": {"get_sc": {"api_found": true, "changed": false, "failed": false, "resources": [{"allowVolumeExpansion": true, "apiVersion": "storage.k8s.io/v1", "kind": "StorageClass", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "afc6da04e7f0a6385b2e788e77f35dbf4350469f", "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"afc6da04e7f0a6385b2e788e77f35dbf4350469f\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.9CmEP41dik860yhy6B0RfhuKfQ-S5Nbx21_0pTtVdJA\"},\"name\":\"manufacturersc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"}, "creationTimestamp": "2022-07-17T15:07:37Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.9CmEP41dik860yhy6B0RfhuKfQ-S5Nbx21_0pTtVdJA"}, "managedFields": [{"apiVersion": "storage.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:allowVolumeExpansion": {}, "f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}}}, "f:parameters": {".": {}, "f:kind": {}, "f:storageaccounttype": {}}, "f:provisioner": {}, "f:reclaimPolicy": {}, "f:volumeBindingMode": {}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T15:07:37Z"}], "name": "manufacturersc", "resourceVersion": "70638", "uid": "5067a520-6c8e-4935-9457-c748198126c8"}, "parameters": {"kind": "Managed", "storageaccounttype": "Premium_LRS"}, "provisioner": "kubernetes.io/azure-disk", "reclaimPolicy": "Retain", "volumeBindingMode": "Immediate"}]}}, "changed": false}

TASK [creating /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/peer directory] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:25
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/storageclass : Create Storage Class value file for orderers] ******
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:35
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/storageclass : Create Storage Class value file for Organizations] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:57
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Waiting for the creation of manufacturersc storage class] ****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:70
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Checking if the storage class carriersc already exists] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:12

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check StorageClass carriersc is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:13
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"allowVolumeExpansion": true, "apiVersion": "storage.k8s.io/v1", "kind": "StorageClass", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "794d065b5dabd85e24641673f6b88ac32779a6a1", "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"794d065b5dabd85e24641673f6b88ac32779a6a1\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.fV8B57mPi0k_997myyZsIGfq8d5BqQZlSKNsfCT2yRI\"},\"name\":\"carriersc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"}, "creationTimestamp": "2022-07-17T15:09:40Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.fV8B57mPi0k_997myyZsIGfq8d5BqQZlSKNsfCT2yRI"}, "managedFields": [{"apiVersion": "storage.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:allowVolumeExpansion": {}, "f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}}}, "f:parameters": {".": {}, "f:kind": {}, "f:storageaccounttype": {}}, "f:provisioner": {}, "f:reclaimPolicy": {}, "f:volumeBindingMode": {}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T15:09:40Z"}], "name": "carriersc", "resourceVersion": "71035", "uid": "4447dcae-1ab6-4a88-870e-f97a67516a52"}, "parameters": {"kind": "Managed", "storageaccounttype": "Premium_LRS"}, "provisioner": "kubernetes.io/azure-disk", "reclaimPolicy": "Retain", "volumeBindingMode": "Immediate"}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass carriersc] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:23
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check StorageClass carriersc is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:38
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass carriersc] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:51
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create/storageclass : Set Variable] **************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:20
ok: [localhost] => {"ansible_facts": {"get_sc": {"api_found": true, "changed": false, "failed": false, "resources": [{"allowVolumeExpansion": true, "apiVersion": "storage.k8s.io/v1", "kind": "StorageClass", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "794d065b5dabd85e24641673f6b88ac32779a6a1", "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"794d065b5dabd85e24641673f6b88ac32779a6a1\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.fV8B57mPi0k_997myyZsIGfq8d5BqQZlSKNsfCT2yRI\"},\"name\":\"carriersc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"}, "creationTimestamp": "2022-07-17T15:09:40Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.fV8B57mPi0k_997myyZsIGfq8d5BqQZlSKNsfCT2yRI"}, "managedFields": [{"apiVersion": "storage.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:allowVolumeExpansion": {}, "f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}}}, "f:parameters": {".": {}, "f:kind": {}, "f:storageaccounttype": {}}, "f:provisioner": {}, "f:reclaimPolicy": {}, "f:volumeBindingMode": {}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T15:09:40Z"}], "name": "carriersc", "resourceVersion": "71035", "uid": "4447dcae-1ab6-4a88-870e-f97a67516a52"}, "parameters": {"kind": "Managed", "storageaccounttype": "Premium_LRS"}, "provisioner": "kubernetes.io/azure-disk", "reclaimPolicy": "Retain", "volumeBindingMode": "Immediate"}]}}, "changed": false}

TASK [creating /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer directory] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:25
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/storageclass : Create Storage Class value file for orderers] ******
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:35
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/storageclass : Create Storage Class value file for Organizations] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:57
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Waiting for the creation of carriersc storage class] *********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:70
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Create CA server for each organization] **********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:63

TASK [creating the directory ./build/crypto-config/ordererOrganizations/supplychain-net/ca] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:14
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"exists": false}}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
changed: [localhost] => {"changed": true, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "./build/crypto-config/ordererOrganizations/supplychain-net/ca", "size": 4096, "state": "directory", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Create value file for cacerts job] ***************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:23

TASK [helm_component : Ensures /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/supplychain dir exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:14
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/supplychain", "size": 4096, "state": "directory", "uid": 0}

TASK [helm_component : create value file for supplychain-cacerts-job] **********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:23
ok: [localhost] => {"changed": false, "checksum": "1bd283c692c0a170a21dcf4bda945bf267ac2b6c", "dest": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/supplychain/supplychain-cacerts-job.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/supplychain/supplychain-cacerts-job.yaml", "size": 1057, "state": "file", "uid": 0}

TASK [Helm lint] ***************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:32

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
ok: [localhost] => {"changed": false, "stat": {"atime": 1658070605.735451, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "checksum": "1bd283c692c0a170a21dcf4bda945bf267ac2b6c", "ctime": 1658070605.203452, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626914, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658070604.9114528, "nlink": 1, "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/supplychain/supplychain-cacerts-job.yaml", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 1057, "uid": 0, "version": "1295315643", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [Check or create test directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:22

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"atime": 1658074423.378228, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "ctime": 1658074467.134023, "dev": 64513, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626754, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658074467.134023, "nlink": 2, "path": "./build/test", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "version": "4197237393", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:31
ok: [localhost] => {"ansible_facts": {"apiVersion": "helm.fluxcd.io/v1", "kind": "HelmRelease", "metadata": {"annotations": {"fluxcd.io/automated": "false"}, "name": "supplychain-cacerts-job", "namespace": "supplychain-net"}, "spec": {"chart": {"git": "ssh://git@github.com/adityajoshi12/bevel.git", "path": "platforms/hyperledger-fabric/charts/generate_cacerts", "ref": "test"}, "releaseName": "supplychain-cacerts-job", "values": {"ca": {"subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net"}, "metadata": {"component_name": "supplychain-net", "images": {"alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "fabrictools": "hyperledger/fabric-tools:2.2.2"}, "name": "supplychain", "namespace": "supplychain-net"}, "vault": {"address": "http://20.197.63.209:8200", "authpath": "devsupplychain-net-auth", "imagesecretname": "regcred", "role": "vault-role", "secretcredentialsprefix": "secretv2/data/credentials/supplychain-net/ca/supplychain", "secretcryptoprefix": "secretv2/data/crypto/ordererOrganizations/supplychain-net/ca", "serviceaccountname": "vault-auth"}}}}, "ansible_included_var_files": ["/home/bevel/platforms/hyperledger-fabric/releases/dev/supplychain/supplychain/supplychain-cacerts-job.yaml"], "changed": false}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:36
ok: [localhost] => {"changed": false, "checksum": "6461e1247d7da68ad3eb50b5ef117525da3b09cf", "dest": "./build/test/supplychain-cacerts-job.yaml", "gid": 0, "group": "root", "md5sum": "f33e7be80849549872184605ef816119", "mode": "0644", "owner": "root", "size": 647, "src": "/root/.ansible/tmp/ansible-tmp-1658074489.1452458-33162-44530177719041/source", "state": "file", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:42
changed: [localhost] => {"changed": true, "cmd": "helm lint -f \"./build/test/supplychain-cacerts-job.yaml\" \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/generate_cacerts\"\n", "delta": "0:00:00.117913", "end": "2022-07-17 16:14:50.342065", "msg": "", "rc": 0, "start": "2022-07-17 16:14:50.224152", "stderr": "", "stderr_lines": [], "stdout": "==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/generate_cacerts\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, 0 chart(s) failed", "stdout_lines": ["==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/generate_cacerts", "[INFO] Chart.yaml: icon is recommended", "", "1 chart(s) linted, 0 chart(s) failed"]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:41

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.487323", "end": "2022-07-17 16:14:53.884152", "msg": "", "rc": 0, "start": "2022-07-17 16:14:51.396829", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   f8090d6..82902bc  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   f8090d6..82902bc  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main 82902bc] [ci skip] Pushing CA server files\n 1 file changed, 320 insertions(+)", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main 82902bc] [ci skip] Pushing CA server files", " 1 file changed, 320 insertions(+)"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main 82902bc] [ci skip] Pushing CA server files",
        " 1 file changed, 320 insertions(+)"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   f8090d6..82902bc  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost

TASK [Check if cacerts-job job is completed] ***********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:53
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job supplychain-cacerts-job in supplychain-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:11
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2022-07-17T15:11:43Z", "generateName": "supplychain-cacerts-job-", "labels": {"app": "supplychain-cacerts-job", "app.kubernetes.io/instance": "supplychain-cacerts-job", "app.kubernetes.io/managed-by": "Helm", "app.kubernetes.io/name": "supplychain-cacerts-job", "controller-uid": "75a55acd-657d-4302-9399-7db612a4a2aa", "helm.sh/chart": "generate_cacerts-0.2.0", "job-name": "supplychain-cacerts-job"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:app": {}, "f:app.kubernetes.io/instance": {}, "f:app.kubernetes.io/managed-by": {}, "f:app.kubernetes.io/name": {}, "f:controller-uid": {}, "f:helm.sh/chart": {}, "f:job-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"75a55acd-657d-4302-9399-7db612a4a2aa\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {"f:containers": {"k:{\"name\":\"cacerts\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"CA_SUBJECT\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"COMPONENT_NAME\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"KUBERNETES_AUTH_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"NAME\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ADDR\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_APP_ROLE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_CREDENTIALS_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_CRYPTO_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/certcheck\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:imagePullSecrets": {".": {}, "k:{\"name\":\"regcred\"}": {".": {}, "f:name": {}}}, "f:initContainers": {".": {}, "k:{\"name\":\"init-check-certificates\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"KUBERNETES_AUTH_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"MOUNT_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ADDR\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_APP_ROLE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_CREDENTIALS_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_CRYPTO_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/certcheck\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"certcheck\"}": {".": {}, "f:emptyDir": {".": {}, "f:medium": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T15:11:43Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:initContainerStatuses": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.27\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "time": "2022-07-17T15:11:48Z"}], "name": "supplychain-cacerts-job-sk4cz", "namespace": "supplychain-net", "ownerReferences": [{"apiVersion": "batch/v1", "blockOwnerDeletion": true, "controller": true, "kind": "Job", "name": "supplychain-cacerts-job", "uid": "75a55acd-657d-4302-9399-7db612a4a2aa"}], "resourceVersion": "71470", "uid": "4ae045f2-e913-4b6e-8c0b-9fd666a19dea"}, "spec": {"containers": [{"args": ["apk update && apk add jq curl openssl;\n\nvalidateVaultResponse () {\n  if echo ${2} | grep \"errors\"; then\n    echo \"ERROR: unable to retrieve ${1}: ${2}\"\n    exit 1\n  fi\n  if  [ \"$3\" == \"LOOKUPSECRETRESPONSE\" ]\n  then\n    http_code=$(curl -sS -o /dev/null -w \"%{http_code}\" \\\n    --header \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${1})\n    curl_response=$?\n    if test \"$http_code\" != \"200\" ; then\n        echo \"Http response code from Vault - $http_code and curl_response - $curl_response\"\n        if test \"$curl_response\" != \"0\"; then\n          echo \"Error: curl command failed with error code - $curl_response\"\n          exit 1\n        fi\n    fi\n  fi\n}\n\nif [ -e /certcheck/absent_cacert.txt ]\nthen\n\n  # Create openssl.conf file\n  echo \"[req]\nreq_extensions = v3_req\ndistinguished_name = dn\n\n[dn]\n\n[v3_req]\nbasicConstraints = critical, CA:TRUE\nkeyUsage = critical,digitalSignature, keyEncipherment, keyCertSign, cRLSign\nsubjectKeyIdentifier = hash\n\" > openssl.conf\n\n  # this commands generate the CA certificate\n  openssl ecparam -name prime256v1 -genkey -noout -out  ${COMPONENT_NAME}-CA.key\n  openssl req -x509 -config \"openssl.conf\" -new -nodes -key ${COMPONENT_NAME}-CA.key -days 1024 -out ca.${COMPONENT_NAME}-cert.pem -extensions v3_req -subj \"${CA_SUBJECT}\"\n\n  # This commands put the certificates with correct format for the curl command\n  while IFS= read -r line\n  do\n    echo \"$line\\n\"\n  done < ${COMPONENT_NAME}-CA.key > ./cakey_formatted.txt\n\n  while IFS= read -r line\n  do\n    echo \"$line\\n\"\n  done < ca.${COMPONENT_NAME}-cert.pem > ./capem_formatted.txt\n\n  PEM_CERTIFICATE=$(cat capem_formatted.txt)\n  KEY_CERTIFICATE=$(cat cakey_formatted.txt)\n  \n  echo \"\n    {\n      \\\"data\\\": \n        {\n          \\\"ca.${COMPONENT_NAME}-cert.pem\\\": \\\"${PEM_CERTIFICATE}\\\",\n          \\\"${COMPONENT_NAME}-CA.key\\\": \\\"${KEY_CERTIFICATE}\\\"\n        }  \n    }\" > payload.json\n\n  echo \"Putting secrets/certificates to Vault server\"\n  KUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\n  VAULT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login -H \"Content-Type: application/json\" -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | jq -r 'if .errors then . else .auth.client_token end')\n  validateVaultResponse 'vault login token' \"${VAULT_TOKEN}\"\n\n  # This command copy the CA certificates to the Vault\n  curl \\\n    -H \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n    -H \"Content-Type: application/json\" \\\n    -X POST \\\n    -d @payload.json \\\n    ${VAULT_ADDR}/v1/${VAULT_SECRET_CRYPTO_PATH}\n\n  # Check CA certificates\n  response_status=$(curl -s -o /dev/null -w \"%{http_code}\" \\\n  --header \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n  ${VAULT_ADDR}/v1/${VAULT_SECRET_CRYPTO_PATH});\n\n  validateVaultResponse 'certs creation' ${response_status};\n\n  rm payload.json\n\nfi\n\nif [ -e /certcheck/absent_creds.txt ]\nthen\n\n  # This task write the CA server admin credentials to Vault\n    curl \\\n      -H \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n      -H \"Content-Type: application/json\" \\\n      -X POST \\\n      -d '{ \"data\": {\"user\":\"'\"$NAME-adminpw\"'\"}}' \\\n      ${VAULT_ADDR}/v1/${VAULT_SECRET_CREDENTIALS_PATH}\n\n    # Check CA server admin credentials\n    response_status=$(curl -s -o /dev/null -w \"%{http_code}\" \\\n    --header \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${VAULT_SECRET_CREDENTIALS_PATH});\n\n    validateVaultResponse 'creds creation' ${response_status};\nfi"], "command": ["sh", "-c"], "env": [{"name": "VAULT_ADDR", "value": "http://20.197.63.209:8200"}, {"name": "VAULT_APP_ROLE", "value": "vault-role"}, {"name": "KUBERNETES_AUTH_PATH", "value": "devsupplychain-net-auth"}, {"name": "VAULT_SECRET_CRYPTO_PATH", "value": "secretv2/data/crypto/ordererOrganizations/supplychain-net/ca"}, {"name": "VAULT_SECRET_CREDENTIALS_PATH", "value": "secretv2/data/credentials/supplychain-net/ca/supplychain"}, {"name": "COMPONENT_NAME", "value": "supplychain-net"}, {"name": "NAME", "value": "supplychain"}, {"name": "CA_SUBJECT", "value": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net"}], "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "imagePullPolicy": "IfNotPresent", "name": "cacerts", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/certcheck", "name": "certcheck"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-vpxkz", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "imagePullSecrets": [{"name": "regcred"}], "initContainers": [{"args": ["#!/usr/bin/env sh\nvalidateVaultResponse () {\n  if echo ${2} | grep \"errors\"; then\n    echo \"ERROR: unable to retrieve ${1}: ${2}\"\n    exit 1\n  fi\n  if  [ \"$3\" == \"LOOKUPSECRETRESPONSE\" ]\n  then\n    http_code=$(curl -sS -o /dev/null -w \"%{http_code}\" \\\n    --header \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${1})\n    curl_response=$?\n    if test \"$http_code\" != \"200\" ; then\n        echo \"Http response code from Vault - $http_code and curl_response - $curl_response\"\n        if test \"$curl_response\" != \"0\"; then\n          echo \"Error: curl command failed with error code - $curl_response\"\n          exit 1\n        fi\n    fi\n  fi\n}\n\n# Setting up the environment to get secrets/certificates from Vault\necho \"Getting secrets/certificates from Vault server\"\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\nVAULT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login -H \"Content-Type: application/json\" -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | jq -r 'if .errors then . else .auth.client_token end')\nvalidateVaultResponse 'vault login token' \"${VAULT_TOKEN}\"\necho \"Logged into Vault\"\n\nmkdir -p ${MOUNT_PATH}\n\n# Check if certificates already present in the vault\nLOOKUP_SECRET_RESPONSE=$(curl --header \"X-Vault-Token: ${VAULT_TOKEN}\" ${VAULT_ADDR}/v1/${VAULT_SECRET_CRYPTO_PATH} | jq -r 'if .errors then . else . end')\nif echo ${LOOKUP_SECRET_RESPONSE} | grep \"errors\"\nthen\n  echo \"Certficates absent in vault. Ignore error warning\"\n  touch ${MOUNT_PATH}/absent_cacert.txt\nelif echo ${LOOKUP_SECRET_RESPONSE} | grep \"\\\"data\\\": null\"\nthen\n  echo \"Certficates absent in vault2. Ignore error warning\"\n  touch ${MOUNT_PATH}/absent_cacert.txt\nelse\n  validateVaultResponse \"${VAULT_SECRET_CRYPTO_PATH}\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\n  echo \"Certificates present in vault\"\n  touch ${MOUNT_PATH}/present_cacert.txt\nfi\n\n# Check if CA server admin credentials already present in the vault\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_TOKEN}\" ${VAULT_ADDR}/v1/${VAULT_SECRET_CREDENTIALS_PATH} | jq -r 'if .errors then . else . end')\nif echo ${LOOKUP_SECRET_RESPONSE} | grep \"errors\"\nthen\n  echo \"Certficates absent in vault. Ignore error warning\"\n  touch ${MOUNT_PATH}/absent_creds.txt\nelif echo ${LOOKUP_SECRET_RESPONSE} | grep \"\\\"data\\\": null\"\nthen\n  echo \"Certficates absent in vault2. Ignore error warning\"\n  touch ${MOUNT_PATH}/absent_creds.txt\nelse\n  validateVaultResponse \"${VAULT_SECRET_CREDENTIALS_PATH}\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\n  echo \"Certificates present in vault\"\n  touch ${MOUNT_PATH}/present_creds.txt\nfi \n\necho \"Done checking for certificates in vault\""], "command": ["sh", "-c"], "env": [{"name": "VAULT_ADDR", "value": "http://20.197.63.209:8200"}, {"name": "VAULT_APP_ROLE", "value": "vault-role"}, {"name": "KUBERNETES_AUTH_PATH", "value": "devsupplychain-net-auth"}, {"name": "VAULT_SECRET_CRYPTO_PATH", "value": "secretv2/data/crypto/ordererOrganizations/supplychain-net/ca"}, {"name": "VAULT_SECRET_CREDENTIALS_PATH", "value": "secretv2/data/credentials/supplychain-net/ca/supplychain"}, {"name": "MOUNT_PATH", "value": "/certcheck"}], "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "imagePullPolicy": "IfNotPresent", "name": "init-check-certificates", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/certcheck", "name": "certcheck"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-vpxkz", "readOnly": true}]}], "nodeName": "aks-agentpool-84293659-vmss000001", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "OnFailure", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "vault-auth", "serviceAccountName": "vault-auth", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"emptyDir": {"medium": "Memory"}, "name": "certcheck"}, {"name": "kube-api-access-vpxkz", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:11:45Z", "reason": "PodCompleted", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:11:48Z", "reason": "PodCompleted", "status": "False", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:11:48Z", "reason": "PodCompleted", "status": "False", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:11:43Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://e7632a0476c38d91237fd4ac1aa078ef4ff40ee35b523da2694f18e61c97edee", "image": "docker.io/hyperledgerlabs/alpine-utils:1.0", "imageID": "docker.io/hyperledgerlabs/alpine-utils@sha256:cab1d1566ddaa28e482b5eeda7426791bdf607cee41e2b752ccc566553810f74", "lastState": {}, "name": "cacerts", "ready": false, "restartCount": 0, "started": false, "state": {"terminated": {"containerID": "containerd://e7632a0476c38d91237fd4ac1aa078ef4ff40ee35b523da2694f18e61c97edee", "exitCode": 0, "finishedAt": "2022-07-17T15:11:48Z", "reason": "Completed", "startedAt": "2022-07-17T15:11:45Z"}}}], "hostIP": "10.224.0.5", "initContainerStatuses": [{"containerID": "containerd://4acee2794b99c9498433fb8efd55a5829df6574f4e371bbcc40b71ee1f072d5e", "image": "docker.io/hyperledgerlabs/alpine-utils:1.0", "imageID": "docker.io/hyperledgerlabs/alpine-utils@sha256:cab1d1566ddaa28e482b5eeda7426791bdf607cee41e2b752ccc566553810f74", "lastState": {}, "name": "init-check-certificates", "ready": true, "restartCount": 0, "state": {"terminated": {"containerID": "containerd://4acee2794b99c9498433fb8efd55a5829df6574f4e371bbcc40b71ee1f072d5e", "exitCode": 0, "finishedAt": "2022-07-17T15:11:45Z", "reason": "Completed", "startedAt": "2022-07-17T15:11:45Z"}}}], "phase": "Succeeded", "podIP": "10.244.0.27", "podIPs": [{"ip": "10.244.0.27"}], "qosClass": "BestEffort", "startTime": "2022-07-17T15:11:43Z"}}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:28
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job supplychain-cacerts-job in supplychain-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:42
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create/ca-server : Copy custom config for fabric-ca server] **************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:65
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create the Ambassador credentials] ***************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:72
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create CA server values for Orderer] *************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:85

TASK [helm_component : Ensures /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/ca dir exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:14
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/ca", "size": 4096, "state": "directory", "uid": 0}

TASK [helm_component : create value file for supplychain-net] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:23
ok: [localhost] => {"changed": false, "checksum": "10cd6110b7d76bbfafc829349b4a0570e75bc1e3", "dest": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/ca/supplychain-net.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/ca/supplychain-net.yaml", "size": 1421, "state": "file", "uid": 0}

TASK [Helm lint] ***************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:32

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
ok: [localhost] => {"changed": false, "stat": {"atime": 1658070740.3031495, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "checksum": "10cd6110b7d76bbfafc829349b4a0570e75bc1e3", "ctime": 1658070739.7551506, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626933, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658070739.4631512, "nlink": 1, "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/ca/supplychain-net.yaml", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 1421, "uid": 0, "version": "538283593", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [Check or create test directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:22

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"atime": 1658074423.378228, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "ctime": 1658074489.7779179, "dev": 64513, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626754, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658074489.7779179, "nlink": 2, "path": "./build/test", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "version": "4197237393", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:31
ok: [localhost] => {"ansible_facts": {"apiVersion": "helm.fluxcd.io/v1", "kind": "HelmRelease", "metadata": {"annotations": {"fluxcd.io/automated": "false"}, "name": "supplychain-net-ca", "namespace": "supplychain-net"}, "spec": {"chart": {"git": "ssh://git@github.com/adityajoshi12/bevel.git", "path": "platforms/hyperledger-fabric/charts/ca", "ref": "test"}, "releaseName": "supplychain-net-ca", "values": {"annotations": {"pvc": null, "service": null}, "deployment": {"annotations": null}, "metadata": {"images": {"alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "ca": "hyperledger/fabric-ca:1.4.8"}, "namespace": "supplychain-net"}, "proxy": {"external_url_suffix": "develop.local.com", "provider": "none", "type": "orderer"}, "server": {"admin": "supplychain-admin", "name": "ca", "tlsstatus": true}, "service": {"ports": {"tcp": {"port": 7054}}, "servicetype": "ClusterIP"}, "storage": {"storageclassname": "supplychainsc", "storagesize": "512Mi"}, "vault": {"address": "http://20.197.63.209:8200", "authpath": "devsupplychain-net-auth", "imagesecretname": "regcred", "role": "vault-role", "secretadminpass": "secretv2/data/credentials/supplychain-net/ca/supplychain?user", "secretcert": "secretv2/data/crypto/ordererOrganizations/supplychain-net/ca?ca.supplychain-net-cert.pem", "secretkey": "secretv2/data/crypto/ordererOrganizations/supplychain-net/ca?supplychain-net-CA.key", "serviceaccountname": "vault-auth"}}}}, "ansible_included_var_files": ["/home/bevel/platforms/hyperledger-fabric/releases/dev/supplychain/ca/supplychain-net.yaml"], "changed": false}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:36
ok: [localhost] => {"changed": false, "checksum": "8c20874644cc11681e4daadc4f2710f15dcc1930", "dest": "./build/test/supplychain-net-ca.yaml", "gid": 0, "group": "root", "md5sum": "ea774dbfb36d6ba1d409022aa2f4fc3f", "mode": "0644", "owner": "root", "size": 1006, "src": "/root/.ansible/tmp/ansible-tmp-1658074499.2580924-33484-149827576894014/source", "state": "file", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:42
changed: [localhost] => {"changed": true, "cmd": "helm lint -f \"./build/test/supplychain-net-ca.yaml\" \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n", "delta": "0:00:00.110291", "end": "2022-07-17 16:15:00.276846", "msg": "", "rc": 0, "start": "2022-07-17 16:15:00.166555", "stderr": "", "stderr_lines": [], "stdout": "==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, 0 chart(s) failed", "stdout_lines": ["==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca", "[INFO] Chart.yaml: icon is recommended", "", "1 chart(s) linted, 0 chart(s) failed"]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Create CA server values organizations] ***********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:101
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:116

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.452399", "end": "2022-07-17 16:15:03.964727", "msg": "", "rc": 0, "start": "2022-07-17 16:15:01.512328", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   82902bc..f21b6d1  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   82902bc..f21b6d1  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main f21b6d1] [ci skip] Pushing CA server files\n 1 file changed, 143 insertions(+)", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main f21b6d1] [ci skip] Pushing CA server files", " 1 file changed, 143 insertions(+)"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main f21b6d1] [ci skip] Pushing CA server files",
        " 1 file changed, 143 insertions(+)"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   82902bc..f21b6d1  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost
META: role_complete for localhost

TASK [creating the directory ./build/crypto-config/peerOrganizations/manufacturer-net/ca] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:14

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"exists": false}}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
changed: [localhost] => {"changed": true, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "./build/crypto-config/peerOrganizations/manufacturer-net/ca", "size": 4096, "state": "directory", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Create value file for cacerts job] ***************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:23

TASK [helm_component : Ensures /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer dir exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:14
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer", "size": 4096, "state": "directory", "uid": 0}

TASK [helm_component : create value file for manufacturer-cacerts-job] *********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:23
ok: [localhost] => {"changed": false, "checksum": "9fc91ce8a16c6942e487cf20117ff2281eaf7d1e", "dest": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer/manufacturer-cacerts-job.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer/manufacturer-cacerts-job.yaml", "size": 1070, "state": "file", "uid": 0}

TASK [Helm lint] ***************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:32

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
ok: [localhost] => {"changed": false, "stat": {"atime": 1658070750.0031273, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "checksum": "9fc91ce8a16c6942e487cf20117ff2281eaf7d1e", "ctime": 1658070749.4271286, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626994, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658070749.1671293, "nlink": 1, "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer/manufacturer-cacerts-job.yaml", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 1070, "uid": 0, "version": "1028611574", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [Check or create test directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:22

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"atime": 1658074423.378228, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "ctime": 1658074499.7818716, "dev": 64513, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626754, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658074499.7818716, "nlink": 2, "path": "./build/test", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "version": "4197237393", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:31
ok: [localhost] => {"ansible_facts": {"apiVersion": "helm.fluxcd.io/v1", "kind": "HelmRelease", "metadata": {"annotations": {"fluxcd.io/automated": "false"}, "name": "manufacturer-cacerts-job", "namespace": "manufacturer-net"}, "spec": {"chart": {"git": "ssh://git@github.com/adityajoshi12/bevel.git", "path": "platforms/hyperledger-fabric/charts/generate_cacerts", "ref": "test"}, "releaseName": "manufacturer-cacerts-job", "values": {"ca": {"subject": "/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net"}, "metadata": {"component_name": "manufacturer-net", "images": {"alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "fabrictools": "hyperledger/fabric-tools:2.2.2"}, "name": "manufacturer", "namespace": "manufacturer-net"}, "vault": {"address": "http://20.197.63.209:8200", "authpath": "devmanufacturer-net-auth", "imagesecretname": "regcred", "role": "vault-role", "secretcredentialsprefix": "secretv2/data/credentials/manufacturer-net/ca/manufacturer", "secretcryptoprefix": "secretv2/data/crypto/peerOrganizations/manufacturer-net/ca", "serviceaccountname": "vault-auth"}}}}, "ansible_included_var_files": ["/home/bevel/platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer/manufacturer-cacerts-job.yaml"], "changed": false}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:36
ok: [localhost] => {"changed": false, "checksum": "fccafab79856ee359a9a4aa3d647f3e2ac2a634b", "dest": "./build/test/manufacturer-cacerts-job.yaml", "gid": 0, "group": "root", "md5sum": "2ce8efc8222e0363a28b15a8e0953a9b", "mode": "0644", "owner": "root", "size": 657, "src": "/root/.ansible/tmp/ansible-tmp-1658074508.4981484-33835-165777425982347/source", "state": "file", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:42
changed: [localhost] => {"changed": true, "cmd": "helm lint -f \"./build/test/manufacturer-cacerts-job.yaml\" \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/generate_cacerts\"\n", "delta": "0:00:00.090333", "end": "2022-07-17 16:15:09.465059", "msg": "", "rc": 0, "start": "2022-07-17 16:15:09.374726", "stderr": "", "stderr_lines": [], "stdout": "==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/generate_cacerts\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, 0 chart(s) failed", "stdout_lines": ["==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/generate_cacerts", "[INFO] Chart.yaml: icon is recommended", "", "1 chart(s) linted, 0 chart(s) failed"]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:41

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.542301", "end": "2022-07-17 16:15:13.026212", "msg": "", "rc": 0, "start": "2022-07-17 16:15:10.483911", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   f21b6d1..0902cb2  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   f21b6d1..0902cb2  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main 0902cb2] [ci skip] Pushing CA server files\n 1 file changed, 144 insertions(+)", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main 0902cb2] [ci skip] Pushing CA server files", " 1 file changed, 144 insertions(+)"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main 0902cb2] [ci skip] Pushing CA server files",
        " 1 file changed, 144 insertions(+)"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   f21b6d1..0902cb2  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost

TASK [Check if cacerts-job job is completed] ***********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:53

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job manufacturer-cacerts-job in manufacturer-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:11
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2022-07-17T15:13:47Z", "generateName": "manufacturer-cacerts-job-", "labels": {"app": "manufacturer-cacerts-job", "app.kubernetes.io/instance": "manufacturer-cacerts-job", "app.kubernetes.io/managed-by": "Helm", "app.kubernetes.io/name": "manufacturer-cacerts-job", "controller-uid": "be16655f-a9f8-4975-8c76-3078ffeba88d", "helm.sh/chart": "generate_cacerts-0.2.0", "job-name": "manufacturer-cacerts-job"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:app": {}, "f:app.kubernetes.io/instance": {}, "f:app.kubernetes.io/managed-by": {}, "f:app.kubernetes.io/name": {}, "f:controller-uid": {}, "f:helm.sh/chart": {}, "f:job-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"be16655f-a9f8-4975-8c76-3078ffeba88d\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {"f:containers": {"k:{\"name\":\"cacerts\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"CA_SUBJECT\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"COMPONENT_NAME\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"KUBERNETES_AUTH_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"NAME\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ADDR\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_APP_ROLE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_CREDENTIALS_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_CRYPTO_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/certcheck\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:imagePullSecrets": {".": {}, "k:{\"name\":\"regcred\"}": {".": {}, "f:name": {}}}, "f:initContainers": {".": {}, "k:{\"name\":\"init-check-certificates\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"KUBERNETES_AUTH_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"MOUNT_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ADDR\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_APP_ROLE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_CREDENTIALS_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_CRYPTO_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/certcheck\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"certcheck\"}": {".": {}, "f:emptyDir": {".": {}, "f:medium": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T15:13:47Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:initContainerStatuses": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.28\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "time": "2022-07-17T15:13:52Z"}], "name": "manufacturer-cacerts-job-nrm5s", "namespace": "manufacturer-net", "ownerReferences": [{"apiVersion": "batch/v1", "blockOwnerDeletion": true, "controller": true, "kind": "Job", "name": "manufacturer-cacerts-job", "uid": "be16655f-a9f8-4975-8c76-3078ffeba88d"}], "resourceVersion": "71950", "uid": "9064bf42-0adb-404d-a2dc-e654f8642a6e"}, "spec": {"containers": [{"args": ["apk update && apk add jq curl openssl;\n\nvalidateVaultResponse () {\n  if echo ${2} | grep \"errors\"; then\n    echo \"ERROR: unable to retrieve ${1}: ${2}\"\n    exit 1\n  fi\n  if  [ \"$3\" == \"LOOKUPSECRETRESPONSE\" ]\n  then\n    http_code=$(curl -sS -o /dev/null -w \"%{http_code}\" \\\n    --header \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${1})\n    curl_response=$?\n    if test \"$http_code\" != \"200\" ; then\n        echo \"Http response code from Vault - $http_code and curl_response - $curl_response\"\n        if test \"$curl_response\" != \"0\"; then\n          echo \"Error: curl command failed with error code - $curl_response\"\n          exit 1\n        fi\n    fi\n  fi\n}\n\nif [ -e /certcheck/absent_cacert.txt ]\nthen\n\n  # Create openssl.conf file\n  echo \"[req]\nreq_extensions = v3_req\ndistinguished_name = dn\n\n[dn]\n\n[v3_req]\nbasicConstraints = critical, CA:TRUE\nkeyUsage = critical,digitalSignature, keyEncipherment, keyCertSign, cRLSign\nsubjectKeyIdentifier = hash\n\" > openssl.conf\n\n  # this commands generate the CA certificate\n  openssl ecparam -name prime256v1 -genkey -noout -out  ${COMPONENT_NAME}-CA.key\n  openssl req -x509 -config \"openssl.conf\" -new -nodes -key ${COMPONENT_NAME}-CA.key -days 1024 -out ca.${COMPONENT_NAME}-cert.pem -extensions v3_req -subj \"${CA_SUBJECT}\"\n\n  # This commands put the certificates with correct format for the curl command\n  while IFS= read -r line\n  do\n    echo \"$line\\n\"\n  done < ${COMPONENT_NAME}-CA.key > ./cakey_formatted.txt\n\n  while IFS= read -r line\n  do\n    echo \"$line\\n\"\n  done < ca.${COMPONENT_NAME}-cert.pem > ./capem_formatted.txt\n\n  PEM_CERTIFICATE=$(cat capem_formatted.txt)\n  KEY_CERTIFICATE=$(cat cakey_formatted.txt)\n  \n  echo \"\n    {\n      \\\"data\\\": \n        {\n          \\\"ca.${COMPONENT_NAME}-cert.pem\\\": \\\"${PEM_CERTIFICATE}\\\",\n          \\\"${COMPONENT_NAME}-CA.key\\\": \\\"${KEY_CERTIFICATE}\\\"\n        }  \n    }\" > payload.json\n\n  echo \"Putting secrets/certificates to Vault server\"\n  KUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\n  VAULT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login -H \"Content-Type: application/json\" -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | jq -r 'if .errors then . else .auth.client_token end')\n  validateVaultResponse 'vault login token' \"${VAULT_TOKEN}\"\n\n  # This command copy the CA certificates to the Vault\n  curl \\\n    -H \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n    -H \"Content-Type: application/json\" \\\n    -X POST \\\n    -d @payload.json \\\n    ${VAULT_ADDR}/v1/${VAULT_SECRET_CRYPTO_PATH}\n\n  # Check CA certificates\n  response_status=$(curl -s -o /dev/null -w \"%{http_code}\" \\\n  --header \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n  ${VAULT_ADDR}/v1/${VAULT_SECRET_CRYPTO_PATH});\n\n  validateVaultResponse 'certs creation' ${response_status};\n\n  rm payload.json\n\nfi\n\nif [ -e /certcheck/absent_creds.txt ]\nthen\n\n  # This task write the CA server admin credentials to Vault\n    curl \\\n      -H \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n      -H \"Content-Type: application/json\" \\\n      -X POST \\\n      -d '{ \"data\": {\"user\":\"'\"$NAME-adminpw\"'\"}}' \\\n      ${VAULT_ADDR}/v1/${VAULT_SECRET_CREDENTIALS_PATH}\n\n    # Check CA server admin credentials\n    response_status=$(curl -s -o /dev/null -w \"%{http_code}\" \\\n    --header \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${VAULT_SECRET_CREDENTIALS_PATH});\n\n    validateVaultResponse 'creds creation' ${response_status};\nfi"], "command": ["sh", "-c"], "env": [{"name": "VAULT_ADDR", "value": "http://20.197.63.209:8200"}, {"name": "VAULT_APP_ROLE", "value": "vault-role"}, {"name": "KUBERNETES_AUTH_PATH", "value": "devmanufacturer-net-auth"}, {"name": "VAULT_SECRET_CRYPTO_PATH", "value": "secretv2/data/crypto/peerOrganizations/manufacturer-net/ca"}, {"name": "VAULT_SECRET_CREDENTIALS_PATH", "value": "secretv2/data/credentials/manufacturer-net/ca/manufacturer"}, {"name": "COMPONENT_NAME", "value": "manufacturer-net"}, {"name": "NAME", "value": "manufacturer"}, {"name": "CA_SUBJECT", "value": "/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net"}], "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "imagePullPolicy": "IfNotPresent", "name": "cacerts", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/certcheck", "name": "certcheck"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-vrm54", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "imagePullSecrets": [{"name": "regcred"}], "initContainers": [{"args": ["#!/usr/bin/env sh\nvalidateVaultResponse () {\n  if echo ${2} | grep \"errors\"; then\n    echo \"ERROR: unable to retrieve ${1}: ${2}\"\n    exit 1\n  fi\n  if  [ \"$3\" == \"LOOKUPSECRETRESPONSE\" ]\n  then\n    http_code=$(curl -sS -o /dev/null -w \"%{http_code}\" \\\n    --header \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${1})\n    curl_response=$?\n    if test \"$http_code\" != \"200\" ; then\n        echo \"Http response code from Vault - $http_code and curl_response - $curl_response\"\n        if test \"$curl_response\" != \"0\"; then\n          echo \"Error: curl command failed with error code - $curl_response\"\n          exit 1\n        fi\n    fi\n  fi\n}\n\n# Setting up the environment to get secrets/certificates from Vault\necho \"Getting secrets/certificates from Vault server\"\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\nVAULT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login -H \"Content-Type: application/json\" -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | jq -r 'if .errors then . else .auth.client_token end')\nvalidateVaultResponse 'vault login token' \"${VAULT_TOKEN}\"\necho \"Logged into Vault\"\n\nmkdir -p ${MOUNT_PATH}\n\n# Check if certificates already present in the vault\nLOOKUP_SECRET_RESPONSE=$(curl --header \"X-Vault-Token: ${VAULT_TOKEN}\" ${VAULT_ADDR}/v1/${VAULT_SECRET_CRYPTO_PATH} | jq -r 'if .errors then . else . end')\nif echo ${LOOKUP_SECRET_RESPONSE} | grep \"errors\"\nthen\n  echo \"Certficates absent in vault. Ignore error warning\"\n  touch ${MOUNT_PATH}/absent_cacert.txt\nelif echo ${LOOKUP_SECRET_RESPONSE} | grep \"\\\"data\\\": null\"\nthen\n  echo \"Certficates absent in vault2. Ignore error warning\"\n  touch ${MOUNT_PATH}/absent_cacert.txt\nelse\n  validateVaultResponse \"${VAULT_SECRET_CRYPTO_PATH}\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\n  echo \"Certificates present in vault\"\n  touch ${MOUNT_PATH}/present_cacert.txt\nfi\n\n# Check if CA server admin credentials already present in the vault\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_TOKEN}\" ${VAULT_ADDR}/v1/${VAULT_SECRET_CREDENTIALS_PATH} | jq -r 'if .errors then . else . end')\nif echo ${LOOKUP_SECRET_RESPONSE} | grep \"errors\"\nthen\n  echo \"Certficates absent in vault. Ignore error warning\"\n  touch ${MOUNT_PATH}/absent_creds.txt\nelif echo ${LOOKUP_SECRET_RESPONSE} | grep \"\\\"data\\\": null\"\nthen\n  echo \"Certficates absent in vault2. Ignore error warning\"\n  touch ${MOUNT_PATH}/absent_creds.txt\nelse\n  validateVaultResponse \"${VAULT_SECRET_CREDENTIALS_PATH}\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\n  echo \"Certificates present in vault\"\n  touch ${MOUNT_PATH}/present_creds.txt\nfi \n\necho \"Done checking for certificates in vault\""], "command": ["sh", "-c"], "env": [{"name": "VAULT_ADDR", "value": "http://20.197.63.209:8200"}, {"name": "VAULT_APP_ROLE", "value": "vault-role"}, {"name": "KUBERNETES_AUTH_PATH", "value": "devmanufacturer-net-auth"}, {"name": "VAULT_SECRET_CRYPTO_PATH", "value": "secretv2/data/crypto/peerOrganizations/manufacturer-net/ca"}, {"name": "VAULT_SECRET_CREDENTIALS_PATH", "value": "secretv2/data/credentials/manufacturer-net/ca/manufacturer"}, {"name": "MOUNT_PATH", "value": "/certcheck"}], "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "imagePullPolicy": "IfNotPresent", "name": "init-check-certificates", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/certcheck", "name": "certcheck"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-vrm54", "readOnly": true}]}], "nodeName": "aks-agentpool-84293659-vmss000001", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "OnFailure", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "vault-auth", "serviceAccountName": "vault-auth", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"emptyDir": {"medium": "Memory"}, "name": "certcheck"}, {"name": "kube-api-access-vrm54", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:13:49Z", "reason": "PodCompleted", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:13:52Z", "reason": "PodCompleted", "status": "False", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:13:52Z", "reason": "PodCompleted", "status": "False", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:13:47Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://6f111df9638c262133a33fab4aeb8b6cedb4063d8590eea9444f941ccb8ea348", "image": "docker.io/hyperledgerlabs/alpine-utils:1.0", "imageID": "docker.io/hyperledgerlabs/alpine-utils@sha256:cab1d1566ddaa28e482b5eeda7426791bdf607cee41e2b752ccc566553810f74", "lastState": {}, "name": "cacerts", "ready": false, "restartCount": 0, "started": false, "state": {"terminated": {"containerID": "containerd://6f111df9638c262133a33fab4aeb8b6cedb4063d8590eea9444f941ccb8ea348", "exitCode": 0, "finishedAt": "2022-07-17T15:13:52Z", "reason": "Completed", "startedAt": "2022-07-17T15:13:50Z"}}}], "hostIP": "10.224.0.5", "initContainerStatuses": [{"containerID": "containerd://6d3489722712eca3d4169e1216b0976cf123de1167aedaa53269d3b00cc3449a", "image": "docker.io/hyperledgerlabs/alpine-utils:1.0", "imageID": "docker.io/hyperledgerlabs/alpine-utils@sha256:cab1d1566ddaa28e482b5eeda7426791bdf607cee41e2b752ccc566553810f74", "lastState": {}, "name": "init-check-certificates", "ready": true, "restartCount": 0, "state": {"terminated": {"containerID": "containerd://6d3489722712eca3d4169e1216b0976cf123de1167aedaa53269d3b00cc3449a", "exitCode": 0, "finishedAt": "2022-07-17T15:13:49Z", "reason": "Completed", "startedAt": "2022-07-17T15:13:49Z"}}}], "phase": "Succeeded", "podIP": "10.244.0.28", "podIPs": [{"ip": "10.244.0.28"}], "qosClass": "BestEffort", "startTime": "2022-07-17T15:13:47Z"}}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:28
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job manufacturer-cacerts-job in manufacturer-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:42
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create/ca-server : Copy custom config for fabric-ca server] **************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:65
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create the Ambassador credentials] ***************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:72
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create CA server values for Orderer] *************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:85
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create CA server values organizations] ***********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:101

TASK [helm_component : Ensures /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/ca dir exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:14
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/ca", "size": 4096, "state": "directory", "uid": 0}

TASK [helm_component : create value file for manufacturer-net] *****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:23
ok: [localhost] => {"changed": false, "checksum": "43eab6e535377d7e69aa03c9cff4eea43539dd45", "dest": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/ca/manufacturer-net.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/ca/manufacturer-net.yaml", "size": 1421, "state": "file", "uid": 0}

TASK [Helm lint] ***************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:32

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
ok: [localhost] => {"changed": false, "stat": {"atime": 1658070853.7708876, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "checksum": "43eab6e535377d7e69aa03c9cff4eea43539dd45", "ctime": 1658070853.214889, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 3627004, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658070852.9148896, "nlink": 1, "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/ca/manufacturer-net.yaml", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 1421, "uid": 0, "version": "1404642413", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [Check or create test directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:22

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"atime": 1658074423.378228, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "ctime": 1658074508.9818292, "dev": 64513, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626754, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658074508.9818292, "nlink": 2, "path": "./build/test", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "version": "4197237393", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:31
ok: [localhost] => {"ansible_facts": {"apiVersion": "helm.fluxcd.io/v1", "kind": "HelmRelease", "metadata": {"annotations": {"fluxcd.io/automated": "false"}, "name": "manufacturer-net-ca", "namespace": "manufacturer-net"}, "spec": {"chart": {"git": "ssh://git@github.com/adityajoshi12/bevel.git", "path": "platforms/hyperledger-fabric/charts/ca", "ref": "test"}, "releaseName": "manufacturer-net-ca", "values": {"annotations": {"pvc": null, "service": null}, "deployment": {"annotations": null}, "metadata": {"images": {"alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "ca": "hyperledger/fabric-ca:1.4.8"}, "namespace": "manufacturer-net"}, "proxy": {"external_url_suffix": "develop.local.com", "provider": "none", "type": "peer"}, "server": {"admin": "manufacturer-admin", "name": "ca", "tlsstatus": true}, "service": {"ports": {"tcp": {"port": 7054}}, "servicetype": "ClusterIP"}, "storage": {"storageclassname": "manufacturersc", "storagesize": "512Mi"}, "vault": {"address": "http://20.197.63.209:8200", "authpath": "devmanufacturer-net-auth", "imagesecretname": "regcred", "role": "vault-role", "secretadminpass": "secretv2/data/credentials/manufacturer-net/ca/manufacturer?user", "secretcert": "secretv2/data/crypto/peerOrganizations/manufacturer-net/ca?ca.manufacturer-net-cert.pem", "secretkey": "secretv2/data/crypto/peerOrganizations/manufacturer-net/ca?manufacturer-net-CA.key", "serviceaccountname": "vault-auth"}}}}, "ansible_included_var_files": ["/home/bevel/platforms/hyperledger-fabric/releases/dev/manufacturer/ca/manufacturer-net.yaml"], "changed": false}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:36
ok: [localhost] => {"changed": false, "checksum": "53b69d6b8102a6d5606b896998bbc02cc79e4920", "dest": "./build/test/manufacturer-net-ca.yaml", "gid": 0, "group": "root", "md5sum": "01b7a3e4d2e73d614c04eb45527f2a20", "mode": "0644", "owner": "root", "size": 1007, "src": "/root/.ansible/tmp/ansible-tmp-1658074518.2303777-34159-217054069556071/source", "state": "file", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:42
changed: [localhost] => {"changed": true, "cmd": "helm lint -f \"./build/test/manufacturer-net-ca.yaml\" \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n", "delta": "0:00:00.102770", "end": "2022-07-17 16:15:19.236999", "msg": "", "rc": 0, "start": "2022-07-17 16:15:19.134229", "stderr": "", "stderr_lines": [], "stdout": "==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, 0 chart(s) failed", "stdout_lines": ["==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca", "[INFO] Chart.yaml: icon is recommended", "", "1 chart(s) linted, 0 chart(s) failed"]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:116

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.436477", "end": "2022-07-17 16:15:22.701873", "msg": "", "rc": 0, "start": "2022-07-17 16:15:20.265396", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   0902cb2..08a24e6  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   0902cb2..08a24e6  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main 08a24e6] [ci skip] Pushing CA server files\n 1 file changed, 140 insertions(+)", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main 08a24e6] [ci skip] Pushing CA server files", " 1 file changed, 140 insertions(+)"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main 08a24e6] [ci skip] Pushing CA server files",
        " 1 file changed, 140 insertions(+)"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   0902cb2..08a24e6  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost
META: role_complete for localhost

TASK [creating the directory ./build/crypto-config/peerOrganizations/carrier-net/ca] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:14

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"exists": false}}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
changed: [localhost] => {"changed": true, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "./build/crypto-config/peerOrganizations/carrier-net/ca", "size": 4096, "state": "directory", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Create value file for cacerts job] ***************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:23

TASK [helm_component : Ensures /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier dir exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:14
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier", "size": 4096, "state": "directory", "uid": 0}

TASK [helm_component : create value file for carrier-cacerts-job] **************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:23
ok: [localhost] => {"changed": false, "checksum": "11a969548e9d9388e233d21c2e8abe5db9612e9a", "dest": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/carrier-cacerts-job.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/carrier-cacerts-job.yaml", "size": 1010, "state": "file", "uid": 0}

TASK [Helm lint] ***************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:32

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
ok: [localhost] => {"changed": false, "stat": {"atime": 1658070862.574867, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "checksum": "11a969548e9d9388e233d21c2e8abe5db9612e9a", "ctime": 1658070862.0028684, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 3627563, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658070861.7228692, "nlink": 1, "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/carrier-cacerts-job.yaml", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 1010, "uid": 0, "version": "2420851343", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [Check or create test directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:22

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"atime": 1658074423.378228, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "ctime": 1658074518.7177844, "dev": 64513, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626754, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658074518.7177844, "nlink": 2, "path": "./build/test", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "version": "4197237393", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:31
ok: [localhost] => {"ansible_facts": {"apiVersion": "helm.fluxcd.io/v1", "kind": "HelmRelease", "metadata": {"annotations": {"fluxcd.io/automated": "false"}, "name": "carrier-cacerts-job", "namespace": "carrier-net"}, "spec": {"chart": {"git": "ssh://git@github.com/adityajoshi12/bevel.git", "path": "platforms/hyperledger-fabric/charts/generate_cacerts", "ref": "test"}, "releaseName": "carrier-cacerts-job", "values": {"ca": {"subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net"}, "metadata": {"component_name": "carrier-net", "images": {"alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "fabrictools": "hyperledger/fabric-tools:2.2.2"}, "name": "carrier", "namespace": "carrier-net"}, "vault": {"address": "http://20.197.63.209:8200", "authpath": "devcarrier-net-auth", "imagesecretname": "regcred", "role": "vault-role", "secretcredentialsprefix": "secretv2/data/credentials/carrier-net/ca/carrier", "secretcryptoprefix": "secretv2/data/crypto/peerOrganizations/carrier-net/ca", "serviceaccountname": "vault-auth"}}}}, "ansible_included_var_files": ["/home/bevel/platforms/hyperledger-fabric/releases/dev/carrier/carrier/carrier-cacerts-job.yaml"], "changed": false}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:36
ok: [localhost] => {"changed": false, "checksum": "3086915aa64df520a6acca7b41888e441c3adfb8", "dest": "./build/test/carrier-cacerts-job.yaml", "gid": 0, "group": "root", "md5sum": "fa4682e51412fd9d0dce40255eb4751e", "mode": "0644", "owner": "root", "size": 612, "src": "/root/.ansible/tmp/ansible-tmp-1658074527.3807302-34509-217394118620276/source", "state": "file", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:42
changed: [localhost] => {"changed": true, "cmd": "helm lint -f \"./build/test/carrier-cacerts-job.yaml\" \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/generate_cacerts\"\n", "delta": "0:00:00.085165", "end": "2022-07-17 16:15:28.406407", "msg": "", "rc": 0, "start": "2022-07-17 16:15:28.321242", "stderr": "", "stderr_lines": [], "stdout": "==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/generate_cacerts\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, 0 chart(s) failed", "stdout_lines": ["==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/generate_cacerts", "[INFO] Chart.yaml: icon is recommended", "", "1 chart(s) linted, 0 chart(s) failed"]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:41

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.467888", "end": "2022-07-17 16:15:31.809217", "msg": "", "rc": 0, "start": "2022-07-17 16:15:29.341329", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   08a24e6..ea62d5a  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   08a24e6..ea62d5a  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main ea62d5a] [ci skip] Pushing CA server files\n 1 file changed, 144 insertions(+)", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main ea62d5a] [ci skip] Pushing CA server files", " 1 file changed, 144 insertions(+)"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main ea62d5a] [ci skip] Pushing CA server files",
        " 1 file changed, 144 insertions(+)"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   08a24e6..ea62d5a  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost

TASK [Check if cacerts-job job is completed] ***********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:53

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job carrier-cacerts-job in carrier-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:11
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2022-07-17T15:15:49Z", "generateName": "carrier-cacerts-job-", "labels": {"app": "carrier-cacerts-job", "app.kubernetes.io/instance": "carrier-cacerts-job", "app.kubernetes.io/managed-by": "Helm", "app.kubernetes.io/name": "carrier-cacerts-job", "controller-uid": "01837658-0efb-4745-8d7c-af1a0803d000", "helm.sh/chart": "generate_cacerts-0.2.0", "job-name": "carrier-cacerts-job"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:app": {}, "f:app.kubernetes.io/instance": {}, "f:app.kubernetes.io/managed-by": {}, "f:app.kubernetes.io/name": {}, "f:controller-uid": {}, "f:helm.sh/chart": {}, "f:job-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"01837658-0efb-4745-8d7c-af1a0803d000\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {"f:containers": {"k:{\"name\":\"cacerts\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"CA_SUBJECT\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"COMPONENT_NAME\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"KUBERNETES_AUTH_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"NAME\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ADDR\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_APP_ROLE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_CREDENTIALS_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_CRYPTO_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/certcheck\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:imagePullSecrets": {".": {}, "k:{\"name\":\"regcred\"}": {".": {}, "f:name": {}}}, "f:initContainers": {".": {}, "k:{\"name\":\"init-check-certificates\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"KUBERNETES_AUTH_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"MOUNT_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ADDR\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_APP_ROLE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_CREDENTIALS_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_CRYPTO_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/certcheck\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"certcheck\"}": {".": {}, "f:emptyDir": {".": {}, "f:medium": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T15:15:49Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:initContainerStatuses": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.30\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "time": "2022-07-17T15:15:55Z"}], "name": "carrier-cacerts-job-lx2d7", "namespace": "carrier-net", "ownerReferences": [{"apiVersion": "batch/v1", "blockOwnerDeletion": true, "controller": true, "kind": "Job", "name": "carrier-cacerts-job", "uid": "01837658-0efb-4745-8d7c-af1a0803d000"}], "resourceVersion": "72446", "uid": "1c5c5dd3-6211-42e1-8c57-c01674c22fdd"}, "spec": {"containers": [{"args": ["apk update && apk add jq curl openssl;\n\nvalidateVaultResponse () {\n  if echo ${2} | grep \"errors\"; then\n    echo \"ERROR: unable to retrieve ${1}: ${2}\"\n    exit 1\n  fi\n  if  [ \"$3\" == \"LOOKUPSECRETRESPONSE\" ]\n  then\n    http_code=$(curl -sS -o /dev/null -w \"%{http_code}\" \\\n    --header \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${1})\n    curl_response=$?\n    if test \"$http_code\" != \"200\" ; then\n        echo \"Http response code from Vault - $http_code and curl_response - $curl_response\"\n        if test \"$curl_response\" != \"0\"; then\n          echo \"Error: curl command failed with error code - $curl_response\"\n          exit 1\n        fi\n    fi\n  fi\n}\n\nif [ -e /certcheck/absent_cacert.txt ]\nthen\n\n  # Create openssl.conf file\n  echo \"[req]\nreq_extensions = v3_req\ndistinguished_name = dn\n\n[dn]\n\n[v3_req]\nbasicConstraints = critical, CA:TRUE\nkeyUsage = critical,digitalSignature, keyEncipherment, keyCertSign, cRLSign\nsubjectKeyIdentifier = hash\n\" > openssl.conf\n\n  # this commands generate the CA certificate\n  openssl ecparam -name prime256v1 -genkey -noout -out  ${COMPONENT_NAME}-CA.key\n  openssl req -x509 -config \"openssl.conf\" -new -nodes -key ${COMPONENT_NAME}-CA.key -days 1024 -out ca.${COMPONENT_NAME}-cert.pem -extensions v3_req -subj \"${CA_SUBJECT}\"\n\n  # This commands put the certificates with correct format for the curl command\n  while IFS= read -r line\n  do\n    echo \"$line\\n\"\n  done < ${COMPONENT_NAME}-CA.key > ./cakey_formatted.txt\n\n  while IFS= read -r line\n  do\n    echo \"$line\\n\"\n  done < ca.${COMPONENT_NAME}-cert.pem > ./capem_formatted.txt\n\n  PEM_CERTIFICATE=$(cat capem_formatted.txt)\n  KEY_CERTIFICATE=$(cat cakey_formatted.txt)\n  \n  echo \"\n    {\n      \\\"data\\\": \n        {\n          \\\"ca.${COMPONENT_NAME}-cert.pem\\\": \\\"${PEM_CERTIFICATE}\\\",\n          \\\"${COMPONENT_NAME}-CA.key\\\": \\\"${KEY_CERTIFICATE}\\\"\n        }  \n    }\" > payload.json\n\n  echo \"Putting secrets/certificates to Vault server\"\n  KUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\n  VAULT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login -H \"Content-Type: application/json\" -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | jq -r 'if .errors then . else .auth.client_token end')\n  validateVaultResponse 'vault login token' \"${VAULT_TOKEN}\"\n\n  # This command copy the CA certificates to the Vault\n  curl \\\n    -H \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n    -H \"Content-Type: application/json\" \\\n    -X POST \\\n    -d @payload.json \\\n    ${VAULT_ADDR}/v1/${VAULT_SECRET_CRYPTO_PATH}\n\n  # Check CA certificates\n  response_status=$(curl -s -o /dev/null -w \"%{http_code}\" \\\n  --header \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n  ${VAULT_ADDR}/v1/${VAULT_SECRET_CRYPTO_PATH});\n\n  validateVaultResponse 'certs creation' ${response_status};\n\n  rm payload.json\n\nfi\n\nif [ -e /certcheck/absent_creds.txt ]\nthen\n\n  # This task write the CA server admin credentials to Vault\n    curl \\\n      -H \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n      -H \"Content-Type: application/json\" \\\n      -X POST \\\n      -d '{ \"data\": {\"user\":\"'\"$NAME-adminpw\"'\"}}' \\\n      ${VAULT_ADDR}/v1/${VAULT_SECRET_CREDENTIALS_PATH}\n\n    # Check CA server admin credentials\n    response_status=$(curl -s -o /dev/null -w \"%{http_code}\" \\\n    --header \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${VAULT_SECRET_CREDENTIALS_PATH});\n\n    validateVaultResponse 'creds creation' ${response_status};\nfi"], "command": ["sh", "-c"], "env": [{"name": "VAULT_ADDR", "value": "http://20.197.63.209:8200"}, {"name": "VAULT_APP_ROLE", "value": "vault-role"}, {"name": "KUBERNETES_AUTH_PATH", "value": "devcarrier-net-auth"}, {"name": "VAULT_SECRET_CRYPTO_PATH", "value": "secretv2/data/crypto/peerOrganizations/carrier-net/ca"}, {"name": "VAULT_SECRET_CREDENTIALS_PATH", "value": "secretv2/data/credentials/carrier-net/ca/carrier"}, {"name": "COMPONENT_NAME", "value": "carrier-net"}, {"name": "NAME", "value": "carrier"}, {"name": "CA_SUBJECT", "value": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net"}], "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "imagePullPolicy": "IfNotPresent", "name": "cacerts", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/certcheck", "name": "certcheck"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-tnbvk", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "imagePullSecrets": [{"name": "regcred"}], "initContainers": [{"args": ["#!/usr/bin/env sh\nvalidateVaultResponse () {\n  if echo ${2} | grep \"errors\"; then\n    echo \"ERROR: unable to retrieve ${1}: ${2}\"\n    exit 1\n  fi\n  if  [ \"$3\" == \"LOOKUPSECRETRESPONSE\" ]\n  then\n    http_code=$(curl -sS -o /dev/null -w \"%{http_code}\" \\\n    --header \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${1})\n    curl_response=$?\n    if test \"$http_code\" != \"200\" ; then\n        echo \"Http response code from Vault - $http_code and curl_response - $curl_response\"\n        if test \"$curl_response\" != \"0\"; then\n          echo \"Error: curl command failed with error code - $curl_response\"\n          exit 1\n        fi\n    fi\n  fi\n}\n\n# Setting up the environment to get secrets/certificates from Vault\necho \"Getting secrets/certificates from Vault server\"\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\nVAULT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login -H \"Content-Type: application/json\" -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | jq -r 'if .errors then . else .auth.client_token end')\nvalidateVaultResponse 'vault login token' \"${VAULT_TOKEN}\"\necho \"Logged into Vault\"\n\nmkdir -p ${MOUNT_PATH}\n\n# Check if certificates already present in the vault\nLOOKUP_SECRET_RESPONSE=$(curl --header \"X-Vault-Token: ${VAULT_TOKEN}\" ${VAULT_ADDR}/v1/${VAULT_SECRET_CRYPTO_PATH} | jq -r 'if .errors then . else . end')\nif echo ${LOOKUP_SECRET_RESPONSE} | grep \"errors\"\nthen\n  echo \"Certficates absent in vault. Ignore error warning\"\n  touch ${MOUNT_PATH}/absent_cacert.txt\nelif echo ${LOOKUP_SECRET_RESPONSE} | grep \"\\\"data\\\": null\"\nthen\n  echo \"Certficates absent in vault2. Ignore error warning\"\n  touch ${MOUNT_PATH}/absent_cacert.txt\nelse\n  validateVaultResponse \"${VAULT_SECRET_CRYPTO_PATH}\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\n  echo \"Certificates present in vault\"\n  touch ${MOUNT_PATH}/present_cacert.txt\nfi\n\n# Check if CA server admin credentials already present in the vault\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_TOKEN}\" ${VAULT_ADDR}/v1/${VAULT_SECRET_CREDENTIALS_PATH} | jq -r 'if .errors then . else . end')\nif echo ${LOOKUP_SECRET_RESPONSE} | grep \"errors\"\nthen\n  echo \"Certficates absent in vault. Ignore error warning\"\n  touch ${MOUNT_PATH}/absent_creds.txt\nelif echo ${LOOKUP_SECRET_RESPONSE} | grep \"\\\"data\\\": null\"\nthen\n  echo \"Certficates absent in vault2. Ignore error warning\"\n  touch ${MOUNT_PATH}/absent_creds.txt\nelse\n  validateVaultResponse \"${VAULT_SECRET_CREDENTIALS_PATH}\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\n  echo \"Certificates present in vault\"\n  touch ${MOUNT_PATH}/present_creds.txt\nfi \n\necho \"Done checking for certificates in vault\""], "command": ["sh", "-c"], "env": [{"name": "VAULT_ADDR", "value": "http://20.197.63.209:8200"}, {"name": "VAULT_APP_ROLE", "value": "vault-role"}, {"name": "KUBERNETES_AUTH_PATH", "value": "devcarrier-net-auth"}, {"name": "VAULT_SECRET_CRYPTO_PATH", "value": "secretv2/data/crypto/peerOrganizations/carrier-net/ca"}, {"name": "VAULT_SECRET_CREDENTIALS_PATH", "value": "secretv2/data/credentials/carrier-net/ca/carrier"}, {"name": "MOUNT_PATH", "value": "/certcheck"}], "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "imagePullPolicy": "IfNotPresent", "name": "init-check-certificates", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/certcheck", "name": "certcheck"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-tnbvk", "readOnly": true}]}], "nodeName": "aks-agentpool-84293659-vmss000001", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "OnFailure", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "vault-auth", "serviceAccountName": "vault-auth", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"emptyDir": {"medium": "Memory"}, "name": "certcheck"}, {"name": "kube-api-access-tnbvk", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:15:52Z", "reason": "PodCompleted", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:15:55Z", "reason": "PodCompleted", "status": "False", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:15:55Z", "reason": "PodCompleted", "status": "False", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:15:49Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://d445906573235c863d910fbda968cfe94b5ae88ca0c21067f77fd5553b7366fb", "image": "docker.io/hyperledgerlabs/alpine-utils:1.0", "imageID": "docker.io/hyperledgerlabs/alpine-utils@sha256:cab1d1566ddaa28e482b5eeda7426791bdf607cee41e2b752ccc566553810f74", "lastState": {}, "name": "cacerts", "ready": false, "restartCount": 0, "started": false, "state": {"terminated": {"containerID": "containerd://d445906573235c863d910fbda968cfe94b5ae88ca0c21067f77fd5553b7366fb", "exitCode": 0, "finishedAt": "2022-07-17T15:15:54Z", "reason": "Completed", "startedAt": "2022-07-17T15:15:52Z"}}}], "hostIP": "10.224.0.5", "initContainerStatuses": [{"containerID": "containerd://31e32667e130907638d543894f26a9080ac63108d15dedab4d004690c7202736", "image": "docker.io/hyperledgerlabs/alpine-utils:1.0", "imageID": "docker.io/hyperledgerlabs/alpine-utils@sha256:cab1d1566ddaa28e482b5eeda7426791bdf607cee41e2b752ccc566553810f74", "lastState": {}, "name": "init-check-certificates", "ready": true, "restartCount": 0, "state": {"terminated": {"containerID": "containerd://31e32667e130907638d543894f26a9080ac63108d15dedab4d004690c7202736", "exitCode": 0, "finishedAt": "2022-07-17T15:15:51Z", "reason": "Completed", "startedAt": "2022-07-17T15:15:51Z"}}}], "phase": "Succeeded", "podIP": "10.244.0.30", "podIPs": [{"ip": "10.244.0.30"}], "qosClass": "BestEffort", "startTime": "2022-07-17T15:15:49Z"}}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:28
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job carrier-cacerts-job in carrier-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:42
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create/ca-server : Copy custom config for fabric-ca server] **************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:65
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create the Ambassador credentials] ***************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:72
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create CA server values for Orderer] *************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:85
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create CA server values organizations] ***********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:101

TASK [helm_component : Ensures /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca dir exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:14
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca", "size": 4096, "state": "directory", "uid": 0}

TASK [helm_component : create value file for carrier-net] **********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:23
ok: [localhost] => {"changed": false, "checksum": "501249c8e737e6621d8984aa045ffc48fb21f210", "dest": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml", "size": 1356, "state": "file", "uid": 0}

TASK [Helm lint] ***************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:32

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
ok: [localhost] => {"changed": false, "stat": {"atime": 1658070965.8626237, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "checksum": "501249c8e737e6621d8984aa045ffc48fb21f210", "ctime": 1658070965.3026252, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 3883016, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658070965.0346258, "nlink": 1, "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 1356, "uid": 0, "version": "3698390131", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [Check or create test directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:22

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"atime": 1658074423.378228, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "ctime": 1658074527.957742, "dev": 64513, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626754, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658074527.957742, "nlink": 2, "path": "./build/test", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "version": "4197237393", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:31
ok: [localhost] => {"ansible_facts": {"apiVersion": "helm.fluxcd.io/v1", "kind": "HelmRelease", "metadata": {"annotations": {"fluxcd.io/automated": "false"}, "name": "carrier-net-ca", "namespace": "carrier-net"}, "spec": {"chart": {"git": "ssh://git@github.com/adityajoshi12/bevel.git", "path": "platforms/hyperledger-fabric/charts/ca", "ref": "test"}, "releaseName": "carrier-net-ca", "values": {"annotations": {"pvc": null, "service": null}, "deployment": {"annotations": null}, "metadata": {"images": {"alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "ca": "hyperledger/fabric-ca:1.4.8"}, "namespace": "carrier-net"}, "proxy": {"external_url_suffix": "develop.local.com", "provider": "none", "type": "peer"}, "server": {"admin": "carrier-admin", "name": "ca", "tlsstatus": true}, "service": {"ports": {"tcp": {"port": 7054}}, "servicetype": "ClusterIP"}, "storage": {"storageclassname": "carriersc", "storagesize": "512Mi"}, "vault": {"address": "http://20.197.63.209:8200", "authpath": "devcarrier-net-auth", "imagesecretname": "regcred", "role": "vault-role", "secretadminpass": "secretv2/data/credentials/carrier-net/ca/carrier?user", "secretcert": "secretv2/data/crypto/peerOrganizations/carrier-net/ca?ca.carrier-net-cert.pem", "secretkey": "secretv2/data/crypto/peerOrganizations/carrier-net/ca?carrier-net-CA.key", "serviceaccountname": "vault-auth"}}}}, "ansible_included_var_files": ["/home/bevel/platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml"], "changed": false}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:36
ok: [localhost] => {"changed": false, "checksum": "1ac71a798b72ccf9dbef002c98b7cc013867f54a", "dest": "./build/test/carrier-net-ca.yaml", "gid": 0, "group": "root", "md5sum": "11a18f396f1923f6d0edd547fd6ee5b6", "mode": "0644", "owner": "root", "size": 957, "src": "/root/.ansible/tmp/ansible-tmp-1658074537.205111-34833-190296716749114/source", "state": "file", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:42
changed: [localhost] => {"changed": true, "cmd": "helm lint -f \"./build/test/carrier-net-ca.yaml\" \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n", "delta": "0:00:00.104138", "end": "2022-07-17 16:15:38.198336", "msg": "", "rc": 0, "start": "2022-07-17 16:15:38.094198", "stderr": "", "stderr_lines": [], "stdout": "==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, 0 chart(s) failed", "stdout_lines": ["==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca", "[INFO] Chart.yaml: icon is recommended", "", "1 chart(s) linted, 0 chart(s) failed"]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:116

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.481144", "end": "2022-07-17 16:15:41.663735", "msg": "", "rc": 0, "start": "2022-07-17 16:15:39.182591", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   ea62d5a..522bdde  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   ea62d5a..522bdde  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main 522bdde] [ci skip] Pushing CA server files\n 1 file changed, 140 insertions(+)", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main 522bdde] [ci skip] Pushing CA server files", " 1 file changed, 140 insertions(+)"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main 522bdde] [ci skip] Pushing CA server files",
        " 1 file changed, 140 insertions(+)"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   ea62d5a..522bdde  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost
META: role_complete for localhost

TASK [Create generate_crypto.sh for each organization] *************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:81

TASK [create/crypto_script : Create build directory if it does not exist] ******
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:13
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "./build", "size": 4096, "state": "directory", "uid": 0}

TASK [create/crypto_script : Create generate_crypto script file for orderers] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:20
changed: [localhost] => (item={'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}) => {"ansible_loop_var": "orderer", "changed": true, "checksum": "591d4fa37b8d3bf255a5489d638bfbd701e96e2e", "dest": "./build/generate-crypto-supplychain-orderer1.sh", "gid": 0, "group": "root", "md5sum": "95825c6fe5fa6bc50887d3354ffeb41f", "mode": "0644", "orderer": {"consensus": "raft", "grpc": {"port": 7050}, "name": "orderer1", "orderer": null, "type": "orderer"}, "owner": "root", "size": 2840, "src": "/root/.ansible/tmp/ansible-tmp-1658074543.1030154-35011-257512366731370/source", "state": "file", "uid": 0}

TASK [create/crypto_script : Create generate_crypto script file for orderer organisation] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:41
changed: [localhost] => {"changed": true, "checksum": "91616fb55f3cf0372244fd186e8420dccd363ae0", "dest": "./build/generate-crypto-supplychain.sh", "gid": 0, "group": "root", "md5sum": "00effe50a42132064934fb3fded38b68", "mode": "0644", "owner": "root", "size": 3363, "src": "/root/.ansible/tmp/ansible-tmp-1658074543.7865322-35050-15990531601931/source", "state": "file", "uid": 0}

TASK [create/crypto_script : Create generate_crypto script file for organisations] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create/crypto_script : Create build directory if it does not exist] ******
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:13
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "./build", "size": 4096, "state": "directory", "uid": 0}

TASK [create/crypto_script : Create generate_crypto script file for orderers] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:20
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/crypto_script : Create generate_crypto script file for orderer organisation] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/crypto_script : Create generate_crypto script file for organisations] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:58
changed: [localhost] => {"changed": true, "checksum": "53920e6ba257622ac6bb04d68c1758d53354c918", "dest": "./build/generate-crypto-manufacturer.sh", "gid": 0, "group": "root", "md5sum": "37bf014fd5911ca23553454f92d42d10", "mode": "0644", "owner": "root", "size": 5853, "src": "/root/.ansible/tmp/ansible-tmp-1658074545.2120345-35121-251414439658162/source", "state": "file", "uid": 0}
META: role_complete for localhost

TASK [create/crypto_script : Create build directory if it does not exist] ******
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:13
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "./build", "size": 4096, "state": "directory", "uid": 0}

TASK [create/crypto_script : Create generate_crypto script file for orderers] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:20
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/crypto_script : Create generate_crypto script file for orderer organisation] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/crypto_script : Create generate_crypto script file for organisations] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:58
changed: [localhost] => {"changed": true, "checksum": "8e6c5273cd1cd6f70cc1bde63c0a50189c5a2f75", "dest": "./build/generate-crypto-carrier.sh", "gid": 0, "group": "root", "md5sum": "9e03c5acae77634c32103acfa557443b", "mode": "0644", "owner": "root", "size": 5804, "src": "/root/.ansible/tmp/ansible-tmp-1658074546.4941716-35190-202493138485951/source", "state": "file", "uid": 0}
META: role_complete for localhost

TASK [pause] *******************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:91
Pausing for 360 seconds
(ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
[pause]
Sleeping... so that the client certificates are valid:
[[[KPress 'C' to continue the play or 'A' to abort 
ok: [localhost] => {"changed": false, "delta": 16, "echo": true, "rc": 0, "start": "2022-07-17 16:15:47.301192", "stderr": "", "stdout": "Paused for 0.28 minutes", "stop": "2022-07-17 16:16:04.021990", "user_input": ""}

TASK [Create CA tools for each organization] ***********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:96
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.manufacturer-net:7054', 'certificate': '/home/bevel/build/manufacturer/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net:7051', 'certificate': '/home/bevel/build/manufacturer/peer0.crt', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain1', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/manufacturer/server.crt", "url": "ca.manufacturer-net:7054"}, "cloud_provider": "azure", "country": "CH", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "Zurich", "name": "manufacturer", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/manufacturer/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain1", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "enabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.manufacturer-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.manufacturer-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "Zurich", "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': '/home/bevel/build/carrier/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net:7051', 'certificate': '/home/bevel/build/carrier/peer0.crt', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/carrier/server.crt", "url": "ca.carrier-net:7054"}, "cloud_provider": "azure", "country": "GB", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "carrier", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/carrier/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "disabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.carrier-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.carrier-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "London", "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}

TASK [waiting for the CA server to be created in supplychain-net] **************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/orderer/tasks/main.yaml:12
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in supplychain-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:11
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:28
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in supplychain-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:42
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2022-07-17T15:13:47Z", "generateName": "ca-5dddf59dd4-", "labels": {"app.kubernetes.io/instance": "supplychain-net-ca", "app.kubernetes.io/managed-by": "Helm", "app.kubernetes.io/name": "ca", "helm.sh/chart": "ca-0.2.0", "name": "ca", "pod-template-hash": "5dddf59dd4"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:app.kubernetes.io/instance": {}, "f:app.kubernetes.io/managed-by": {}, "f:app.kubernetes.io/name": {}, "f:helm.sh/chart": {}, "f:name": {}, "f:pod-template-hash": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"2f951138-9676-4028-91b9-726339f5f04f\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {"f:containers": {"k:{\"name\":\"ca\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"FABRIC_CA_HOME\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_CA_CERTFILE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_CA_KEYFILE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_CA_NAME\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_DB_DATASOURCE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_DEBUG\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_TLS_CERTFILE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_TLS_ENABLED\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_TLS_KEYFILE\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":7054,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:protocol": {}}, "k:{\"containerPort\":9443,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:protocol": {}}}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/custom-config/\"}": {".": {}, "f:mountPath": {}, "f:name": {}}, "k:{\"mountPath\":\"/etc/hyperledger/fabric-ca-server-config\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/var/hyperledger/fabric-ca-server/db/\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:imagePullSecrets": {".": {}, "k:{\"name\":\"regcred\"}": {".": {}, "f:name": {}}}, "f:initContainers": {".": {}, "k:{\"name\":\"ca-certs-init\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"KUBERNETES_AUTH_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"MOUNT_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ADDR\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_APP_ROLE\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/secret\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"ca-config-volume\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:items": {}, "f:name": {}}, "f:name": {}}, "k:{\"name\":\"ca-server-db\"}": {".": {}, "f:name": {}, "f:persistentVolumeClaim": {".": {}, "f:claimName": {}}}, "k:{\"name\":\"certificates\"}": {".": {}, "f:emptyDir": {".": {}, "f:medium": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T15:13:47Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {".": {}, "k:{\"type\":\"PodScheduled\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}}}, "manager": "kube-scheduler", "operation": "Update", "time": "2022-07-17T15:13:47Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:initContainerStatuses": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.29\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "time": "2022-07-17T15:14:26Z"}], "name": "ca-5dddf59dd4-wxrtg", "namespace": "supplychain-net", "ownerReferences": [{"apiVersion": "apps/v1", "blockOwnerDeletion": true, "controller": true, "kind": "ReplicaSet", "name": "ca-5dddf59dd4", "uid": "2f951138-9676-4028-91b9-726339f5f04f"}], "resourceVersion": "72075", "uid": "ed19455b-be3d-413f-965c-39aafaf6ebf6"}, "spec": {"containers": [{"args": ["#!/usr/bin/env sh\nif [[ -d /custom-config/ ]] && [[ -f /custom-config/fabric-ca-server-config.yaml ]]; then\n  cp /custom-config/fabric-ca-server-config.yaml $FABRIC_CA_HOME/fabric-ca-server-config.yaml\n  fabric-ca-server start --config $FABRIC_CA_HOME/fabric-ca-server-config.yaml -d\nelse\n  sleep 1 && fabric-ca-server start -b supplychain-admin:`cat /etc/hyperledger/fabric-ca-server-config/user_cred` -d\nfi"], "command": ["sh", "-c"], "env": [{"name": "FABRIC_CA_HOME", "value": "/etc/hyperledger/fabric-ca-server"}, {"name": "FABRIC_CA_SERVER_CA_NAME", "value": "ca.supplychain-net"}, {"name": "FABRIC_CA_SERVER_CA_CERTFILE", "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"}, {"name": "FABRIC_CA_SERVER_CA_KEYFILE", "value": "/etc/hyperledger/fabric-ca-server-config/server.key"}, {"name": "FABRIC_CA_SERVER_TLS_ENABLED", "value": "true"}, {"name": "FABRIC_CA_SERVER_DEBUG", "value": "true"}, {"name": "FABRIC_CA_SERVER_TLS_CERTFILE", "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"}, {"name": "FABRIC_CA_SERVER_TLS_KEYFILE", "value": "/etc/hyperledger/fabric-ca-server-config/server.key"}, {"name": "FABRIC_CA_SERVER_DB_DATASOURCE", "value": "/var/hyperledger/fabric-ca-server/db/fabric-ca-server.db"}, {"name": "FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS", "value": "0.0.0.0:9443"}], "image": "hyperledger/fabric-ca:1.4.8", "imagePullPolicy": "IfNotPresent", "name": "ca", "ports": [{"containerPort": 7054, "protocol": "TCP"}, {"containerPort": 9443, "protocol": "TCP"}], "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/etc/hyperledger/fabric-ca-server-config", "name": "certificates", "readOnly": true}, {"mountPath": "/var/hyperledger/fabric-ca-server/db/", "name": "ca-server-db"}, {"mountPath": "/custom-config/", "name": "ca-config-volume"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-n8w9t", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "imagePullSecrets": [{"name": "regcred"}], "initContainers": [{"args": ["#!/usr/bin/env sh\nvalidateVaultResponse () {\n  if echo ${2} | grep \"errors\"; then\n    echo \"ERROR: unable to retrieve ${1}: ${2}\"\n    exit 1\n  fi\n  if  [ \"$3\" == \"LOOKUPSECRETRESPONSE\" ]\n  then\n    http_code=$(curl -sS -o /dev/null -w \"%{http_code}\" \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key})\n    curl_response=$?\n    if test \"$http_code\" != \"200\" ; then\n        echo \"Http response code from Vault - $http_code\"\n        if test \"$curl_response\" != \"0\"; then\n           echo \"Error: curl command failed with error code - $curl_response\"\n           exit 1\n        fi\n    fi\n  fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')\nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nSECRET_CERT=secretv2/data/crypto/ordererOrganizations/supplychain-net/ca?ca.supplychain-net-cert.pem\nvault_secret_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data.data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.crt\n\nSECRET_KEY=secretv2/data/crypto/ordererOrganizations/supplychain-net/ca?supplychain-net-CA.key\nvault_secret_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data.data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.key\n\n\nSECRET_ADMIN_PASS=secretv2/data/credentials/supplychain-net/ca/supplychain?user\nvault_secret_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data.data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/user_cred"], "command": ["sh", "-c"], "env": [{"name": "VAULT_ADDR", "value": "http://20.197.63.209:8200"}, {"name": "KUBERNETES_AUTH_PATH", "value": "devsupplychain-net-auth"}, {"name": "VAULT_APP_ROLE", "value": "vault-role"}, {"name": "MOUNT_PATH", "value": "/secret"}], "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "imagePullPolicy": "IfNotPresent", "name": "ca-certs-init", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/secret", "name": "certificates"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-n8w9t", "readOnly": true}]}], "nodeName": "aks-agentpool-84293659-vmss000001", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "vault-auth", "serviceAccountName": "vault-auth", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"name": "ca-server-db", "persistentVolumeClaim": {"claimName": "ca-server-db-pvc"}}, {"emptyDir": {"medium": "Memory"}, "name": "certificates"}, {"configMap": {"defaultMode": 420, "items": [{"key": "fabric-ca-server-config.yaml", "path": "fabric-ca-server-config.yaml"}], "name": "ca-config"}, "name": "ca-config-volume"}, {"name": "kube-api-access-n8w9t", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:14:09Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:14:26Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:14:26Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:13:51Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://39446088aafd6273e1f3042a668646761092b8a3b4094758ebec3d3e16797ccf", "image": "docker.io/hyperledger/fabric-ca:1.4.8", "imageID": "docker.io/hyperledger/fabric-ca@sha256:51e5f7082530633dfd3512adf4dfd873cc8fa1675d7385003f213d1067c538d8", "lastState": {}, "name": "ca", "ready": true, "restartCount": 0, "started": true, "state": {"running": {"startedAt": "2022-07-17T15:14:25Z"}}}], "hostIP": "10.224.0.5", "initContainerStatuses": [{"containerID": "containerd://cac487584bd115254525ce7c1873123e364368dadb5c6ffe495fd4924899dfa6", "image": "docker.io/hyperledgerlabs/alpine-utils:1.0", "imageID": "docker.io/hyperledgerlabs/alpine-utils@sha256:cab1d1566ddaa28e482b5eeda7426791bdf607cee41e2b752ccc566553810f74", "lastState": {}, "name": "ca-certs-init", "ready": true, "restartCount": 0, "state": {"terminated": {"containerID": "containerd://cac487584bd115254525ce7c1873123e364368dadb5c6ffe495fd4924899dfa6", "exitCode": 0, "finishedAt": "2022-07-17T15:14:08Z", "reason": "Completed", "startedAt": "2022-07-17T15:14:08Z"}}}], "phase": "Running", "podIP": "10.244.0.29", "podIPs": [{"ip": "10.244.0.29"}], "qosClass": "BestEffort", "startTime": "2022-07-17T15:13:51Z"}}]}
META: role_complete for localhost

TASK [Create CA-tools Values for orderer] **************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/orderer/tasks/main.yaml:25

TASK [helm_component : Ensures /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/ca-tools dir exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:14
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/ca-tools", "size": 4096, "state": "directory", "uid": 0}

TASK [helm_component : create value file for supplychain-net] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:23
ok: [localhost] => {"changed": false, "checksum": "0495545897888fdf45662d3c486a389dc5b4570c", "dest": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/ca-tools/supplychain-net.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/ca-tools/supplychain-net.yaml", "size": 2372, "state": "file", "uid": 0}

TASK [Helm lint] ***************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:32

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
ok: [localhost] => {"changed": false, "stat": {"atime": 1658071027.1984775, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "checksum": "0495545897888fdf45662d3c486a389dc5b4570c", "ctime": 1658071026.7104785, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 3883022, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658071026.482479, "nlink": 1, "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/ca-tools/supplychain-net.yaml", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 2372, "uid": 0, "version": "3305116303", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [Check or create test directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:22

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"atime": 1658074423.378228, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "ctime": 1658074537.7336972, "dev": 64513, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626754, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658074537.7336972, "nlink": 2, "path": "./build/test", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "version": "4197237393", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:31
ok: [localhost] => {"ansible_facts": {"apiVersion": "helm.fluxcd.io/v1", "kind": "HelmRelease", "metadata": {"annotations": {"fluxcd.io/automated": "false"}, "name": "supplychain-net-ca-tools", "namespace": "supplychain-net"}, "spec": {"chart": {"git": "ssh://git@github.com/adityajoshi12/bevel.git", "path": "platforms/hyperledger-fabric/charts/catools", "ref": "test"}, "releaseName": "supplychain-net-ca-tools", "values": {"annotations": {"deployment": null, "pvc": null, "service": null}, "healthcheck": {"retries": 10, "sleepTimeAfterError": 2}, "image": {"alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "pullPolicy": "IfNotPresent", "repository": "hyperledger/fabric-ca-tools", "tag": "1.2.1"}, "metadata": {"component_type": "orderer", "name": "ca-tools", "namespace": "supplychain-net", "org_name": "supplychain", "proxy": "none"}, "orderers": {"name": "orderer1-"}, "org_data": {"ca_url": "ca.supplychain-net:7054", "cert_subject": "O=Orderer/L=51.50,-0.13,London/C=GB", "component_country": "UK", "component_location": "London", "component_state": "London", "component_subject": "O=Orderer,L=51.50/-0.13/London,C=GB", "external_url_suffix": "develop.local.com"}, "replicaCount": 1, "storage": {"storageclassname": "supplychainsc", "storagesize": "512Mi"}, "vault": {"address": "http://20.197.63.209:8200", "authpath": "devsupplychain-net-auth", "imagesecretname": "regcred", "role": "vault-role", "secretambassador": "secretv2/data/crypto/ordererOrganizations/supplychain-net/ambassador", "secretcert": "secretv2/data/crypto/ordererOrganizations/supplychain-net/ca?ca.supplychain-net-cert.pem", "secretconfigfile": "secretv2/data/crypto/ordererOrganizations/supplychain-net/msp/config", "secretcouchdb": "secretv2/data/credentials/supplychain-net/couchdb/supplychain", "secretkey": "secretv2/data/crypto/ordererOrganizations/supplychain-net/ca?supplychain-net-CA.key", "secretmsp": "secretv2/data/crypto/ordererOrganizations/supplychain-net/users/admin/msp", "secretorderer": "secretv2/data/crypto/ordererOrganizations/supplychain-net/orderers", "secretpeer": "secretv2/data/crypto/ordererOrganizations/supplychain-net/peers", "secretpeerorderertls": "secretv2/data/crypto/ordererOrganizations/supplychain-net/orderer/tls", "secrettls": "secretv2/data/crypto/ordererOrganizations/supplychain-net/users/admin/tls", "serviceaccountname": "vault-auth"}}}}, "ansible_included_var_files": ["/home/bevel/platforms/hyperledger-fabric/releases/dev/supplychain/ca-tools/supplychain-net.yaml"], "changed": false}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:36
ok: [localhost] => {"changed": false, "checksum": "4b9a258c05e003b2771ab3492f3a7b8de0dc3bbe", "dest": "./build/test/supplychain-net-ca-tools.yaml", "gid": 0, "group": "root", "md5sum": "efba52acfbde147eebb870c43f9ae5ad", "mode": "0644", "owner": "root", "size": 1890, "src": "/root/.ansible/tmp/ansible-tmp-1658074568.7603998-35401-156087140300729/source", "state": "file", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:42
changed: [localhost] => {"changed": true, "cmd": "helm lint -f \"./build/test/supplychain-net-ca-tools.yaml\" \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\"\n", "delta": "0:00:00.113119", "end": "2022-07-17 16:16:09.765867", "msg": "", "rc": 0, "start": "2022-07-17 16:16:09.652748", "stderr": "", "stderr_lines": [], "stdout": "==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, 0 chart(s) failed", "stdout_lines": ["==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools", "[INFO] Chart.yaml: icon is recommended", "", "1 chart(s) linted, 0 chart(s) failed"]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/orderer/tasks/main.yaml:49

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA-tools files\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.491901", "end": "2022-07-17 16:16:13.227457", "msg": "", "rc": 0, "start": "2022-07-17 16:16:10.735556", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   522bdde..23527e1  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   522bdde..23527e1  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main 23527e1] [ci skip] Pushing CA-tools files\n 1 file changed, 200 insertions(+)", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main 23527e1] [ci skip] Pushing CA-tools files", " 1 file changed, 200 insertions(+)"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main 23527e1] [ci skip] Pushing CA-tools files",
        " 1 file changed, 200 insertions(+)"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   522bdde..23527e1  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost

TASK [Wait for CA key exists in vault.] ****************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/orderer/tasks/main.yaml:60
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
changed: [localhost] => {"attempts": 1, "changed": true, "cmd": "vault kv get -field=supplychain-net-CA.key secretv2/crypto/ordererOrganizations/supplychain-net/ca\n", "delta": "0:00:00.212697", "end": "2022-07-17 16:16:14.803804", "msg": "", "rc": 0, "start": "2022-07-17 16:16:14.591107", "stderr": "", "stderr_lines": [], "stdout": "-----BEGIN EC PRIVATE KEY-----\nMHcCAQEEIEvjBGe148WQOhCXCEt/uVQWuAzXUwLY07f4PCP3Zop7oAoGCCqGSM49\nAwEHoUQDQgAEAO6su5jtV8hvMqeldYI0NoeNl6PS2qCOMju1bHe2BOwxIFYwD1Vk\nIa0b/v4OfjyUxqKzWn/3//nSIklwqtzgxQ==\n-----END EC PRIVATE KEY-----", "stdout_lines": ["-----BEGIN EC PRIVATE KEY-----", "MHcCAQEEIEvjBGe148WQOhCXCEt/uVQWuAzXUwLY07f4PCP3Zop7oAoGCCqGSM49", "AwEHoUQDQgAEAO6su5jtV8hvMqeldYI0NoeNl6PS2qCOMju1bHe2BOwxIFYwD1Vk", "Ia0b/v4OfjyUxqKzWn/3//nSIklwqtzgxQ==", "-----END EC PRIVATE KEY-----"]}
META: role_complete for localhost

TASK [Wait for admin tls exists in vault.] *************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/orderer/tasks/main.yaml:69
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
changed: [localhost] => {"attempts": 1, "changed": true, "cmd": "vault kv get -field=client.key secretv2/crypto/ordererOrganizations/supplychain-net/users/admin/tls\n", "delta": "0:00:00.366336", "end": "2022-07-17 16:16:16.667390", "msg": "", "rc": 0, "start": "2022-07-17 16:16:16.301054", "stderr": "", "stderr_lines": [], "stdout": "-----BEGIN PRIVATE KEY-----\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg5f0dDFgt/hd6P42/\njDM+p+nGHKAwcq7kkyOn5e0zixKhRANCAAS3I5q8gZ2b7DHdbSlbnnqQnQa2ddg6\nBBMzusz17VbZwgEkZCKNksBfmeS7Q1UWoNiLPPReoQNZOvi7zRq71AhF\n-----END PRIVATE KEY-----", "stdout_lines": ["-----BEGIN PRIVATE KEY-----", "MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg5f0dDFgt/hd6P42/", "jDM+p+nGHKAwcq7kkyOn5e0zixKhRANCAAS3I5q8gZ2b7DHdbSlbnnqQnQa2ddg6", "BBMzusz17VbZwgEkZCKNksBfmeS7Q1UWoNiLPPReoQNZOvi7zRq71AhF", "-----END PRIVATE KEY-----"]}
META: role_complete for localhost

TASK [Wait for orderers tls exists in vault.] **********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/orderer/tasks/main.yaml:78
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
changed: [localhost] => {"attempts": 1, "changed": true, "cmd": "vault kv get -field=server.key secretv2/crypto/ordererOrganizations/supplychain-net/orderers/orderer1.supplychain-net/tls\n", "delta": "0:00:00.275485", "end": "2022-07-17 16:16:18.632912", "msg": "", "rc": 0, "start": "2022-07-17 16:16:18.357427", "stderr": "", "stderr_lines": [], "stdout": "-----BEGIN PRIVATE KEY-----\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgAJt22IKrBDp+g2XB\ndw3LktxGQbR5bDDqXZI1nRv+LAahRANCAARm7ZQi2JGljn1S79nfV4FilRmSdWdC\nAjPibCCHsxYS70m1cZFhK3X2dAseI7PhT3ZiQiV6G/LOGl4PRc2e8VrW\n-----END PRIVATE KEY-----", "stdout_lines": ["-----BEGIN PRIVATE KEY-----", "MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgAJt22IKrBDp+g2XB", "dw3LktxGQbR5bDDqXZI1nRv+LAahRANCAARm7ZQi2JGljn1S79nfV4FilRmSdWdC", "AjPibCCHsxYS70m1cZFhK3X2dAseI7PhT3ZiQiV6G/LOGl4PRc2e8VrW", "-----END PRIVATE KEY-----"]}
META: role_complete for localhost

TASK [Wait for ambassador key exists in vault.] ********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/orderer/tasks/main.yaml:90
skipping: [localhost] => (item={'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}})  => {"ansible_loop_var": "orderer", "changed": false, "orderer": {"consensus": "raft", "grpc": {"port": 7050}, "name": "orderer1", "orderer": null, "type": "orderer"}, "skip_reason": "Conditional result was False"}

TASK [Create the Ambassador credentials for orderers] **************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/orderer/tasks/main.yaml:104
skipping: [localhost] => (item={'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}})  => {"ansible_loop_var": "orderer", "changed": false, "orderer": {"consensus": "raft", "grpc": {"port": 7050}, "name": "orderer1", "orderer": null, "type": "orderer"}, "skip_reason": "Conditional result was False"}

TASK [create/ca-tools/orderer : Copy the msp folder from the ca tools] *********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/orderer/tasks/main.yaml:120
changed: [localhost] => {"changed": true, "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/home/bevel/build/config  kubectl get po -n supplychain-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/home/bevel/build/config kubectl cp supplychain-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/supplychain-net/msp ./build/crypto-config/ordererOrganizations/supplychain-net/msp\n", "delta": "0:00:01.612890", "end": "2022-07-17 16:16:21.034123", "msg": "", "rc": 0, "start": "2022-07-17 16:16:19.421233", "stderr": "", "stderr_lines": [], "stdout": "Defaulting container name to ca-tools.", "stdout_lines": ["Defaulting container name to ca-tools."]}

TASK [create/ca-tools/orderer : Copy the tls server.crt file from the ca tools] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/orderer/tasks/main.yaml:128
changed: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'supplychain', 'uri': 'orderer1.supplychain-net:7050', 'certificate': '/home/bevel/build/orderer1.crt'}) => {"ansible_loop_var": "orderer", "changed": true, "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/home/bevel/build/config  kubectl get po -n supplychain-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/home/bevel/build/config kubectl cp supplychain-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/supplychain-net/orderers/orderer1.supplychain-net/tls/server.crt ./build/crypto-config/ordererOrganizations/supplychain-net/orderers/orderer1.supplychain-net/tls/server.crt\n", "delta": "0:00:00.966162", "end": "2022-07-17 16:16:22.781280", "msg": "", "orderer": {"certificate": "/home/bevel/build/orderer1.crt", "name": "orderer1", "orderer": null, "org_name": "supplychain", "type": "orderer", "uri": "orderer1.supplychain-net:7050"}, "rc": 0, "start": "2022-07-17 16:16:21.815118", "stderr": "", "stderr_lines": [], "stdout": "Defaulting container name to ca-tools.", "stdout_lines": ["Defaulting container name to ca-tools."]}

TASK [create/ca-tools/orderer : Create the certs directory if it does not exist] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/orderer/tasks/main.yaml:137
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'supplychain', 'uri': 'orderer1.supplychain-net:7050', 'certificate': '/home/bevel/build/orderer1.crt'}) => {"ansible_loop_var": "orderer", "changed": false, "gid": 1000, "group": "1000", "mode": "0777", "orderer": {"certificate": "/home/bevel/build/orderer1.crt", "name": "orderer1", "orderer": null, "org_name": "supplychain", "type": "orderer", "uri": "orderer1.supplychain-net:7050"}, "owner": "1000", "path": "/home/bevel/build", "size": 4096, "state": "directory", "uid": 1000}

TASK [create/ca-tools/orderer : Copy the tls ca.crt file from the ca tools] ****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/orderer/tasks/main.yaml:149
changed: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'supplychain', 'uri': 'orderer1.supplychain-net:7050', 'certificate': '/home/bevel/build/orderer1.crt'}) => {"ansible_loop_var": "orderer", "changed": true, "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/home/bevel/build/config  kubectl get po -n supplychain-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/home/bevel/build/config kubectl cp supplychain-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/supplychain-net/orderers/orderer1.supplychain-net/tls/ca.crt  /home/bevel/build/orderer1.crt\n", "delta": "0:00:01.122747", "end": "2022-07-17 16:16:25.173770", "msg": "", "orderer": {"certificate": "/home/bevel/build/orderer1.crt", "name": "orderer1", "orderer": null, "org_name": "supplychain", "type": "orderer", "uri": "orderer1.supplychain-net:7050"}, "rc": 0, "start": "2022-07-17 16:16:24.051023", "stderr": "", "stderr_lines": [], "stdout": "Defaulting container name to ca-tools.", "stdout_lines": ["Defaulting container name to ca-tools."]}
META: role_complete for localhost

TASK [Create CA tools for each organization] ***********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:113
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.supplychain-net:7054', 'certificate': '/home/bevel/build/supplychain/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft'}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/supplychain/server.crt", "url": "ca.supplychain-net:7054"}, "cloud_provider": "azure", "country": "UK", "external_url_suffix": "develop.local.com", "fabric_console": "enabled", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "supplychain", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net", "type": "ca"}, "consensus": {"name": "raft"}, "orderers": [{"consensus": "raft", "grpc": {"port": 7050}, "name": "orderer1", "orderer": null, "type": "orderer"}]}, "state": "London", "subject": "O=Orderer,L=51.50/-0.13/London,C=GB", "type": "orderer", "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}

TASK [waiting for the CA server to be created in manufacturer-net] *************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:12

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in manufacturer-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:11
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:28
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in manufacturer-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:42
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2022-07-17T15:15:49Z", "generateName": "ca-5c755d546b-", "labels": {"app.kubernetes.io/instance": "manufacturer-net-ca", "app.kubernetes.io/managed-by": "Helm", "app.kubernetes.io/name": "ca", "helm.sh/chart": "ca-0.2.0", "name": "ca", "pod-template-hash": "5c755d546b"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:app.kubernetes.io/instance": {}, "f:app.kubernetes.io/managed-by": {}, "f:app.kubernetes.io/name": {}, "f:helm.sh/chart": {}, "f:name": {}, "f:pod-template-hash": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"d190a58e-e477-4ef3-9b45-d48d00206dda\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {"f:containers": {"k:{\"name\":\"ca\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"FABRIC_CA_HOME\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_CA_CERTFILE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_CA_KEYFILE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_CA_NAME\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_DB_DATASOURCE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_DEBUG\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_TLS_CERTFILE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_TLS_ENABLED\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_TLS_KEYFILE\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":7054,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:protocol": {}}, "k:{\"containerPort\":9443,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:protocol": {}}}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/custom-config/\"}": {".": {}, "f:mountPath": {}, "f:name": {}}, "k:{\"mountPath\":\"/etc/hyperledger/fabric-ca-server-config\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/var/hyperledger/fabric-ca-server/db/\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:imagePullSecrets": {".": {}, "k:{\"name\":\"regcred\"}": {".": {}, "f:name": {}}}, "f:initContainers": {".": {}, "k:{\"name\":\"ca-certs-init\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"KUBERNETES_AUTH_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"MOUNT_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ADDR\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_APP_ROLE\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/secret\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"ca-config-volume\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:items": {}, "f:name": {}}, "f:name": {}}, "k:{\"name\":\"ca-server-db\"}": {".": {}, "f:name": {}, "f:persistentVolumeClaim": {".": {}, "f:claimName": {}}}, "k:{\"name\":\"certificates\"}": {".": {}, "f:emptyDir": {".": {}, "f:medium": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T15:15:49Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {".": {}, "k:{\"type\":\"PodScheduled\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}}}, "manager": "kube-scheduler", "operation": "Update", "time": "2022-07-17T15:15:49Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:initContainerStatuses": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.31\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "time": "2022-07-17T15:16:12Z"}], "name": "ca-5c755d546b-hjmqq", "namespace": "manufacturer-net", "ownerReferences": [{"apiVersion": "apps/v1", "blockOwnerDeletion": true, "controller": true, "kind": "ReplicaSet", "name": "ca-5c755d546b", "uid": "d190a58e-e477-4ef3-9b45-d48d00206dda"}], "resourceVersion": "72516", "uid": "0fa3126d-7e21-4b08-8da8-471b799bf069"}, "spec": {"containers": [{"args": ["#!/usr/bin/env sh\nif [[ -d /custom-config/ ]] && [[ -f /custom-config/fabric-ca-server-config.yaml ]]; then\n  cp /custom-config/fabric-ca-server-config.yaml $FABRIC_CA_HOME/fabric-ca-server-config.yaml\n  fabric-ca-server start --config $FABRIC_CA_HOME/fabric-ca-server-config.yaml -d\nelse\n  sleep 1 && fabric-ca-server start -b manufacturer-admin:`cat /etc/hyperledger/fabric-ca-server-config/user_cred` -d\nfi"], "command": ["sh", "-c"], "env": [{"name": "FABRIC_CA_HOME", "value": "/etc/hyperledger/fabric-ca-server"}, {"name": "FABRIC_CA_SERVER_CA_NAME", "value": "ca.manufacturer-net"}, {"name": "FABRIC_CA_SERVER_CA_CERTFILE", "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"}, {"name": "FABRIC_CA_SERVER_CA_KEYFILE", "value": "/etc/hyperledger/fabric-ca-server-config/server.key"}, {"name": "FABRIC_CA_SERVER_TLS_ENABLED", "value": "true"}, {"name": "FABRIC_CA_SERVER_DEBUG", "value": "true"}, {"name": "FABRIC_CA_SERVER_TLS_CERTFILE", "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"}, {"name": "FABRIC_CA_SERVER_TLS_KEYFILE", "value": "/etc/hyperledger/fabric-ca-server-config/server.key"}, {"name": "FABRIC_CA_SERVER_DB_DATASOURCE", "value": "/var/hyperledger/fabric-ca-server/db/fabric-ca-server.db"}, {"name": "FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS", "value": "0.0.0.0:9443"}], "image": "hyperledger/fabric-ca:1.4.8", "imagePullPolicy": "IfNotPresent", "name": "ca", "ports": [{"containerPort": 7054, "protocol": "TCP"}, {"containerPort": 9443, "protocol": "TCP"}], "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/etc/hyperledger/fabric-ca-server-config", "name": "certificates", "readOnly": true}, {"mountPath": "/var/hyperledger/fabric-ca-server/db/", "name": "ca-server-db"}, {"mountPath": "/custom-config/", "name": "ca-config-volume"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-ln64m", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "imagePullSecrets": [{"name": "regcred"}], "initContainers": [{"args": ["#!/usr/bin/env sh\nvalidateVaultResponse () {\n  if echo ${2} | grep \"errors\"; then\n    echo \"ERROR: unable to retrieve ${1}: ${2}\"\n    exit 1\n  fi\n  if  [ \"$3\" == \"LOOKUPSECRETRESPONSE\" ]\n  then\n    http_code=$(curl -sS -o /dev/null -w \"%{http_code}\" \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key})\n    curl_response=$?\n    if test \"$http_code\" != \"200\" ; then\n        echo \"Http response code from Vault - $http_code\"\n        if test \"$curl_response\" != \"0\"; then\n           echo \"Error: curl command failed with error code - $curl_response\"\n           exit 1\n        fi\n    fi\n  fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')\nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nSECRET_CERT=secretv2/data/crypto/peerOrganizations/manufacturer-net/ca?ca.manufacturer-net-cert.pem\nvault_secret_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data.data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.crt\n\nSECRET_KEY=secretv2/data/crypto/peerOrganizations/manufacturer-net/ca?manufacturer-net-CA.key\nvault_secret_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data.data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.key\n\n\nSECRET_ADMIN_PASS=secretv2/data/credentials/manufacturer-net/ca/manufacturer?user\nvault_secret_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data.data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/user_cred"], "command": ["sh", "-c"], "env": [{"name": "VAULT_ADDR", "value": "http://20.197.63.209:8200"}, {"name": "KUBERNETES_AUTH_PATH", "value": "devmanufacturer-net-auth"}, {"name": "VAULT_APP_ROLE", "value": "vault-role"}, {"name": "MOUNT_PATH", "value": "/secret"}], "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "imagePullPolicy": "IfNotPresent", "name": "ca-certs-init", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/secret", "name": "certificates"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-ln64m", "readOnly": true}]}], "nodeName": "aks-agentpool-84293659-vmss000001", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "vault-auth", "serviceAccountName": "vault-auth", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"name": "ca-server-db", "persistentVolumeClaim": {"claimName": "ca-server-db-pvc"}}, {"emptyDir": {"medium": "Memory"}, "name": "certificates"}, {"configMap": {"defaultMode": 420, "items": [{"key": "fabric-ca-server-config.yaml", "path": "fabric-ca-server-config.yaml"}], "name": "ca-config"}, "name": "ca-config-volume"}, {"name": "kube-api-access-ln64m", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:16:11Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:16:12Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:16:12Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:15:53Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://58c6225daf57856c3dd679353bab7814815919e50e782e0c65c090297370e8cb", "image": "docker.io/hyperledger/fabric-ca:1.4.8", "imageID": "docker.io/hyperledger/fabric-ca@sha256:51e5f7082530633dfd3512adf4dfd873cc8fa1675d7385003f213d1067c538d8", "lastState": {}, "name": "ca", "ready": true, "restartCount": 0, "started": true, "state": {"running": {"startedAt": "2022-07-17T15:16:11Z"}}}], "hostIP": "10.224.0.5", "initContainerStatuses": [{"containerID": "containerd://fba5fc52673c7491fc0c6cad154e3b5cc36ad612a45959a0fc874ebc4b80c41f", "image": "docker.io/hyperledgerlabs/alpine-utils:1.0", "imageID": "docker.io/hyperledgerlabs/alpine-utils@sha256:cab1d1566ddaa28e482b5eeda7426791bdf607cee41e2b752ccc566553810f74", "lastState": {}, "name": "ca-certs-init", "ready": true, "restartCount": 0, "state": {"terminated": {"containerID": "containerd://fba5fc52673c7491fc0c6cad154e3b5cc36ad612a45959a0fc874ebc4b80c41f", "exitCode": 0, "finishedAt": "2022-07-17T15:16:10Z", "reason": "Completed", "startedAt": "2022-07-17T15:16:10Z"}}}], "phase": "Running", "podIP": "10.244.0.31", "podIPs": [{"ip": "10.244.0.31"}], "qosClass": "BestEffort", "startTime": "2022-07-17T15:15:53Z"}}]}
META: role_complete for localhost

TASK [create/ca-tools/peer : Check that orderer-certificate file exists] *******
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:24
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'supplychain', 'uri': 'orderer1.supplychain-net:7050', 'certificate': '/home/bevel/build/orderer1.crt'}) => {"ansible_loop_var": "orderer", "changed": false, "failed_when_result": false, "orderer": {"certificate": "/home/bevel/build/orderer1.crt", "name": "orderer1", "orderer": null, "org_name": "supplychain", "type": "orderer", "uri": "orderer1.supplychain-net:7050"}, "stat": {"atime": 1658071166.0701423, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "checksum": "7c2e2fb7ceb9bea39597db031d8ee14956258774", "ctime": 1658074585.1654816, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 2072885, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658074585.1654816, "nlink": 1, "path": "/home/bevel/build/orderer1.crt", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 757, "uid": 0, "version": "2876949908", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [create/ca-tools/peer : Check if Orderer certs exist in Vault] ************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:36
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'supplychain', 'uri': 'orderer1.supplychain-net:7050', 'certificate': '/home/bevel/build/orderer1.crt'}) => {"ansible_loop_var": "orderer", "changed": false, "cmd": "vault kv get -field=ca.crt secretv2/crypto/peerOrganizations/manufacturer-net/orderer/tls\n", "delta": "0:00:00.304537", "end": "2022-07-17 16:16:30.238038", "msg": "", "orderer": {"certificate": "/home/bevel/build/orderer1.crt", "name": "orderer1", "orderer": null, "org_name": "supplychain", "type": "orderer", "uri": "orderer1.supplychain-net:7050"}, "rc": 0, "start": "2022-07-17 16:16:29.933501", "stderr": "", "stderr_lines": [], "stdout": "-----BEGIN CERTIFICATE-----\nMIICATCCAaagAwIBAgIUOLdDsOd/KOnv7plbQLmfSD7mbu8wCgYIKoZIzj0EAwIw\nXjELMAkGA1UEBhMCR0IxDzANBgNVBAgMBkxvbmRvbjEPMA0GA1UEBwwGTG9uZG9u\nMRAwDgYDVQQKDAdPcmRlcmVyMRswGQYDVQQDDBJjYS5zdXBwbHljaGFpbi1uZXQw\nHhcNMjIwNzE3MTUxMTQ4WhcNMjUwNTA2MTUxMTQ4WjBeMQswCQYDVQQGEwJHQjEP\nMA0GA1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xEDAOBgNVBAoMB09yZGVy\nZXIxGzAZBgNVBAMMEmNhLnN1cHBseWNoYWluLW5ldDBZMBMGByqGSM49AgEGCCqG\nSM49AwEHA0IABADurLuY7VfIbzKnpXWCNDaHjZej0tqgjjI7tWx3tgTsMSBWMA9V\nZCGtG/7+Dn48lMais1p/9//50iJJcKrc4MWjQjBAMA8GA1UdEwEB/wQFMAMBAf8w\nDgYDVR0PAQH/BAQDAgGmMB0GA1UdDgQWBBTXQxbFyQYSidZ5SdZPfX6hActTtTAK\nBggqhkjOPQQDAgNJADBGAiEAlWEVqyE9YnsNjE8OGRSIcc3dkxxcSRwncMj989Sh\nQOgCIQCK6hBheX7X2QOu9yLbFB1ojPf1htqb++WXLFC8NNjAJA==\n-----END CERTIFICATE-----", "stdout_lines": ["-----BEGIN CERTIFICATE-----", "MIICATCCAaagAwIBAgIUOLdDsOd/KOnv7plbQLmfSD7mbu8wCgYIKoZIzj0EAwIw", "XjELMAkGA1UEBhMCR0IxDzANBgNVBAgMBkxvbmRvbjEPMA0GA1UEBwwGTG9uZG9u", "MRAwDgYDVQQKDAdPcmRlcmVyMRswGQYDVQQDDBJjYS5zdXBwbHljaGFpbi1uZXQw", "HhcNMjIwNzE3MTUxMTQ4WhcNMjUwNTA2MTUxMTQ4WjBeMQswCQYDVQQGEwJHQjEP", "MA0GA1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xEDAOBgNVBAoMB09yZGVy", "ZXIxGzAZBgNVBAMMEmNhLnN1cHBseWNoYWluLW5ldDBZMBMGByqGSM49AgEGCCqG", "SM49AwEHA0IABADurLuY7VfIbzKnpXWCNDaHjZej0tqgjjI7tWx3tgTsMSBWMA9V", "ZCGtG/7+Dn48lMais1p/9//50iJJcKrc4MWjQjBAMA8GA1UdEwEB/wQFMAMBAf8w", "DgYDVR0PAQH/BAQDAgGmMB0GA1UdDgQWBBTXQxbFyQYSidZ5SdZPfX6hActTtTAK", "BggqhkjOPQQDAgNJADBGAiEAlWEVqyE9YnsNjE8OGRSIcc3dkxxcSRwncMj989Sh", "QOgCIQCK6hBheX7X2QOu9yLbFB1ojPf1htqb++WXLFC8NNjAJA==", "-----END CERTIFICATE-----"]}

TASK [create/ca-tools/peer : Save Orderer certs if not in Vault] ***************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:51
changed: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'supplychain', 'uri': 'orderer1.supplychain-net:7050', 'certificate': '/home/bevel/build/orderer1.crt'}) => {"ansible_loop_var": "orderer", "changed": true, "checksum": "0a3ebd32607a5cbd837f55d7ed65cfb1f7fbf6c4", "dest": "/home/bevel/build/orderer1.crt", "gid": 0, "group": "root", "md5sum": "7e2d02e8ef4735a63096866d79f5be5f", "mode": "0644", "orderer": {"certificate": "/home/bevel/build/orderer1.crt", "name": "orderer1", "orderer": null, "org_name": "supplychain", "type": "orderer", "uri": "orderer1.supplychain-net:7050"}, "owner": "root", "size": 756, "src": "/root/.ansible/tmp/ansible-tmp-1658074590.5160573-35975-70737856773637/source", "state": "file", "uid": 0}

TASK [create/ca-tools/peer : Create the certs directory if it does not exist] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:62
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../charts/catools/certs", "size": 4096, "state": "directory", "uid": 0}

TASK [create/ca-tools/peer : Copy the tls orderers certs to the chart catools directory] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:69
changed: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'supplychain', 'uri': 'orderer1.supplychain-net:7050', 'certificate': '/home/bevel/build/orderer1.crt'}) => {"ansible_loop_var": "orderer", "changed": true, "cmd": "cp /home/bevel/build/orderer1.crt /home/bevel/platforms/hyperledger-fabric/configuration/../charts/catools/certs/orderer1-ca.crt\n", "delta": "0:00:00.026685", "end": "2022-07-17 16:16:33.182593", "msg": "", "orderer": {"certificate": "/home/bevel/build/orderer1.crt", "name": "orderer1", "orderer": null, "org_name": "supplychain", "type": "orderer", "uri": "orderer1.supplychain-net:7050"}, "rc": 0, "start": "2022-07-17 16:16:33.155908", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [Create CA-tools Values for peer] *****************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:78

TASK [helm_component : Ensures /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/ca-tools dir exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:14
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/ca-tools", "size": 4096, "state": "directory", "uid": 0}

TASK [helm_component : create value file for manufacturer-net] *****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:23
ok: [localhost] => {"changed": false, "checksum": "df2a22a3393af30481c9df68034fb5725e95d46d", "dest": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/ca-tools/manufacturer-net.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/ca-tools/manufacturer-net.yaml", "size": 2586, "state": "file", "uid": 0}

TASK [Helm lint] ***************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:32

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
ok: [localhost] => {"changed": false, "stat": {"atime": 1658071168.8581355, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "checksum": "df2a22a3393af30481c9df68034fb5725e95d46d", "ctime": 1658071168.4741364, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 4916216, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658071168.262137, "nlink": 1, "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/ca-tools/manufacturer-net.yaml", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 2586, "uid": 0, "version": "2405500499", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [Check or create test directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:22

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"atime": 1658074423.378228, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "ctime": 1658074569.2935536, "dev": 64513, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626754, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658074569.2935536, "nlink": 2, "path": "./build/test", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "version": "4197237393", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:31
ok: [localhost] => {"ansible_facts": {"apiVersion": "helm.fluxcd.io/v1", "kind": "HelmRelease", "metadata": {"annotations": {"fluxcd.io/automated": "false"}, "name": "manufacturer-net-ca-tools", "namespace": "manufacturer-net"}, "spec": {"chart": {"git": "ssh://git@github.com/adityajoshi12/bevel.git", "path": "platforms/hyperledger-fabric/charts/catools", "ref": "test"}, "releaseName": "manufacturer-net-ca-tools", "values": {"annotations": {"deployment": null, "pvc": null, "service": null}, "checks": {"refresh_cert_value": false}, "healthcheck": {"retries": 10, "sleepTimeAfterError": 2}, "image": {"alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "pullPolicy": "IfNotPresent", "repository": "hyperledger/fabric-ca-tools", "tag": "1.2.1"}, "metadata": {"component_type": "peer", "name": "ca-tools", "namespace": "manufacturer-net", "org_name": "manufacturer", "proxy": "none"}, "orderers": {"name": "orderer1-"}, "orderers_info": [{"name": "orderer1", "path": "certs/orderer1-ca.crt"}], "org_data": {"ca_url": "ca.manufacturer-net:7054", "cert_subject": "O=Manufacturer/OU=Manufacturer/L=47.38,8.54,Zurich/C=CH", "component_country": "CH", "component_location": "Zurich", "component_state": "Zurich", "component_subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH", "external_url_suffix": "develop.local.com"}, "peer_count": "1", "peers": {"name": "peer0,-"}, "replicaCount": 1, "storage": {"storageclassname": "manufacturersc", "storagesize": "512Mi"}, "vault": {"address": "http://20.197.63.209:8200", "authpath": "devmanufacturer-net-auth", "imagesecretname": "regcred", "role": "vault-role", "secretambassador": "secretv2/data/crypto/peerOrganizations/manufacturer-net/ambassador", "secretcert": "secretv2/data/crypto/peerOrganizations/manufacturer-net/ca?ca.manufacturer-net-cert.pem", "secretconfigfile": "secretv2/data/crypto/peerOrganizations/manufacturer-net/msp/config", "secretcouchdb": "secretv2/data/credentials/manufacturer-net/couchdb/manufacturer", "secretkey": "secretv2/data/crypto/peerOrganizations/manufacturer-net/ca?manufacturer-net-CA.key", "secretmsp": "secretv2/data/crypto/peerOrganizations/manufacturer-net/users/admin/msp", "secretorderer": "secretv2/data/crypto/peerOrganizations/manufacturer-net/orderers", "secretpeer": "secretv2/data/crypto/peerOrganizations/manufacturer-net/peers", "secretpeerorderertls": "secretv2/data/crypto/peerOrganizations/manufacturer-net/orderer/tls", "secrettls": "secretv2/data/crypto/peerOrganizations/manufacturer-net/users/admin/tls", "serviceaccountname": "vault-auth"}}}}, "ansible_included_var_files": ["/home/bevel/platforms/hyperledger-fabric/releases/dev/manufacturer/ca-tools/manufacturer-net.yaml"], "changed": false}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:36
ok: [localhost] => {"changed": false, "checksum": "15dee2b9a8f848417c6935fb7b527dc666eaccbd", "dest": "./build/test/manufacturer-net-ca-tools.yaml", "gid": 0, "group": "root", "md5sum": "95579519c3afd3959e2438f25f015add", "mode": "0644", "owner": "root", "size": 2063, "src": "/root/.ansible/tmp/ansible-tmp-1658074598.1434186-36204-242731067144367/source", "state": "file", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:42
changed: [localhost] => {"changed": true, "cmd": "helm lint -f \"./build/test/manufacturer-net-ca-tools.yaml\" \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\"\n", "delta": "0:00:00.192228", "end": "2022-07-17 16:16:39.929157", "msg": "", "rc": 0, "start": "2022-07-17 16:16:39.736929", "stderr": "coalesce.go:200: warning: cannot overwrite table with non table for orderers_info (map[])", "stderr_lines": ["coalesce.go:200: warning: cannot overwrite table with non table for orderers_info (map[])"], "stdout": "==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, 0 chart(s) failed", "stdout_lines": ["==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools", "[INFO] Chart.yaml: icon is recommended", "", "1 chart(s) linted, 0 chart(s) failed"]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:105

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
