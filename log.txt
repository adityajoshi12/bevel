Starting build process...
Adding env variables...
Validatin network yaml
/home/bevel/build/network.yaml valid
Running the playbook...
ansible-playbook [core 2.12.6]
  config file = None
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/local/lib/python3.8/dist-packages/ansible
  ansible collection location = /root/.ansible/collections:/usr/share/ansible/collections
  executable location = /usr/local/bin/ansible-playbook
  python version = 3.8.10 (default, Mar 15 2022, 12:22:08) [GCC 9.4.0]
  jinja version = 3.1.2
  libyaml = True
No config file found; using defaults
redirecting (type: modules) ansible.builtin.npm to community.general.npm
Skipping callback 'default', as we already have a stdout callback.
Skipping callback 'minimal', as we already have a stdout callback.
Skipping callback 'oneline', as we already have a stdout callback.

PLAYBOOK: site.yaml ************************************************************
7 plays in /home/bevel/platforms/shared/configuration/site.yaml

PLAY [all] *********************************************************************
META: ran handlers
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************

TASK [Gathering Facts] *********************************************************
task path: /home/bevel/platforms/shared/configuration/network-schema-validator.yaml:12
ok: [localhost]
META: ran handlers

TASK [install ajv-cli] *********************************************************
task path: /home/bevel/platforms/shared/configuration/network-schema-validator.yaml:16
redirecting (type: modules) ansible.builtin.npm to community.general.npm
ok: [localhost] => {"changed": false}

TASK [set_fact] ****************************************************************
task path: /home/bevel/platforms/shared/configuration/network-schema-validator.yaml:22
ok: [localhost] => {"ansible_facts": {"tempNetworkyaml": {"network": {"channels": [{"channel": null, "channel_name": "AllChannel", "consortium": "SupplyChainConsortium", "endorsers": [{"name": "carrier", "organization": null, "peers": [{"certificate": "/home/bevel/build/carrier/peer0.crt", "corepeerAddress": "peer0.carrier-net:7051", "name": "peer0", "peer": null}]}, {"name": "manufacturer", "organization": null, "peers": [{"certificate": "/home/bevel/build/manufacturer/peer0.crt", "corepeerAddress": "peer0.manufacturer-net:7051", "name": "peer0", "peer": null}]}], "genesis": {"name": "OrdererGenesis"}, "orderer": {"name": "supplychain"}, "participants": [{"name": "carrier", "ordererAddress": "orderer1.supplychain-net:7050", "org_status": "new", "organization": null, "peers": [{"gossipAddress": "peer0.carrier-net:7051", "name": "peer0", "peer": null, "peerAddress": "peer0.carrier-net:7051"}], "type": "creator"}, {"name": "manufacturer", "ordererAddress": "orderer1.supplychain-net:7050", "org_status": "new", "organization": null, "peers": [{"gossipAddress": "peer0.manufacturer-net:7051", "name": "peer0", "peer": null, "peerAddress": "peer0.manufacturer-net:7051"}], "type": "joiner"}]}], "docker": {"password": "Farcry@2014", "url": "index.docker.io/hyperledgerlabs", "username": "adityajoshi12"}, "env": {"annotations": {"deployment": {}, "pvc": {}, "service": {}}, "external_dns": "disabled", "proxy": "none", "retry_count": 50, "type": "dev"}, "orderers": [{"certificate": "/home/bevel/build/orderer1.crt", "name": "orderer1", "orderer": null, "org_name": "supplychain", "type": "orderer", "uri": "orderer1.supplychain-net:7050"}], "organizations": [{"ca_data": {"certificate": "/home/bevel/build/supplychain/server.crt", "url": "ca.supplychain-net:7054"}, "cloud_provider": "azure", "country": "UK", "external_url_suffix": "develop.local.com", "fabric_console": "enabled", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "supplychain", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net", "type": "ca"}, "consensus": {"name": "raft"}, "orderers": [{"consensus": "raft", "grpc": {"port": 7050}, "name": "orderer1", "orderer": null, "type": "orderer"}]}, "state": "London", "subject": "O=Orderer,L=51.50/-0.13/London,C=GB", "type": "orderer", "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, {"ca_data": {"certificate": "/home/bevel/build/manufacturer/server.crt", "url": "ca.manufacturer-net:7054"}, "cloud_provider": "azure", "country": "CH", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "Zurich", "name": "manufacturer", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/manufacturer/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain1", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "enabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.manufacturer-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.manufacturer-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "Zurich", "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, {"ca_data": {"certificate": "/home/bevel/build/carrier/server.crt", "url": "ca.carrier-net:7054"}, "cloud_provider": "azure", "country": "GB", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "carrier", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/carrier/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "disabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.carrier-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.carrier-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "London", "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}], "type": "fabric", "version": "2.2.2"}}}, "changed": false}

TASK [Ensures build dir exists] ************************************************
task path: /home/bevel/platforms/shared/configuration/network-schema-validator.yaml:24
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [check/setup : check if dir exists or not] ********************************
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"exists": false}}

TASK [check/setup : Ensures dir exists] ****************************************
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
changed: [localhost] => {"changed": true, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "./build", "size": 4096, "state": "directory", "uid": 0}

TASK [check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [check/setup : Check if policy exists] ************************************
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [check/setup : Check docker cred exists] **********************************
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [check/setup : Check git https cred exists] *******************************
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [check/setup : check if certs exists in vault.] ***************************
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create tempNetwork yaml file] ********************************************
task path: /home/bevel/platforms/shared/configuration/network-schema-validator.yaml:30
changed: [localhost] => {"changed": true, "checksum": "e4d9abf92a4b9e545a5b9141476b57ecee97cc56", "dest": "./build/temp.yaml", "gid": 0, "group": "root", "md5sum": "c40f4efbfe0877b35011fe3eed6a4366", "mode": "0644", "owner": "root", "size": 9448, "src": "/root/.ansible/tmp/ansible-tmp-1658074347.4729013-28888-102894041527894/source", "state": "file", "uid": 0}

TASK [run schema validator on network.yaml] ************************************
task path: /home/bevel/platforms/shared/configuration/network-schema-validator.yaml:35
changed: [localhost] => {"changed": true, "cmd": "ajv validate -s ../../network-schema.json -d ./build/temp.yaml\n", "delta": "0:00:01.429344", "end": "2022-07-17 16:12:30.374699", "msg": "", "rc": 0, "start": "2022-07-17 16:12:28.945355", "stderr": "", "stderr_lines": [], "stdout": "./build/temp.yaml valid", "stdout_lines": ["./build/temp.yaml valid"]}

TASK [Remove the build directory and contents] *********************************
task path: /home/bevel/platforms/shared/configuration/network-schema-validator.yaml:38
changed: [localhost] => {"changed": true, "path": "./build", "state": "absent"}
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************

TASK [Gathering Facts] *********************************************************
task path: /home/bevel/platforms/shared/configuration/environment-setup.yaml:13
ok: [localhost]
META: ran handlers

TASK [include_role : setup/kubectl] ********************************************
task path: /home/bevel/platforms/shared/configuration/environment-setup.yaml:17

TASK [setup/kubectl : register temporary directory] ****************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:8
changed: [localhost] => {"changed": true, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/tmp/ansible.04ecccy4", "size": 4096, "state": "directory", "uid": 0}

TASK [setup/kubectl : check kubectl] *******************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:15
ok: [localhost] => {"changed": false, "stat": {"atime": 1658067664.3912246, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 83960, "charset": "unknown", "checksum": "371d59fce375bd7d74256c136280eeef732d7611", "ctime": 1658067663.979227, "dev": 2097204, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 13166487, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1613566452.0, "nlink": 1, "path": "/root/bin/kubectl", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 42987520, "uid": 0, "version": "4162813991", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [setup/kubectl : Download kubectl binary] *********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:22
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/kubectl : Unarchive kubernetes-client] *****************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:31
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/kubectl : create bin directory] ************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:39
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/kubectl : Copy kubectl binary to destination directory] ************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:47
skipping: [localhost] => (item=kubectl)  => {"ansible_loop_var": "bin_item", "bin_item": "kubectl", "changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/kubectl : Test kubectl installation] *******************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:61
ok: [localhost] => {"changed": false, "cmd": ["kubectl", "version", "--client", "--short"], "delta": "0:00:00.077033", "end": "2022-07-17 16:12:33.348864", "msg": "", "rc": 0, "start": "2022-07-17 16:12:33.271831", "stderr": "", "stderr_lines": [], "stdout": "Client Version: v1.19.8", "stdout_lines": ["Client Version: v1.19.8"]}

TASK [setup/kubectl : Changing the current context namespace to default] *******
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:67
changed: [localhost] => {"changed": true, "cmd": "KUBECONFIG=/home/bevel/build/config kubectl config use-context bevel\nKUBECONFIG=/home/bevel/build/config kubectl config set-context --current --namespace=default\n", "delta": "0:00:00.203486", "end": "2022-07-17 16:12:33.985524", "msg": "", "rc": 0, "start": "2022-07-17 16:12:33.782038", "stderr": "", "stderr_lines": [], "stdout": "Switched to context \"bevel\".\nContext \"bevel\" modified.", "stdout_lines": ["Switched to context \"bevel\".", "Context \"bevel\" modified."]}
META: role_complete for localhost

TASK [setup/kubectl : register temporary directory] ****************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:8
changed: [localhost] => {"changed": true, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/tmp/ansible.1rkjuy0t", "size": 4096, "state": "directory", "uid": 0}

TASK [setup/kubectl : check kubectl] *******************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:15
ok: [localhost] => {"changed": false, "stat": {"atime": 1658067664.3912246, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 83960, "charset": "unknown", "checksum": "371d59fce375bd7d74256c136280eeef732d7611", "ctime": 1658067663.979227, "dev": 2097204, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 13166487, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1613566452.0, "nlink": 1, "path": "/root/bin/kubectl", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 42987520, "uid": 0, "version": "4162813991", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [setup/kubectl : Download kubectl binary] *********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:22
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/kubectl : Unarchive kubernetes-client] *****************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:31
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/kubectl : create bin directory] ************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:39
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/kubectl : Copy kubectl binary to destination directory] ************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:47
skipping: [localhost] => (item=kubectl)  => {"ansible_loop_var": "bin_item", "bin_item": "kubectl", "changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/kubectl : Test kubectl installation] *******************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:61
ok: [localhost] => {"changed": false, "cmd": ["kubectl", "version", "--client", "--short"], "delta": "0:00:00.086691", "end": "2022-07-17 16:12:35.724101", "msg": "", "rc": 0, "start": "2022-07-17 16:12:35.637410", "stderr": "", "stderr_lines": [], "stdout": "Client Version: v1.19.8", "stdout_lines": ["Client Version: v1.19.8"]}

TASK [setup/kubectl : Changing the current context namespace to default] *******
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:67
changed: [localhost] => {"changed": true, "cmd": "KUBECONFIG=/home/bevel/build/config kubectl config use-context bevel\nKUBECONFIG=/home/bevel/build/config kubectl config set-context --current --namespace=default\n", "delta": "0:00:00.173769", "end": "2022-07-17 16:12:36.250734", "msg": "", "rc": 0, "start": "2022-07-17 16:12:36.076965", "stderr": "", "stderr_lines": [], "stdout": "Switched to context \"bevel\".\nContext \"bevel\" modified.", "stdout_lines": ["Switched to context \"bevel\".", "Context \"bevel\" modified."]}
META: role_complete for localhost

TASK [setup/kubectl : register temporary directory] ****************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:8
changed: [localhost] => {"changed": true, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/tmp/ansible.ov5t8_ma", "size": 4096, "state": "directory", "uid": 0}

TASK [setup/kubectl : check kubectl] *******************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:15
ok: [localhost] => {"changed": false, "stat": {"atime": 1658067664.3912246, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 83960, "charset": "unknown", "checksum": "371d59fce375bd7d74256c136280eeef732d7611", "ctime": 1658067663.979227, "dev": 2097204, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 13166487, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1613566452.0, "nlink": 1, "path": "/root/bin/kubectl", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 42987520, "uid": 0, "version": "4162813991", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [setup/kubectl : Download kubectl binary] *********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:22
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/kubectl : Unarchive kubernetes-client] *****************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:31
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/kubectl : create bin directory] ************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:39
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/kubectl : Copy kubectl binary to destination directory] ************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:47
skipping: [localhost] => (item=kubectl)  => {"ansible_loop_var": "bin_item", "bin_item": "kubectl", "changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/kubectl : Test kubectl installation] *******************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:61
ok: [localhost] => {"changed": false, "cmd": ["kubectl", "version", "--client", "--short"], "delta": "0:00:00.090986", "end": "2022-07-17 16:12:37.852525", "msg": "", "rc": 0, "start": "2022-07-17 16:12:37.761539", "stderr": "", "stderr_lines": [], "stdout": "Client Version: v1.19.8", "stdout_lines": ["Client Version: v1.19.8"]}

TASK [setup/kubectl : Changing the current context namespace to default] *******
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:67
changed: [localhost] => {"changed": true, "cmd": "KUBECONFIG=/home/bevel/build/config kubectl config use-context bevel\nKUBECONFIG=/home/bevel/build/config kubectl config set-context --current --namespace=default\n", "delta": "0:00:00.193983", "end": "2022-07-17 16:12:38.433229", "msg": "", "rc": 0, "start": "2022-07-17 16:12:38.239246", "stderr": "", "stderr_lines": [], "stdout": "Switched to context \"bevel\".\nContext \"bevel\" modified.", "stdout_lines": ["Switched to context \"bevel\".", "Context \"bevel\" modified."]}
META: role_complete for localhost

TASK [include_role : setup/helm] ***********************************************
task path: /home/bevel/platforms/shared/configuration/environment-setup.yaml:25

TASK [setup/helm : register temporary directory] *******************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:8
changed: [localhost] => {"changed": true, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/tmp/ansible.o1hnfwhv", "size": 4096, "state": "directory", "uid": 0}

TASK [setup/helm : check helm] *************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:15
ok: [localhost] => {"changed": false, "stat": {"atime": 1658067676.4471529, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 88104, "charset": "unknown", "checksum": "4ef98189af928450906546c6afd8719399a4c181", "ctime": 1658067676.1111548, "dev": 2097204, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 13166480, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658067675.6591575, "nlink": 1, "path": "/root/bin/helm", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 45109248, "uid": 0, "version": "2805724032", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [setup/helm : Install helm] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:22
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:33
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create bin directory] ****************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:43
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:53
skipping: [localhost] => (item=helm)  => {"ansible_loop_var": "bin_item", "bin_item": "helm", "changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/helm : Test helm installation] *************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:64
ok: [localhost] => {"changed": false, "cmd": ["helm", "version", "--client", "--short"], "delta": "0:00:00.057239", "end": "2022-07-17 16:12:40.183694", "msg": "", "rc": 0, "start": "2022-07-17 16:12:40.126455", "stderr": "", "stderr_lines": [], "stdout": "v3.6.2+gee407bd", "stdout_lines": ["v3.6.2+gee407bd"]}
META: role_complete for localhost

TASK [setup/helm : register temporary directory] *******************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:8
changed: [localhost] => {"changed": true, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/tmp/ansible.3pwg89zp", "size": 4096, "state": "directory", "uid": 0}

TASK [setup/helm : check helm] *************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:15
ok: [localhost] => {"changed": false, "stat": {"atime": 1658067676.4471529, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 88104, "charset": "unknown", "checksum": "4ef98189af928450906546c6afd8719399a4c181", "ctime": 1658067676.1111548, "dev": 2097204, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 13166480, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658067675.6591575, "nlink": 1, "path": "/root/bin/helm", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 45109248, "uid": 0, "version": "2805724032", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [setup/helm : Install helm] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:22
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:33
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create bin directory] ****************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:43
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:53
skipping: [localhost] => (item=helm)  => {"ansible_loop_var": "bin_item", "bin_item": "helm", "changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/helm : Test helm installation] *************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:64
ok: [localhost] => {"changed": false, "cmd": ["helm", "version", "--client", "--short"], "delta": "0:00:00.073647", "end": "2022-07-17 16:12:41.974720", "msg": "", "rc": 0, "start": "2022-07-17 16:12:41.901073", "stderr": "", "stderr_lines": [], "stdout": "v3.6.2+gee407bd", "stdout_lines": ["v3.6.2+gee407bd"]}
META: role_complete for localhost

TASK [setup/helm : register temporary directory] *******************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:8
changed: [localhost] => {"changed": true, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/tmp/ansible.xt_82nsi", "size": 4096, "state": "directory", "uid": 0}

TASK [setup/helm : check helm] *************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:15
ok: [localhost] => {"changed": false, "stat": {"atime": 1658067676.4471529, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 88104, "charset": "unknown", "checksum": "4ef98189af928450906546c6afd8719399a4c181", "ctime": 1658067676.1111548, "dev": 2097204, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 13166480, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658067675.6591575, "nlink": 1, "path": "/root/bin/helm", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 45109248, "uid": 0, "version": "2805724032", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [setup/helm : Install helm] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:22
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:33
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create bin directory] ****************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:43
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:53
skipping: [localhost] => (item=helm)  => {"ansible_loop_var": "bin_item", "bin_item": "helm", "changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/helm : Test helm installation] *************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:64
ok: [localhost] => {"changed": false, "cmd": ["helm", "version", "--client", "--short"], "delta": "0:00:00.074150", "end": "2022-07-17 16:12:43.677089", "msg": "", "rc": 0, "start": "2022-07-17 16:12:43.602939", "stderr": "", "stderr_lines": [], "stdout": "v3.6.2+gee407bd", "stdout_lines": ["v3.6.2+gee407bd"]}
META: role_complete for localhost

TASK [include_role : setup/vault] **********************************************
task path: /home/bevel/platforms/shared/configuration/environment-setup.yaml:33

TASK [setup/vault : register temporary directory] ******************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:8
changed: [localhost] => {"changed": true, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/tmp/ansible.5r098f3m", "size": 4096, "state": "directory", "uid": 0}

TASK [setup/vault : check vault] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:15
ok: [localhost] => {"changed": false, "stat": {"atime": 1658067685.3151007, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 384416, "charset": "unknown", "checksum": "1a97c27b87ff109441f4631eaec50751e2864802", "ctime": 1658067684.9511027, "dev": 2097204, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 13166506, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1618938805.0, "nlink": 1, "path": "/root/bin/vault", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 196820366, "uid": 0, "version": "2709503024", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [setup/vault : Install vault client] **************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:22
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/vault : create bin directory] **************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:32
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/vault : Unzip vault archive] ***************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:40
skipping: [localhost] => (item=vault)  => {"ansible_loop_var": "bin_item", "bin_item": "vault", "changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/vault : Test vault installation] ***********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:52
ok: [localhost] => {"changed": false, "cmd": ["vault", "version"], "delta": "0:00:00.117601", "end": "2022-07-17 16:12:45.912337", "msg": "", "rc": 0, "start": "2022-07-17 16:12:45.794736", "stderr": "", "stderr_lines": [], "stdout": "Vault v1.7.1 (917142287996a005cb1ed9d96d00d06a0590e44e)", "stdout_lines": ["Vault v1.7.1 (917142287996a005cb1ed9d96d00d06a0590e44e)"]}
META: role_complete for localhost

TASK [include_role : setup/aws-cli] ********************************************
task path: /home/bevel/platforms/shared/configuration/environment-setup.yaml:41
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.supplychain-net:7054', 'certificate': '/home/bevel/build/supplychain/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft'}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/supplychain/server.crt", "url": "ca.supplychain-net:7054"}, "cloud_provider": "azure", "country": "UK", "external_url_suffix": "develop.local.com", "fabric_console": "enabled", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "supplychain", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net", "type": "ca"}, "consensus": {"name": "raft"}, "orderers": [{"consensus": "raft", "grpc": {"port": 7050}, "name": "orderer1", "orderer": null, "type": "orderer"}]}, "state": "London", "subject": "O=Orderer,L=51.50/-0.13/London,C=GB", "type": "orderer", "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.manufacturer-net:7054', 'certificate': '/home/bevel/build/manufacturer/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net:7051', 'certificate': '/home/bevel/build/manufacturer/peer0.crt', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain1', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/manufacturer/server.crt", "url": "ca.manufacturer-net:7054"}, "cloud_provider": "azure", "country": "CH", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "Zurich", "name": "manufacturer", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/manufacturer/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain1", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "enabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.manufacturer-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.manufacturer-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "Zurich", "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': '/home/bevel/build/carrier/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net:7051', 'certificate': '/home/bevel/build/carrier/peer0.crt', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/carrier/server.crt", "url": "ca.carrier-net:7054"}, "cloud_provider": "azure", "country": "GB", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "carrier", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/carrier/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "disabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.carrier-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.carrier-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "London", "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}

TASK [include_role : setup/aws-auth] *******************************************
task path: /home/bevel/platforms/shared/configuration/environment-setup.yaml:48
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.supplychain-net:7054', 'certificate': '/home/bevel/build/supplychain/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft'}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/supplychain/server.crt", "url": "ca.supplychain-net:7054"}, "cloud_provider": "azure", "country": "UK", "external_url_suffix": "develop.local.com", "fabric_console": "enabled", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "supplychain", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net", "type": "ca"}, "consensus": {"name": "raft"}, "orderers": [{"consensus": "raft", "grpc": {"port": 7050}, "name": "orderer1", "orderer": null, "type": "orderer"}]}, "state": "London", "subject": "O=Orderer,L=51.50/-0.13/London,C=GB", "type": "orderer", "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.manufacturer-net:7054', 'certificate': '/home/bevel/build/manufacturer/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net:7051', 'certificate': '/home/bevel/build/manufacturer/peer0.crt', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain1', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/manufacturer/server.crt", "url": "ca.manufacturer-net:7054"}, "cloud_provider": "azure", "country": "CH", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "Zurich", "name": "manufacturer", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/manufacturer/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain1", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "enabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.manufacturer-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.manufacturer-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "Zurich", "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': '/home/bevel/build/carrier/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net:7051', 'certificate': '/home/bevel/build/carrier/peer0.crt', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/carrier/server.crt", "url": "ca.carrier-net:7054"}, "cloud_provider": "azure", "country": "GB", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "carrier", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/carrier/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "disabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.carrier-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.carrier-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "London", "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************
META: ran handlers

TASK [include_role : setup/flux] ***********************************************
task path: /home/bevel/platforms/shared/configuration/kubernetes-env-setup.yaml:18
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [aws-cli : register temporary directory] **********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:8
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-cli : check aws cli] *************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:15
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-cli : download aws cli] **********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:22
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:31
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create bin directory] ****************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:40
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-cli : install aws cli] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:50
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-cli : configuring aws] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: 

TASK [aws-auth : register temporary directory] *********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:8
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-auth : check aws-authenticator] **************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:15
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-auth : create bin directory] *****************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:22
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-auth : Install aws-authenticator] ************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:30
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-auth : Test Kubernetes connection] ***********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: 

TASK [helm : register temporary directory] *************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:8
changed: [localhost] => {"changed": true, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/tmp/ansible.bsand5dt", "size": 4096, "state": "directory", "uid": 0}

TASK [helm : check helm] *******************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:15
ok: [localhost] => {"changed": false, "stat": {"atime": 1658067676.4471529, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 88104, "charset": "unknown", "checksum": "4ef98189af928450906546c6afd8719399a4c181", "ctime": 1658067676.1111548, "dev": 2097204, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 13166480, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658067675.6591575, "nlink": 1, "path": "/root/bin/helm", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 45109248, "uid": 0, "version": "2805724032", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [helm : Install helm] *****************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:22
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [helm : Unzip helm archive] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:33
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create bin directory] ****************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:43
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [helm : Move helm binaries] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:53
skipping: [localhost] => (item=helm)  => {"ansible_loop_var": "bin_item", "bin_item": "helm", "changed": false, "skip_reason": "Conditional result was False"}

TASK [helm : Test helm installation] *******************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:64
ok: [localhost] => {"changed": false, "cmd": ["helm", "version", "--client", "--short"], "delta": "0:00:00.080147", "end": "2022-07-17 16:12:49.224251", "msg": "", "rc": 0, "start": "2022-07-17 16:12:49.144104", "stderr": "", "stderr_lines": [], "stdout": "v3.6.2+gee407bd", "stdout_lines": ["v3.6.2+gee407bd"]}
META: role_complete for localhost

TASK [kubectl : register temporary directory] **********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:8
changed: [localhost] => {"changed": true, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/tmp/ansible.2vmtrpge", "size": 4096, "state": "directory", "uid": 0}

TASK [kubectl : check kubectl] *************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:15
ok: [localhost] => {"changed": false, "stat": {"atime": 1658067664.3912246, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 83960, "charset": "unknown", "checksum": "371d59fce375bd7d74256c136280eeef732d7611", "ctime": 1658067663.979227, "dev": 2097204, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 13166487, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1613566452.0, "nlink": 1, "path": "/root/bin/kubectl", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 42987520, "uid": 0, "version": "4162813991", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [kubectl : Download kubectl binary] ***************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:22
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [kubectl : Unarchive kubernetes-client] ***********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:31
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [kubectl : create bin directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:39
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [kubectl : Copy kubectl binary to destination directory] ******************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:47
skipping: [localhost] => (item=kubectl)  => {"ansible_loop_var": "bin_item", "bin_item": "kubectl", "changed": false, "skip_reason": "Conditional result was False"}

TASK [kubectl : Test kubectl installation] *************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:61
ok: [localhost] => {"changed": false, "cmd": ["kubectl", "version", "--client", "--short"], "delta": "0:00:00.083225", "end": "2022-07-17 16:12:50.796031", "msg": "", "rc": 0, "start": "2022-07-17 16:12:50.712806", "stderr": "", "stderr_lines": [], "stdout": "Client Version: v1.19.8", "stdout_lines": ["Client Version: v1.19.8"]}

TASK [kubectl : Changing the current context namespace to default] *************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:67
changed: [localhost] => {"changed": true, "cmd": "KUBECONFIG=/home/bevel/build/config kubectl config use-context bevel\nKUBECONFIG=/home/bevel/build/config kubectl config set-context --current --namespace=default\n", "delta": "0:00:00.205151", "end": "2022-07-17 16:12:51.369140", "msg": "", "rc": 0, "start": "2022-07-17 16:12:51.163989", "stderr": "", "stderr_lines": [], "stdout": "Switched to context \"bevel\".\nContext \"bevel\" modified.", "stdout_lines": ["Switched to context \"bevel\".", "Context \"bevel\" modified."]}
META: role_complete for localhost

TASK [setup/flux : Checking if the namespace flux-dev already exists] **********
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:8
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"creationTimestamp": "2022-07-17T14:50:54Z", "labels": {"kubernetes.io/metadata.name": "flux-dev"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:labels": {".": {}, "f:kubernetes.io/metadata.name": {}}}}, "manager": "kubectl-create", "operation": "Update", "time": "2022-07-17T14:50:54Z"}], "name": "flux-dev", "resourceVersion": "67194", "uid": "5725059c-89f5-4260-a7ab-a9f6cfcc204f"}, "spec": {"finalizers": ["kubernetes"]}, "status": {"phase": "Active"}}]}

TASK [setup/flux : Create namespaces  flux-dev] ********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/flux : Check if Flux is running] ***********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:22
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"annotations": {"checksum/ssh": "923f37a7070e98516fe4033a387c27a3e1ac2b5ca08ca4b1275fcb72afce3b63"}, "creationTimestamp": "2022-07-17T14:51:02Z", "generateName": "flux-dev-759b8574cb-", "labels": {"app": "flux", "pod-template-hash": "759b8574cb", "release": "flux-dev"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:checksum/ssh": {}}, "f:generateName": {}, "f:labels": {".": {}, "f:app": {}, "f:pod-template-hash": {}, "f:release": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"d22956c0-08b2-4b3b-bfe8-f23e7e7ac182\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {"f:containers": {"k:{\"name\":\"flux\"}": {".": {}, "f:args": {}, "f:env": {".": {}, "k:{\"name\":\"KUBECONFIG\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:livenessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":3030,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}}, "f:readinessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:resources": {".": {}, "f:requests": {".": {}, "f:cpu": {}, "f:memory": {}}}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/etc/fluxd/ssh\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/root/.kubectl\"}": {".": {}, "f:mountPath": {}, "f:name": {}}, "k:{\"mountPath\":\"/root/.ssh\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/var/fluxd/keygen\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:nodeSelector": {".": {}, "f:beta.kubernetes.io/os": {}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"git-key\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}, "k:{\"name\":\"git-keygen\"}": {".": {}, "f:emptyDir": {".": {}, "f:medium": {}}, "f:name": {}}, "k:{\"name\":\"kubedir\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:name": {}}, "f:name": {}}, "k:{\"name\":\"sshdir\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:name": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T14:51:02Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.22\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "time": "2022-07-17T14:51:42Z"}], "name": "flux-dev-759b8574cb-ltrjq", "namespace": "flux-dev", "ownerReferences": [{"apiVersion": "apps/v1", "blockOwnerDeletion": true, "controller": true, "kind": "ReplicaSet", "name": "flux-dev-759b8574cb", "uid": "d22956c0-08b2-4b3b-bfe8-f23e7e7ac182"}], "resourceVersion": "67452", "uid": "dfd6d796-f17f-4ce5-9642-36c7e92e61d2"}, "spec": {"containers": [{"args": ["--log-format=fmt", "--ssh-keygen-dir=/var/fluxd/keygen", "--ssh-keygen-format=RFC4716", "--k8s-secret-name=git-auth-dev", "--memcached-hostname=flux-dev-memcached", "--sync-state=git", "--memcached-service=", "--git-url=ssh://git@github.com/adityajoshi12/bevel.git", "--git-branch=test", "--git-path=platforms/hyperledger-fabric/releases/dev", "--git-readonly=false", "--git-user=Weave Flux", "--git-email=support@weave.works", "--git-verify-signatures=false", "--git-set-author=false", "--git-poll-interval=2m", "--git-timeout=200s", "--sync-interval=2m", "--git-ci-skip=false", "--git-label=sync-dev", "--automation-interval=5m", "--registry-rps=200", "--registry-burst=125", "--registry-trace=false", "--registry-insecure-host=index.docker.io/hyperledgerlabs"], "env": [{"name": "KUBECONFIG", "value": "/root/.kubectl/config"}], "image": "docker.io/fluxcd/flux:1.23.0", "imagePullPolicy": "IfNotPresent", "livenessProbe": {"failureThreshold": 3, "httpGet": {"path": "/api/flux/v6/identity.pub", "port": 3030, "scheme": "HTTP"}, "initialDelaySeconds": 30, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 120}, "name": "flux", "ports": [{"containerPort": 3030, "name": "http", "protocol": "TCP"}], "readinessProbe": {"failureThreshold": 3, "httpGet": {"path": "/api/flux/v6/identity.pub", "port": 3030, "scheme": "HTTP"}, "initialDelaySeconds": 30, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 120}, "resources": {"requests": {"cpu": "50m", "memory": "64Mi"}}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/root/.kubectl", "name": "kubedir"}, {"mountPath": "/root/.ssh", "name": "sshdir", "readOnly": true}, {"mountPath": "/etc/fluxd/ssh", "name": "git-key", "readOnly": true}, {"mountPath": "/var/fluxd/keygen", "name": "git-keygen"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-b2jhz", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "nodeName": "aks-agentpool-84293659-vmss000001", "nodeSelector": {"beta.kubernetes.io/os": "linux"}, "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "flux-dev", "serviceAccountName": "flux-dev", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoSchedule", "key": "node.kubernetes.io/memory-pressure", "operator": "Exists"}], "volumes": [{"configMap": {"defaultMode": 420, "name": "flux-dev-kube-config"}, "name": "kubedir"}, {"configMap": {"defaultMode": 384, "name": "flux-dev-ssh-config"}, "name": "sshdir"}, {"name": "git-key", "secret": {"defaultMode": 256, "secretName": "git-auth-dev"}}, {"emptyDir": {"medium": "Memory"}, "name": "git-keygen"}, {"name": "kube-api-access-b2jhz", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2022-07-17T14:51:02Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T14:51:42Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T14:51:42Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T14:51:02Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://222f98676bbcc7e1675282ad0c5a0b0a36a9443f4b7462c675d96ff50243000a", "image": "docker.io/fluxcd/flux:1.23.0", "imageID": "docker.io/fluxcd/flux@sha256:8e52359b851b15bfc78f6020b61af7d2314b069822181348cb3410cd24f0a4ee", "lastState": {}, "name": "flux", "ready": true, "restartCount": 0, "started": true, "state": {"running": {"startedAt": "2022-07-17T14:51:03Z"}}}], "hostIP": "10.224.0.5", "phase": "Running", "podIP": "10.244.0.22", "podIPs": [{"ip": "10.244.0.22"}], "qosClass": "Burstable", "startTime": "2022-07-17T14:51:02Z"}}]}

TASK [setup/flux : Get ssh known hosts] ****************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/flux : Helm repo add] **********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:44
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/flux : Install flux for over https connection] *********************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:52
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/flux : Install flux for over ssh connection] ***********************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:63
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [wait for pods to come up] ************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:75
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [aws-cli : register temporary directory] **********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:8
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-cli : check aws cli] *************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:15
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-cli : download aws cli] **********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:22
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:31
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create bin directory] ****************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:40
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-cli : install aws cli] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:50
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-cli : configuring aws] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: 

TASK [aws-auth : register temporary directory] *********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:8
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-auth : check aws-authenticator] **************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:15
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-auth : create bin directory] *****************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:22
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-auth : Install aws-authenticator] ************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:30
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-auth : Test Kubernetes connection] ***********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: 

TASK [setup/flux : Checking if the namespace flux-dev already exists] **********
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:8
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"creationTimestamp": "2022-07-17T14:50:54Z", "labels": {"kubernetes.io/metadata.name": "flux-dev"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:labels": {".": {}, "f:kubernetes.io/metadata.name": {}}}}, "manager": "kubectl-create", "operation": "Update", "time": "2022-07-17T14:50:54Z"}], "name": "flux-dev", "resourceVersion": "67194", "uid": "5725059c-89f5-4260-a7ab-a9f6cfcc204f"}, "spec": {"finalizers": ["kubernetes"]}, "status": {"phase": "Active"}}]}

TASK [setup/flux : Create namespaces  flux-dev] ********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/flux : Check if Flux is running] ***********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:22
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"annotations": {"checksum/ssh": "923f37a7070e98516fe4033a387c27a3e1ac2b5ca08ca4b1275fcb72afce3b63"}, "creationTimestamp": "2022-07-17T14:51:02Z", "generateName": "flux-dev-759b8574cb-", "labels": {"app": "flux", "pod-template-hash": "759b8574cb", "release": "flux-dev"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:checksum/ssh": {}}, "f:generateName": {}, "f:labels": {".": {}, "f:app": {}, "f:pod-template-hash": {}, "f:release": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"d22956c0-08b2-4b3b-bfe8-f23e7e7ac182\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {"f:containers": {"k:{\"name\":\"flux\"}": {".": {}, "f:args": {}, "f:env": {".": {}, "k:{\"name\":\"KUBECONFIG\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:livenessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":3030,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}}, "f:readinessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:resources": {".": {}, "f:requests": {".": {}, "f:cpu": {}, "f:memory": {}}}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/etc/fluxd/ssh\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/root/.kubectl\"}": {".": {}, "f:mountPath": {}, "f:name": {}}, "k:{\"mountPath\":\"/root/.ssh\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/var/fluxd/keygen\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:nodeSelector": {".": {}, "f:beta.kubernetes.io/os": {}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"git-key\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}, "k:{\"name\":\"git-keygen\"}": {".": {}, "f:emptyDir": {".": {}, "f:medium": {}}, "f:name": {}}, "k:{\"name\":\"kubedir\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:name": {}}, "f:name": {}}, "k:{\"name\":\"sshdir\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:name": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T14:51:02Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.22\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "time": "2022-07-17T14:51:42Z"}], "name": "flux-dev-759b8574cb-ltrjq", "namespace": "flux-dev", "ownerReferences": [{"apiVersion": "apps/v1", "blockOwnerDeletion": true, "controller": true, "kind": "ReplicaSet", "name": "flux-dev-759b8574cb", "uid": "d22956c0-08b2-4b3b-bfe8-f23e7e7ac182"}], "resourceVersion": "67452", "uid": "dfd6d796-f17f-4ce5-9642-36c7e92e61d2"}, "spec": {"containers": [{"args": ["--log-format=fmt", "--ssh-keygen-dir=/var/fluxd/keygen", "--ssh-keygen-format=RFC4716", "--k8s-secret-name=git-auth-dev", "--memcached-hostname=flux-dev-memcached", "--sync-state=git", "--memcached-service=", "--git-url=ssh://git@github.com/adityajoshi12/bevel.git", "--git-branch=test", "--git-path=platforms/hyperledger-fabric/releases/dev", "--git-readonly=false", "--git-user=Weave Flux", "--git-email=support@weave.works", "--git-verify-signatures=false", "--git-set-author=false", "--git-poll-interval=2m", "--git-timeout=200s", "--sync-interval=2m", "--git-ci-skip=false", "--git-label=sync-dev", "--automation-interval=5m", "--registry-rps=200", "--registry-burst=125", "--registry-trace=false", "--registry-insecure-host=index.docker.io/hyperledgerlabs"], "env": [{"name": "KUBECONFIG", "value": "/root/.kubectl/config"}], "image": "docker.io/fluxcd/flux:1.23.0", "imagePullPolicy": "IfNotPresent", "livenessProbe": {"failureThreshold": 3, "httpGet": {"path": "/api/flux/v6/identity.pub", "port": 3030, "scheme": "HTTP"}, "initialDelaySeconds": 30, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 120}, "name": "flux", "ports": [{"containerPort": 3030, "name": "http", "protocol": "TCP"}], "readinessProbe": {"failureThreshold": 3, "httpGet": {"path": "/api/flux/v6/identity.pub", "port": 3030, "scheme": "HTTP"}, "initialDelaySeconds": 30, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 120}, "resources": {"requests": {"cpu": "50m", "memory": "64Mi"}}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/root/.kubectl", "name": "kubedir"}, {"mountPath": "/root/.ssh", "name": "sshdir", "readOnly": true}, {"mountPath": "/etc/fluxd/ssh", "name": "git-key", "readOnly": true}, {"mountPath": "/var/fluxd/keygen", "name": "git-keygen"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-b2jhz", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "nodeName": "aks-agentpool-84293659-vmss000001", "nodeSelector": {"beta.kubernetes.io/os": "linux"}, "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "flux-dev", "serviceAccountName": "flux-dev", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoSchedule", "key": "node.kubernetes.io/memory-pressure", "operator": "Exists"}], "volumes": [{"configMap": {"defaultMode": 420, "name": "flux-dev-kube-config"}, "name": "kubedir"}, {"configMap": {"defaultMode": 384, "name": "flux-dev-ssh-config"}, "name": "sshdir"}, {"name": "git-key", "secret": {"defaultMode": 256, "secretName": "git-auth-dev"}}, {"emptyDir": {"medium": "Memory"}, "name": "git-keygen"}, {"name": "kube-api-access-b2jhz", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2022-07-17T14:51:02Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T14:51:42Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T14:51:42Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T14:51:02Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://222f98676bbcc7e1675282ad0c5a0b0a36a9443f4b7462c675d96ff50243000a", "image": "docker.io/fluxcd/flux:1.23.0", "imageID": "docker.io/fluxcd/flux@sha256:8e52359b851b15bfc78f6020b61af7d2314b069822181348cb3410cd24f0a4ee", "lastState": {}, "name": "flux", "ready": true, "restartCount": 0, "started": true, "state": {"running": {"startedAt": "2022-07-17T14:51:03Z"}}}], "hostIP": "10.224.0.5", "phase": "Running", "podIP": "10.244.0.22", "podIPs": [{"ip": "10.244.0.22"}], "qosClass": "Burstable", "startTime": "2022-07-17T14:51:02Z"}}]}

TASK [setup/flux : Get ssh known hosts] ****************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/flux : Helm repo add] **********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:44
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/flux : Install flux for over https connection] *********************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:52
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/flux : Install flux for over ssh connection] ***********************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:63
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [wait for pods to come up] ************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:75
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [aws-cli : register temporary directory] **********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:8
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-cli : check aws cli] *************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:15
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-cli : download aws cli] **********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:22
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:31
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create bin directory] ****************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:40
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-cli : install aws cli] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:50
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-cli : configuring aws] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: 

TASK [aws-auth : register temporary directory] *********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:8
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-auth : check aws-authenticator] **************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:15
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-auth : create bin directory] *****************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:22
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-auth : Install aws-authenticator] ************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:30
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [aws-auth : Test Kubernetes connection] ***********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: 

TASK [setup/flux : Checking if the namespace flux-dev already exists] **********
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:8
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"creationTimestamp": "2022-07-17T14:50:54Z", "labels": {"kubernetes.io/metadata.name": "flux-dev"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:labels": {".": {}, "f:kubernetes.io/metadata.name": {}}}}, "manager": "kubectl-create", "operation": "Update", "time": "2022-07-17T14:50:54Z"}], "name": "flux-dev", "resourceVersion": "67194", "uid": "5725059c-89f5-4260-a7ab-a9f6cfcc204f"}, "spec": {"finalizers": ["kubernetes"]}, "status": {"phase": "Active"}}]}

TASK [setup/flux : Create namespaces  flux-dev] ********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/flux : Check if Flux is running] ***********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:22
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"annotations": {"checksum/ssh": "923f37a7070e98516fe4033a387c27a3e1ac2b5ca08ca4b1275fcb72afce3b63"}, "creationTimestamp": "2022-07-17T14:51:02Z", "generateName": "flux-dev-759b8574cb-", "labels": {"app": "flux", "pod-template-hash": "759b8574cb", "release": "flux-dev"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:checksum/ssh": {}}, "f:generateName": {}, "f:labels": {".": {}, "f:app": {}, "f:pod-template-hash": {}, "f:release": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"d22956c0-08b2-4b3b-bfe8-f23e7e7ac182\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {"f:containers": {"k:{\"name\":\"flux\"}": {".": {}, "f:args": {}, "f:env": {".": {}, "k:{\"name\":\"KUBECONFIG\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:livenessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":3030,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}}, "f:readinessProbe": {".": {}, "f:failureThreshold": {}, "f:httpGet": {".": {}, "f:path": {}, "f:port": {}, "f:scheme": {}}, "f:initialDelaySeconds": {}, "f:periodSeconds": {}, "f:successThreshold": {}, "f:timeoutSeconds": {}}, "f:resources": {".": {}, "f:requests": {".": {}, "f:cpu": {}, "f:memory": {}}}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/etc/fluxd/ssh\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/root/.kubectl\"}": {".": {}, "f:mountPath": {}, "f:name": {}}, "k:{\"mountPath\":\"/root/.ssh\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/var/fluxd/keygen\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:nodeSelector": {".": {}, "f:beta.kubernetes.io/os": {}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"git-key\"}": {".": {}, "f:name": {}, "f:secret": {".": {}, "f:defaultMode": {}, "f:secretName": {}}}, "k:{\"name\":\"git-keygen\"}": {".": {}, "f:emptyDir": {".": {}, "f:medium": {}}, "f:name": {}}, "k:{\"name\":\"kubedir\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:name": {}}, "f:name": {}}, "k:{\"name\":\"sshdir\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:name": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T14:51:02Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.22\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "time": "2022-07-17T14:51:42Z"}], "name": "flux-dev-759b8574cb-ltrjq", "namespace": "flux-dev", "ownerReferences": [{"apiVersion": "apps/v1", "blockOwnerDeletion": true, "controller": true, "kind": "ReplicaSet", "name": "flux-dev-759b8574cb", "uid": "d22956c0-08b2-4b3b-bfe8-f23e7e7ac182"}], "resourceVersion": "67452", "uid": "dfd6d796-f17f-4ce5-9642-36c7e92e61d2"}, "spec": {"containers": [{"args": ["--log-format=fmt", "--ssh-keygen-dir=/var/fluxd/keygen", "--ssh-keygen-format=RFC4716", "--k8s-secret-name=git-auth-dev", "--memcached-hostname=flux-dev-memcached", "--sync-state=git", "--memcached-service=", "--git-url=ssh://git@github.com/adityajoshi12/bevel.git", "--git-branch=test", "--git-path=platforms/hyperledger-fabric/releases/dev", "--git-readonly=false", "--git-user=Weave Flux", "--git-email=support@weave.works", "--git-verify-signatures=false", "--git-set-author=false", "--git-poll-interval=2m", "--git-timeout=200s", "--sync-interval=2m", "--git-ci-skip=false", "--git-label=sync-dev", "--automation-interval=5m", "--registry-rps=200", "--registry-burst=125", "--registry-trace=false", "--registry-insecure-host=index.docker.io/hyperledgerlabs"], "env": [{"name": "KUBECONFIG", "value": "/root/.kubectl/config"}], "image": "docker.io/fluxcd/flux:1.23.0", "imagePullPolicy": "IfNotPresent", "livenessProbe": {"failureThreshold": 3, "httpGet": {"path": "/api/flux/v6/identity.pub", "port": 3030, "scheme": "HTTP"}, "initialDelaySeconds": 30, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 120}, "name": "flux", "ports": [{"containerPort": 3030, "name": "http", "protocol": "TCP"}], "readinessProbe": {"failureThreshold": 3, "httpGet": {"path": "/api/flux/v6/identity.pub", "port": 3030, "scheme": "HTTP"}, "initialDelaySeconds": 30, "periodSeconds": 10, "successThreshold": 1, "timeoutSeconds": 120}, "resources": {"requests": {"cpu": "50m", "memory": "64Mi"}}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/root/.kubectl", "name": "kubedir"}, {"mountPath": "/root/.ssh", "name": "sshdir", "readOnly": true}, {"mountPath": "/etc/fluxd/ssh", "name": "git-key", "readOnly": true}, {"mountPath": "/var/fluxd/keygen", "name": "git-keygen"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-b2jhz", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "nodeName": "aks-agentpool-84293659-vmss000001", "nodeSelector": {"beta.kubernetes.io/os": "linux"}, "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "flux-dev", "serviceAccountName": "flux-dev", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoSchedule", "key": "node.kubernetes.io/memory-pressure", "operator": "Exists"}], "volumes": [{"configMap": {"defaultMode": 420, "name": "flux-dev-kube-config"}, "name": "kubedir"}, {"configMap": {"defaultMode": 384, "name": "flux-dev-ssh-config"}, "name": "sshdir"}, {"name": "git-key", "secret": {"defaultMode": 256, "secretName": "git-auth-dev"}}, {"emptyDir": {"medium": "Memory"}, "name": "git-keygen"}, {"name": "kube-api-access-b2jhz", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2022-07-17T14:51:02Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T14:51:42Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T14:51:42Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T14:51:02Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://222f98676bbcc7e1675282ad0c5a0b0a36a9443f4b7462c675d96ff50243000a", "image": "docker.io/fluxcd/flux:1.23.0", "imageID": "docker.io/fluxcd/flux@sha256:8e52359b851b15bfc78f6020b61af7d2314b069822181348cb3410cd24f0a4ee", "lastState": {}, "name": "flux", "ready": true, "restartCount": 0, "started": true, "state": {"running": {"startedAt": "2022-07-17T14:51:03Z"}}}], "hostIP": "10.224.0.5", "phase": "Running", "podIP": "10.244.0.22", "podIPs": [{"ip": "10.244.0.22"}], "qosClass": "Burstable", "startTime": "2022-07-17T14:51:02Z"}}]}

TASK [setup/flux : Get ssh known hosts] ****************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/flux : Helm repo add] **********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:44
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/flux : Install flux for over https connection] *********************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:52
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [setup/flux : Install flux for over ssh connection] ***********************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:63
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [wait for pods to come up] ************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:75
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Prepare nodes and clients ports for ambassador] **************************
task path: /home/bevel/platforms/shared/configuration/kubernetes-env-setup.yaml:34
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.supplychain-net:7054', 'certificate': '/home/bevel/build/supplychain/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft'}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {"ansible_loop_var": "organizationItem", "changed": false, "organizationItem": {"ca_data": {"certificate": "/home/bevel/build/supplychain/server.crt", "url": "ca.supplychain-net:7054"}, "cloud_provider": "azure", "country": "UK", "external_url_suffix": "develop.local.com", "fabric_console": "enabled", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "supplychain", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net", "type": "ca"}, "consensus": {"name": "raft"}, "orderers": [{"consensus": "raft", "grpc": {"port": 7050}, "name": "orderer1", "orderer": null, "type": "orderer"}]}, "state": "London", "subject": "O=Orderer,L=51.50/-0.13/London,C=GB", "type": "orderer", "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.manufacturer-net:7054', 'certificate': '/home/bevel/build/manufacturer/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net:7051', 'certificate': '/home/bevel/build/manufacturer/peer0.crt', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain1', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "organizationItem", "changed": false, "organizationItem": {"ca_data": {"certificate": "/home/bevel/build/manufacturer/server.crt", "url": "ca.manufacturer-net:7054"}, "cloud_provider": "azure", "country": "CH", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "Zurich", "name": "manufacturer", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/manufacturer/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain1", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "enabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.manufacturer-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.manufacturer-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "Zurich", "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': '/home/bevel/build/carrier/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net:7051', 'certificate': '/home/bevel/build/carrier/peer0.crt', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "organizationItem", "changed": false, "organizationItem": {"ca_data": {"certificate": "/home/bevel/build/carrier/server.crt", "url": "ca.carrier-net:7054"}, "cloud_provider": "azure", "country": "GB", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "carrier", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/carrier/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "disabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.carrier-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.carrier-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "London", "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}

TASK [include_role : setup/ambassador] *****************************************
task path: /home/bevel/platforms/shared/configuration/kubernetes-env-setup.yaml:43
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.supplychain-net:7054', 'certificate': '/home/bevel/build/supplychain/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft'}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/supplychain/server.crt", "url": "ca.supplychain-net:7054"}, "cloud_provider": "azure", "country": "UK", "external_url_suffix": "develop.local.com", "fabric_console": "enabled", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "supplychain", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net", "type": "ca"}, "consensus": {"name": "raft"}, "orderers": [{"consensus": "raft", "grpc": {"port": 7050}, "name": "orderer1", "orderer": null, "type": "orderer"}]}, "state": "London", "subject": "O=Orderer,L=51.50/-0.13/London,C=GB", "type": "orderer", "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.manufacturer-net:7054', 'certificate': '/home/bevel/build/manufacturer/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net:7051', 'certificate': '/home/bevel/build/manufacturer/peer0.crt', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain1', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/manufacturer/server.crt", "url": "ca.manufacturer-net:7054"}, "cloud_provider": "azure", "country": "CH", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "Zurich", "name": "manufacturer", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/manufacturer/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain1", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "enabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.manufacturer-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.manufacturer-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "Zurich", "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': '/home/bevel/build/carrier/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net:7051', 'certificate': '/home/bevel/build/carrier/peer0.crt', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/carrier/server.crt", "url": "ca.carrier-net:7054"}, "cloud_provider": "azure", "country": "GB", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "carrier", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/carrier/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "disabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.carrier-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.carrier-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "London", "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}

TASK [include_role : setup/haproxy-ingress] ************************************
task path: /home/bevel/platforms/shared/configuration/kubernetes-env-setup.yaml:51
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.supplychain-net:7054', 'certificate': '/home/bevel/build/supplychain/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft'}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/supplychain/server.crt", "url": "ca.supplychain-net:7054"}, "cloud_provider": "azure", "country": "UK", "external_url_suffix": "develop.local.com", "fabric_console": "enabled", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "supplychain", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net", "type": "ca"}, "consensus": {"name": "raft"}, "orderers": [{"consensus": "raft", "grpc": {"port": 7050}, "name": "orderer1", "orderer": null, "type": "orderer"}]}, "state": "London", "subject": "O=Orderer,L=51.50/-0.13/London,C=GB", "type": "orderer", "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.manufacturer-net:7054', 'certificate': '/home/bevel/build/manufacturer/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net:7051', 'certificate': '/home/bevel/build/manufacturer/peer0.crt', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain1', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/manufacturer/server.crt", "url": "ca.manufacturer-net:7054"}, "cloud_provider": "azure", "country": "CH", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "Zurich", "name": "manufacturer", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/manufacturer/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain1", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "enabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.manufacturer-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.manufacturer-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "Zurich", "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': '/home/bevel/build/carrier/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net:7051', 'certificate': '/home/bevel/build/carrier/peer0.crt', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/carrier/server.crt", "url": "ca.carrier-net:7054"}, "cloud_provider": "azure", "country": "GB", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "carrier", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/carrier/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "disabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.carrier-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.carrier-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "London", "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************
META: ran handlers

TASK [Remove build directory] **************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:23
changed: [localhost] => {"changed": true, "path": "./build", "state": "absent"}

TASK [Create namespace and Vault auth for each organization] *******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:29

TASK [Checking if the namespace supplychain-net already exists] ****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:12
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace supplychain-net is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:13
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "3e3781467b99451b319066d41d04f59361cb913c", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"3e3781467b99451b319066d41d04f59361cb913c\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.IRMe38eshOFNiqK6H_-MMMrpvi2hqekrWRR1_-joSn0\"},\"name\":\"supplychain-net\"}}\n"}, "creationTimestamp": "2022-07-17T14:53:22Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.IRMe38eshOFNiqK6H_-MMMrpvi2hqekrWRR1_-joSn0", "kubernetes.io/metadata.name": "supplychain-net"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}, "f:kubernetes.io/metadata.name": {}}}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T14:53:22Z"}], "name": "supplychain-net", "resourceVersion": "67776", "uid": "330aafdc-420a-41a2-ae63-18619e94623e"}, "spec": {"finalizers": ["kubernetes"]}, "status": {"phase": "Active"}}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace supplychain-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:23
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace supplychain-net is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:38
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace supplychain-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:51
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create/namespace_vaultauth : Set Variable] *******************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:23
ok: [localhost] => {"ansible_facts": {"get_namespace": {"api_found": true, "changed": false, "failed": false, "resources": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "3e3781467b99451b319066d41d04f59361cb913c", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"3e3781467b99451b319066d41d04f59361cb913c\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.IRMe38eshOFNiqK6H_-MMMrpvi2hqekrWRR1_-joSn0\"},\"name\":\"supplychain-net\"}}\n"}, "creationTimestamp": "2022-07-17T14:53:22Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.IRMe38eshOFNiqK6H_-MMMrpvi2hqekrWRR1_-joSn0", "kubernetes.io/metadata.name": "supplychain-net"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}, "f:kubernetes.io/metadata.name": {}}}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T14:53:22Z"}], "name": "supplychain-net", "resourceVersion": "67776", "uid": "330aafdc-420a-41a2-ae63-18619e94623e"}, "spec": {"finalizers": ["kubernetes"]}, "status": {"phase": "Active"}}]}}, "changed": false}

TASK [Create namespaces] *******************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:30
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create vault reviewer service account for Organizations] *****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:44
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create vault auth service account for Organizations] *********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create clusterrolebinding for Ordrers] ***********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:72
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:80

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.607067", "end": "2022-07-17 16:13:08.867473", "msg": "", "rc": 0, "start": "2022-07-17 16:13:06.260406", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   0690c69..7c73aeb  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   0690c69..7c73aeb  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main 7c73aeb] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\n 2 files changed, 748 insertions(+), 1 deletion(-)\n create mode 100644 log.txt", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main 7c73aeb] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding", " 2 files changed, 748 insertions(+), 1 deletion(-)", " create mode 100644 log.txt"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main 7c73aeb] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 2 files changed, 748 insertions(+), 1 deletion(-)",
        " create mode 100644 log.txt"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   0690c69..7c73aeb  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost

TASK [Checking for the supplychain-net-role-tokenreview-binding] ***************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:92
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Including the check for ServiceAccount vault-reviewer in supplychain-net] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:105
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-reviewer is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:13
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:23
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-reviewer is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:38
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:51
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "ServiceAccount", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "1815564976fa3e9356fc8e55f0ca4c4187b7724d", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"1815564976fa3e9356fc8e55f0ca4c4187b7724d\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.WI70xe2cIJxl98yzu21kxkaxeA5ShQnYABhwxoZcjsA\"},\"name\":\"vault-reviewer\",\"namespace\":\"supplychain-net\"}}\n"}, "creationTimestamp": "2022-07-17T14:53:22Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.WI70xe2cIJxl98yzu21kxkaxeA5ShQnYABhwxoZcjsA"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:secrets": {".": {}, "k:{\"name\":\"vault-reviewer-token-w8ssw\"}": {".": {}, "f:name": {}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T14:53:22Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}}}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T14:53:22Z"}], "name": "vault-reviewer", "namespace": "supplychain-net", "resourceVersion": "67786", "uid": "862c1104-e5be-429e-909e-145b42a1fd4b"}, "secrets": [{"name": "vault-reviewer-token-w8ssw"}]}]}
META: role_complete for localhost

TASK [Including the check for ServiceAccount vault-auth in supplychain-net] ****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:117
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-auth is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:13
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:23
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-auth is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:38
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:51
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "ServiceAccount", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "c3d1e3a475c54a9b0e0a6e51942fe67b14347ea4", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"c3d1e3a475c54a9b0e0a6e51942fe67b14347ea4\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.WibrnbFMLtAXFmoHqiQ7yoY5qHSRdj3B4StcInH3s2k\"},\"name\":\"vault-auth\",\"namespace\":\"supplychain-net\"}}\n"}, "creationTimestamp": "2022-07-17T14:53:22Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.WibrnbFMLtAXFmoHqiQ7yoY5qHSRdj3B4StcInH3s2k"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:secrets": {".": {}, "k:{\"name\":\"vault-auth-token-pk8rh\"}": {".": {}, "f:name": {}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T14:53:22Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}}}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T14:53:22Z"}], "name": "vault-auth", "namespace": "supplychain-net", "resourceVersion": "67784", "uid": "f4ee318d-8bd0-4a67-9735-0106f97cb36c"}, "secrets": [{"name": "vault-auth-token-pk8rh"}]}]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Checking if the namespace manufacturer-net already exists] ***************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:12

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace manufacturer-net is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:13
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "232f42228953e7b7a2dc4a818e3b166b998f3fed", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"232f42228953e7b7a2dc4a818e3b166b998f3fed\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256._sr71fFK0Xm2kqAjgtd_7Y2m2J6HP7yA__y3JORZgrY\"},\"name\":\"manufacturer-net\"}}\n"}, "creationTimestamp": "2022-07-17T14:55:22Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256._sr71fFK0Xm2kqAjgtd_7Y2m2J6HP7yA__y3JORZgrY", "kubernetes.io/metadata.name": "manufacturer-net"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}, "f:kubernetes.io/metadata.name": {}}}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T14:55:22Z"}], "name": "manufacturer-net", "resourceVersion": "68172", "uid": "f83554e1-25ef-4ca3-81e6-c12a383b14fb"}, "spec": {"finalizers": ["kubernetes"]}, "status": {"phase": "Active"}}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace manufacturer-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:23
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace manufacturer-net is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:38
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace manufacturer-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:51
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create/namespace_vaultauth : Set Variable] *******************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:23
ok: [localhost] => {"ansible_facts": {"get_namespace": {"api_found": true, "changed": false, "failed": false, "resources": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "232f42228953e7b7a2dc4a818e3b166b998f3fed", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"232f42228953e7b7a2dc4a818e3b166b998f3fed\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256._sr71fFK0Xm2kqAjgtd_7Y2m2J6HP7yA__y3JORZgrY\"},\"name\":\"manufacturer-net\"}}\n"}, "creationTimestamp": "2022-07-17T14:55:22Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256._sr71fFK0Xm2kqAjgtd_7Y2m2J6HP7yA__y3JORZgrY", "kubernetes.io/metadata.name": "manufacturer-net"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}, "f:kubernetes.io/metadata.name": {}}}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T14:55:22Z"}], "name": "manufacturer-net", "resourceVersion": "68172", "uid": "f83554e1-25ef-4ca3-81e6-c12a383b14fb"}, "spec": {"finalizers": ["kubernetes"]}, "status": {"phase": "Active"}}]}}, "changed": false}

TASK [Create namespaces] *******************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:30
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create vault reviewer service account for Organizations] *****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:44
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create vault auth service account for Organizations] *********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create clusterrolebinding for Ordrers] ***********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:72
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:80

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.429236", "end": "2022-07-17 16:13:17.378440", "msg": "", "rc": 0, "start": "2022-07-17 16:13:14.949204", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   7c73aeb..7a9fa21  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   7c73aeb..7a9fa21  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main 7a9fa21] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\n 1 file changed, 144 insertions(+)", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main 7a9fa21] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding", " 1 file changed, 144 insertions(+)"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main 7a9fa21] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 1 file changed, 144 insertions(+)"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   7c73aeb..7a9fa21  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost

TASK [Checking for the manufacturer-net-role-tokenreview-binding] **************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:92
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Including the check for ServiceAccount vault-reviewer in manufacturer-net] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:105

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-reviewer is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:13
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:23
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-reviewer is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:38
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:51
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "ServiceAccount", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "d066e7b6fb5ac52209a9009c187424918b57443e", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"d066e7b6fb5ac52209a9009c187424918b57443e\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.vfb26ro71IOb1RHSmyWNt8_iCujkJIOIGRsw074k16o\"},\"name\":\"vault-reviewer\",\"namespace\":\"manufacturer-net\"}}\n"}, "creationTimestamp": "2022-07-17T14:55:22Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.vfb26ro71IOb1RHSmyWNt8_iCujkJIOIGRsw074k16o"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:secrets": {".": {}, "k:{\"name\":\"vault-reviewer-token-45pkj\"}": {".": {}, "f:name": {}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T14:55:22Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}}}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T14:55:22Z"}], "name": "vault-reviewer", "namespace": "manufacturer-net", "resourceVersion": "68184", "uid": "3b4c898e-0be7-465f-89ba-f667bf2445f8"}, "secrets": [{"name": "vault-reviewer-token-45pkj"}]}]}
META: role_complete for localhost

TASK [Including the check for ServiceAccount vault-auth in manufacturer-net] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:117

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-auth is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:13
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:23
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-auth is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:38
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:51
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "ServiceAccount", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "4651c9d3bdffdf2db6de8e491b4e9a1fba591846", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"4651c9d3bdffdf2db6de8e491b4e9a1fba591846\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.tumpJX2Us2WWRSnzn90asc6m3BTB0trXG_bYyrjv8L4\"},\"name\":\"vault-auth\",\"namespace\":\"manufacturer-net\"}}\n"}, "creationTimestamp": "2022-07-17T14:55:22Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.tumpJX2Us2WWRSnzn90asc6m3BTB0trXG_bYyrjv8L4"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:secrets": {".": {}, "k:{\"name\":\"vault-auth-token-4ps9j\"}": {".": {}, "f:name": {}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T14:55:22Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}}}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T14:55:22Z"}], "name": "vault-auth", "namespace": "manufacturer-net", "resourceVersion": "68182", "uid": "6ad92c11-ef2d-4029-94c9-c76007dc1f9c"}, "secrets": [{"name": "vault-auth-token-4ps9j"}]}]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Checking if the namespace carrier-net already exists] ********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:12

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace carrier-net is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:13
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "9caeb41821a229aac426fa223fc4c5e4a1457332", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"9caeb41821a229aac426fa223fc4c5e4a1457332\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.YuKbj223uaHS-8etYgjS8tf9UifVidH7NL7LW97j_PU\"},\"name\":\"carrier-net\"}}\n"}, "creationTimestamp": "2022-07-17T14:57:25Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.YuKbj223uaHS-8etYgjS8tf9UifVidH7NL7LW97j_PU", "kubernetes.io/metadata.name": "carrier-net"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}, "f:kubernetes.io/metadata.name": {}}}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T14:57:25Z"}], "name": "carrier-net", "resourceVersion": "68576", "uid": "660c5013-2fb3-4502-8665-2638aa5ce0a4"}, "spec": {"finalizers": ["kubernetes"]}, "status": {"phase": "Active"}}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:23
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace carrier-net is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:38
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:51
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create/namespace_vaultauth : Set Variable] *******************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:23
ok: [localhost] => {"ansible_facts": {"get_namespace": {"api_found": true, "changed": false, "failed": false, "resources": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "9caeb41821a229aac426fa223fc4c5e4a1457332", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"9caeb41821a229aac426fa223fc4c5e4a1457332\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.YuKbj223uaHS-8etYgjS8tf9UifVidH7NL7LW97j_PU\"},\"name\":\"carrier-net\"}}\n"}, "creationTimestamp": "2022-07-17T14:57:25Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.YuKbj223uaHS-8etYgjS8tf9UifVidH7NL7LW97j_PU", "kubernetes.io/metadata.name": "carrier-net"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}, "f:kubernetes.io/metadata.name": {}}}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T14:57:25Z"}], "name": "carrier-net", "resourceVersion": "68576", "uid": "660c5013-2fb3-4502-8665-2638aa5ce0a4"}, "spec": {"finalizers": ["kubernetes"]}, "status": {"phase": "Active"}}]}}, "changed": false}

TASK [Create namespaces] *******************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:30
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create vault reviewer service account for Organizations] *****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:44
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create vault auth service account for Organizations] *********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create clusterrolebinding for Ordrers] ***********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:72
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:80

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.406890", "end": "2022-07-17 16:13:26.198876", "msg": "", "rc": 0, "start": "2022-07-17 16:13:23.791986", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   7a9fa21..97521d5  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   7a9fa21..97521d5  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main 97521d5] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding\n 1 file changed, 135 insertions(+)", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main 97521d5] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding", " 1 file changed, 135 insertions(+)"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main 97521d5] [ci skip] Pushing deployment files for namespace, service accounts and clusterrolebinding",
        " 1 file changed, 135 insertions(+)"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   7a9fa21..97521d5  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost

TASK [Checking for the carrier-net-role-tokenreview-binding] *******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:92
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Including the check for ServiceAccount vault-reviewer in carrier-net] ****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:105

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-reviewer is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:13
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:23
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-reviewer is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:38
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-reviewer] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:51
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "ServiceAccount", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "b58363452cf175c51393cb14895aa328f29926fb", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"b58363452cf175c51393cb14895aa328f29926fb\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.tHxyhRAyNW-IgH_c1xKvrd3n1zb9DYhKVisIJDA0fcU\"},\"name\":\"vault-reviewer\",\"namespace\":\"carrier-net\"}}\n"}, "creationTimestamp": "2022-07-17T14:57:25Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.tHxyhRAyNW-IgH_c1xKvrd3n1zb9DYhKVisIJDA0fcU"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:secrets": {".": {}, "k:{\"name\":\"vault-reviewer-token-c58fp\"}": {".": {}, "f:name": {}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T14:57:25Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}}}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T14:57:25Z"}], "name": "vault-reviewer", "namespace": "carrier-net", "resourceVersion": "68586", "uid": "7a24a4fa-a29b-4219-9bb6-a9691d72ad28"}, "secrets": [{"name": "vault-reviewer-token-c58fp"}]}]}
META: role_complete for localhost

TASK [Including the check for ServiceAccount vault-auth in carrier-net] ********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/namespace_vaultauth/tasks/main.yaml:117

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-auth is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:13
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:23
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check ServiceAccount vault-auth is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:38
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for ServiceAccount vault-auth] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:51
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "ServiceAccount", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "1f1e2eea45453e92f0290eba38f04db3a5b9e630", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"1f1e2eea45453e92f0290eba38f04db3a5b9e630\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.WJM3Wl3RRTm53NxsYh1jBuh55cJe6Xh-1He7iqeV2ek\"},\"name\":\"vault-auth\",\"namespace\":\"carrier-net\"}}\n"}, "creationTimestamp": "2022-07-17T14:57:25Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.WJM3Wl3RRTm53NxsYh1jBuh55cJe6Xh-1He7iqeV2ek"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:secrets": {".": {}, "k:{\"name\":\"vault-auth-token-t6482\"}": {".": {}, "f:name": {}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T14:57:25Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}}}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T14:57:25Z"}], "name": "vault-auth", "namespace": "carrier-net", "resourceVersion": "68583", "uid": "1bf369e3-e820-4501-a6be-2f2de86f41fb"}, "secrets": [{"name": "vault-auth-token-t6482"}]}]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Setup Vault Kubernetes for each organization] ****************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:40

TASK [Waiting for the namespace supplychain-net to be created] *****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:13
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace supplychain-net is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:13
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace supplychain-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:23
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "3e3781467b99451b319066d41d04f59361cb913c", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"3e3781467b99451b319066d41d04f59361cb913c\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.IRMe38eshOFNiqK6H_-MMMrpvi2hqekrWRR1_-joSn0\"},\"name\":\"supplychain-net\"}}\n"}, "creationTimestamp": "2022-07-17T14:53:22Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.IRMe38eshOFNiqK6H_-MMMrpvi2hqekrWRR1_-joSn0", "kubernetes.io/metadata.name": "supplychain-net"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}, "f:kubernetes.io/metadata.name": {}}}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T14:53:22Z"}], "name": "supplychain-net", "resourceVersion": "67776", "uid": "330aafdc-420a-41a2-ae63-18619e94623e"}, "spec": {"finalizers": ["kubernetes"]}, "status": {"phase": "Active"}}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace supplychain-net is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:38
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace supplychain-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:51
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Create docker credentials secret] ****************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:23
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s

TASK [create/k8s_secrets : Check if root token exists in the namespace] ********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:13
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Put root token of every organization] ***************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:25
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Checking if the docker credentials already exists] ***********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:43
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "data": {".dockerconfigjson": "eyJhdXRocyI6IHsiaW5kZXguZG9ja2VyLmlvL2h5cGVybGVkZ2VybGFicyI6IHsidXNlcm5hbWUiOiAiYWRpdHlham9zaGkxMiIsICJwYXNzd29yZCI6ICJGYXJjcnlAMjAxNCIsICJlbWFpbCI6ICJ0ZXN0QGFiYy5tYWlsIiwgImF1dGgiOiAiWVdScGRIbGhhbTl6YUdreE1qcEdZWEpqY25sQU1qQXhOQT09In19fQ=="}, "kind": "Secret", "metadata": {"creationTimestamp": "2022-07-17T14:57:37Z", "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:data": {".": {}, "f:.dockerconfigjson": {}}, "f:type": {}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2022-07-17T14:57:37Z"}], "name": "regcred", "namespace": "supplychain-net", "resourceVersion": "68625", "uid": "c3e18f3f-ed9c-49e5-a9b9-217dee9d6a4f"}, "type": "kubernetes.io/dockerconfigjson"}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:51
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:55
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:59
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the docker pull credentials] *****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:65
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check Ambassador cred exists] ***********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:83
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca certs already created] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:97
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca key already created] ********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:112
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the Ambassador credentials] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:127
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check Ambassador cred exists for orderers] **********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:151
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca certs already created for orderers] *****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:165
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca key already created for orderers] *******
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:180
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the Ambassador credentials for orderers] *****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:195
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if endorser certs secret exists in the namespace] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:219
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create endorser certs secret exists in the namespace] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:231
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Create vault token secret] ***********************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:33
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s

TASK [create/k8s_secrets : Check if root token exists in the namespace] ********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:13
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": []}

TASK [create/k8s_secrets : Put root token of every organization] ***************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:25
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s
changed: [localhost] => {"changed": true, "method": "create", "result": {"apiVersion": "v1", "data": {"config.yaml": "", "token": "aHZzLnFwYjlUeVVWSWtkQnVCRE1ieUFtQ0VIeQ=="}, "kind": "Secret", "metadata": {"creationTimestamp": "2022-07-17T16:13:37Z", "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:data": {".": {}, "f:config.yaml": {}, "f:token": {}}, "f:type": {}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2022-07-17T16:13:37Z"}], "name": "roottoken", "namespace": "supplychain-net", "resourceVersion": "85771", "uid": "9a1b8240-7f06-4aa7-a983-3e1abe552a15"}, "type": "Opaque"}}

TASK [Checking if the docker credentials already exists] ***********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:43

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "data": {".dockerconfigjson": "eyJhdXRocyI6IHsiaW5kZXguZG9ja2VyLmlvL2h5cGVybGVkZ2VybGFicyI6IHsidXNlcm5hbWUiOiAiYWRpdHlham9zaGkxMiIsICJwYXNzd29yZCI6ICJGYXJjcnlAMjAxNCIsICJlbWFpbCI6ICJ0ZXN0QGFiYy5tYWlsIiwgImF1dGgiOiAiWVdScGRIbGhhbTl6YUdreE1qcEdZWEpqY25sQU1qQXhOQT09In19fQ=="}, "kind": "Secret", "metadata": {"creationTimestamp": "2022-07-17T14:57:37Z", "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:data": {".": {}, "f:.dockerconfigjson": {}}, "f:type": {}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2022-07-17T14:57:37Z"}], "name": "regcred", "namespace": "supplychain-net", "resourceVersion": "68625", "uid": "c3e18f3f-ed9c-49e5-a9b9-217dee9d6a4f"}, "type": "kubernetes.io/dockerconfigjson"}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:51
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:55
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:59
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the docker pull credentials] *****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:65
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check Ambassador cred exists] ***********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:83
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca certs already created] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:97
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca key already created] ********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:112
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the Ambassador credentials] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:127
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check Ambassador cred exists for orderers] **********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:151
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca certs already created for orderers] *****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:165
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca key already created for orderers] *******
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:180
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the Ambassador credentials for orderers] *****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:195
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if endorser certs secret exists in the namespace] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:219
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create endorser certs secret exists in the namespace] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:231
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [setup/vault_kubernetes : Get the kubernetes server url] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:44
changed: [localhost] => {"changed": true, "cmd": "KUBECONFIG=/home/bevel/build/config kubectl config view --minify | grep server | cut -f 2- -d \":\" | tr -d \" \"\n", "delta": "0:00:00.111741", "end": "2022-07-17 16:13:40.612552", "msg": "", "rc": 0, "start": "2022-07-17 16:13:40.500811", "stderr": "", "stderr_lines": [], "stdout": "https://bevel-dns-6a0e538d.hcp.centralindia.azmk8s.io:443", "stdout_lines": ["https://bevel-dns-6a0e538d.hcp.centralindia.azmk8s.io:443"]}

TASK [Create value file for vault_kubernetes] **********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:51

TASK [helm_component : Ensures /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/supplychain dir exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:14
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/supplychain", "size": 4096, "state": "directory", "uid": 0}

TASK [helm_component : create value file for supplychain-vaultkubernetes-job] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:23
ok: [localhost] => {"changed": false, "checksum": "a0673a62a3846d412fd5cdfe2d093a87d172ddde", "dest": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/supplychain/supplychain-vaultkubernetes-job.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/supplychain/supplychain-vaultkubernetes-job.yaml", "size": 966, "state": "file", "uid": 0}

TASK [Helm lint] ***************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:32

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
ok: [localhost] => {"changed": false, "stat": {"atime": 1658069865.2807546, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "checksum": "a0673a62a3846d412fd5cdfe2d093a87d172ddde", "ctime": 1658069864.7687552, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626751, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658069864.4967554, "nlink": 1, "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/supplychain/supplychain-vaultkubernetes-job.yaml", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 966, "uid": 0, "version": "3436199913", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [Check or create test directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:22
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"exists": false}}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
changed: [localhost] => {"changed": true, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "./build/test", "size": 4096, "state": "directory", "uid": 0}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:31
ok: [localhost] => {"ansible_facts": {"apiVersion": "helm.fluxcd.io/v1", "kind": "HelmRelease", "metadata": {"annotations": {"fluxcd.io/automated": "false"}, "name": "supplychain-vaultkubenertes-job", "namespace": "supplychain-net"}, "spec": {"chart": {"git": "ssh://git@github.com/adityajoshi12/bevel.git", "path": "platforms/hyperledger-fabric/charts/vault_kubernetes", "ref": "test"}, "releaseName": "supplychain-vaultkubenertes-job", "values": {"k8s": {"kubernetes_url": "https://bevel-dns-6a0e538d.hcp.centralindia.azmk8s.io:443"}, "metadata": {"component_type": "orderer", "images": {"alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0"}, "name": "supplychain", "namespace": "supplychain-net"}, "vault": {"address": "http://20.197.63.209:8200", "authpath": "devsupplychain-net-auth", "imagesecretname": "regcred", "policy": "vault-crypto-orderer-supplychain-net-ro", "reviewer_service": "vault-reviewer", "role": "vault-role", "secret_path": "secretv2", "serviceaccountname": "vault-auth"}}}}, "ansible_included_var_files": ["/home/bevel/platforms/hyperledger-fabric/releases/dev/supplychain/supplychain/supplychain-vaultkubernetes-job.yaml"], "changed": false}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:36
ok: [localhost] => {"changed": false, "checksum": "3340b7fb60e525b22649b78cc9f82f570a3bd2a7", "dest": "./build/test/supplychain-vaultkubenertes-job.yaml", "gid": 0, "group": "root", "md5sum": "bca10e094416db0f924c9adb0edd00e7", "mode": "0644", "owner": "root", "size": 540, "src": "/root/.ansible/tmp/ansible-tmp-1658074423.9583988-31368-51350582727466/source", "state": "file", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:42
changed: [localhost] => {"changed": true, "cmd": "helm lint -f \"./build/test/supplychain-vaultkubenertes-job.yaml\" \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/vault_kubernetes\"\n", "delta": "0:00:00.086757", "end": "2022-07-17 16:13:45.012022", "msg": "", "rc": 0, "start": "2022-07-17 16:13:44.925265", "stderr": "", "stderr_lines": [], "stdout": "==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/vault_kubernetes\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, 0 chart(s) failed", "stdout_lines": ["==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/vault_kubernetes", "[INFO] Chart.yaml: icon is recommended", "", "1 chart(s) linted, 0 chart(s) failed"]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:70

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing vault_kubernetes files\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.446561", "end": "2022-07-17 16:13:48.574376", "msg": "", "rc": 0, "start": "2022-07-17 16:13:46.127815", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   97521d5..ad39f1f  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   97521d5..ad39f1f  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main ad39f1f] [ci skip] Pushing vault_kubernetes files\n 1 file changed, 416 insertions(+)", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main ad39f1f] [ci skip] Pushing vault_kubernetes files", " 1 file changed, 416 insertions(+)"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main ad39f1f] [ci skip] Pushing vault_kubernetes files",
        " 1 file changed, 416 insertions(+)"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   97521d5..ad39f1f  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost

TASK [Check if vault_kubernetes job is completed] ******************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:80
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job supplychain-vaultkubenertes-job in supplychain-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:11
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2022-07-17T14:59:36Z", "generateName": "supplychain-vaultkubenertes-job-", "labels": {"app": "supplychain-vaultkubenertes-job", "app.kubernetes.io/instance": "supplychain-vaultkubenertes-job", "app.kubernetes.io/managed-by": "Helm", "app.kubernetes.io/name": "supplychain-vaultkubenertes-job", "controller-uid": "fd8f81b2-8ab1-45fb-b909-ebe018db6524", "helm.sh/chart": "vault_kubernetes-0.2.0", "job-name": "supplychain-vaultkubenertes-job"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:app": {}, "f:app.kubernetes.io/instance": {}, "f:app.kubernetes.io/managed-by": {}, "f:app.kubernetes.io/name": {}, "f:controller-uid": {}, "f:helm.sh/chart": {}, "f:job-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"fd8f81b2-8ab1-45fb-b909-ebe018db6524\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {"f:containers": {"k:{\"name\":\"vault-kubernetes\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"COMPONENT_TYPE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"KUBERNETES_AUTH_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"KUBERNETES_URL\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"NAMESPACE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"POLICIES_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"POLICY_NAME\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"ROOT_TOKEN\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:secretKeyRef": {".": {}, "f:key": {}, "f:name": {}}}}, "k:{\"name\":\"VAULT_ADDR\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ROLE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SA\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/policies/policies-config-orderer.json.tmpl\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:subPath": {}}, "k:{\"mountPath\":\"/policies/policies-config-peer.json.tmpl\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:subPath": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:imagePullSecrets": {".": {}, "k:{\"name\":\"regcred\"}": {".": {}, "f:name": {}}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"policies\"}": {".": {}, "f:emptyDir": {".": {}, "f:medium": {}}, "f:name": {}}, "k:{\"name\":\"policies-config-orderer\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:items": {}, "f:name": {}}, "f:name": {}}, "k:{\"name\":\"policies-config-peer\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:items": {}, "f:name": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T14:59:36Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.24\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "time": "2022-07-17T14:59:40Z"}], "name": "supplychain-vaultkubenertes-job-ccpq6", "namespace": "supplychain-net", "ownerReferences": [{"apiVersion": "batch/v1", "blockOwnerDeletion": true, "controller": true, "kind": "Job", "name": "supplychain-vaultkubenertes-job", "uid": "fd8f81b2-8ab1-45fb-b909-ebe018db6524"}], "resourceVersion": "69042", "uid": "b6b67adf-3008-40c6-a872-945da0fa6bc6"}, "spec": {"containers": [{"args": ["apk update && apk add jq curl;\n\nvalidateVaultResponse () {\n  if [ ${1} != 200 -a ${1} != 204 ]; then\n    echo \"ERROR: Unable to retrieve. Http status: ${1}\"\n    exit 1\n  fi\n};\n\n# Check if authpath already created\nvault_auth_check=$(curl --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  ${VAULT_ADDR}/v1/sys/auth | jq '.\"devsupplychain-net-auth/\"');\n\nif [ \"$vault_auth_check\" == 'null' ]; then\n  echo \"authpath does not exist. Creating ...\"\n  # This command enables the path for the organizations and orderers on vault\n  curl \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  --request POST \\\n  --data '{\"type\": \"kubernetes\"}' \\\n  ${VAULT_ADDR}/v1/sys/auth/${KUBERNETES_AUTH_PATH}\n\n  while IFS= read -r line\n  do\n    echo \"$line\\n\"\n  done < /var/run/secrets/kubernetes.io/serviceaccount/ca.crt > ca_formatted.txt\n\n  KUBE_SA_CRT_ONELINE=$(cat ca_formatted.txt)\n  export REVIEWER_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token);\n\n  # This echo get the certificate for the cluster\n  echo \"\n    {\n      \\\"token_reviewer_jwt\\\": \\\"${REVIEWER_TOKEN}\\\",\n      \\\"kubernetes_host\\\": \\\"${KUBERNETES_URL}\\\",\n      \\\"disable_iss_validation\\\":\\\"true\\\",\n      \\\"kubernetes_ca_cert\\\": \\\"${KUBE_SA_CRT_ONELINE}\\\"\n    }\" > payload.json\n\n  # This command writtes the Service Account token to the vault for Organisations\n  curl \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  --request POST \\\n  --data @payload.json \\\n  ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/config\n\n  # Check auth\n  response_status=$(curl -s -o /dev/null -w \"%{http_code}\" \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/config);\n\n  rm payload.json\n\n  validateVaultResponse ${response_status};\nfi;\n\n# Check if policy already created\nvault_policy_check=$(curl --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  ${VAULT_ADDR}/v1/sys/policy/${POLICY_NAME} | jq -r '.name');\n\nif [ \"$vault_policy_check\" == 'null' ]; then\n  echo \"vaultpolicy does not exist. Creating ...\"\n  mkdir -p ${POLICIES_PATH}\n\n  if [ $COMPONENT_TYPE == 'orderer' ]; then\n    \n    # This command writes the policies to the vault\n    curl \\\n    --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n    --request POST \\\n    --data @${POLICIES_PATH}/policies-config-orderer.json.tmpl \\\n    ${VAULT_ADDR}/v1/sys/policy/${POLICY_NAME}\n\n  fi;\n\n  if [ $COMPONENT_TYPE == 'peer' ]; then\n\n    # This command writes the policies to the vault\n    curl \\\n    --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n    --request POST \\\n    --data @${POLICIES_PATH}/policies-config-peer.json.tmpl \\\n    ${VAULT_ADDR}/v1/sys/policy/${POLICY_NAME}\n\n  fi;\n\n  # Check policy\n  response_status=$(curl -s -o /dev/null -w \"%{http_code}\" \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  ${VAULT_ADDR}/v1/sys/policy/${POLICY_NAME});\n\n  validateVaultResponse ${response_status};\nfi;\n\nif [ \"$vault_auth_check\" == 'null' ]; then\n  echo \"Need vault auth role\"\n\n  echo \" {\\\"bound_service_account_names\\\": \\\"${VAULT_SA}\\\", \\\n  \\\"bound_service_account_namespaces\\\": \\\"${NAMESPACE}\\\", \\\n  \\\"policies\\\": [\\\"${POLICY_NAME}\\\"], \\\"ttl\\\": \\\"1200s\\\"}\" > payload.json\n\n  curl \\\n  -s -o /dev/null -w \"%{http_code}\" \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  --request POST \\\n  --data @payload.json \\\n  ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/role/${VAULT_ROLE}\n\n  # Check role\n  response_status=$(curl -s -o /dev/null -w \"%{http_code}\" \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/role/${VAULT_ROLE});\n\n  rm payload.json\n\n  validateVaultResponse ${response_status};\nfi;"], "command": ["sh", "-c"], "env": [{"name": "VAULT_ADDR", "value": "http://20.197.63.209:8200"}, {"name": "VAULT_SECRET_PATH", "value": "secretv2"}, {"name": "KUBERNETES_AUTH_PATH", "value": "devsupplychain-net-auth"}, {"name": "VAULT_ROLE", "value": "vault-role"}, {"name": "VAULT_SA", "value": "vault-auth"}, {"name": "KUBERNETES_URL", "value": "https://bevel-dns-6a0e538d.hcp.centralindia.azmk8s.io:443"}, {"name": "POLICY_NAME", "value": "vault-crypto-orderer-supplychain-net-ro"}, {"name": "COMPONENT_TYPE", "value": "orderer"}, {"name": "NAMESPACE", "value": "supplychain-net"}, {"name": "POLICIES_PATH", "value": "/policies"}, {"name": "ROOT_TOKEN", "valueFrom": {"secretKeyRef": {"key": "token", "name": "roottoken"}}}], "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "imagePullPolicy": "IfNotPresent", "name": "vault-kubernetes", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/policies/policies-config-orderer.json.tmpl", "name": "policies-config-orderer", "subPath": "policies-config-orderer.json.tmpl"}, {"mountPath": "/policies/policies-config-peer.json.tmpl", "name": "policies-config-peer", "subPath": "policies-config-peer.json.tmpl"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-svpxp", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "imagePullSecrets": [{"name": "regcred"}], "nodeName": "aks-agentpool-84293659-vmss000001", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "OnFailure", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "vault-reviewer", "serviceAccountName": "vault-reviewer", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"emptyDir": {"medium": "Memory"}, "name": "policies"}, {"configMap": {"defaultMode": 420, "items": [{"key": "policies-config-orderer.json.tmpl", "path": "policies-config-orderer.json.tmpl"}], "name": "policies-config-orderer"}, "name": "policies-config-orderer"}, {"configMap": {"defaultMode": 420, "items": [{"key": "policies-config-peer.json.tmpl", "path": "policies-config-peer.json.tmpl"}], "name": "policies-config-orderer"}, "name": "policies-config-peer"}, {"name": "kube-api-access-svpxp", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2022-07-17T14:59:36Z", "reason": "PodCompleted", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T14:59:40Z", "reason": "PodCompleted", "status": "False", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T14:59:40Z", "reason": "PodCompleted", "status": "False", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T14:59:36Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://54077e4bc330f97a3172e915118060c8b42076c3385769af7b629fc7816313a6", "image": "docker.io/hyperledgerlabs/alpine-utils:1.0", "imageID": "docker.io/hyperledgerlabs/alpine-utils@sha256:cab1d1566ddaa28e482b5eeda7426791bdf607cee41e2b752ccc566553810f74", "lastState": {}, "name": "vault-kubernetes", "ready": false, "restartCount": 0, "started": false, "state": {"terminated": {"containerID": "containerd://54077e4bc330f97a3172e915118060c8b42076c3385769af7b629fc7816313a6", "exitCode": 0, "finishedAt": "2022-07-17T14:59:40Z", "reason": "Completed", "startedAt": "2022-07-17T14:59:37Z"}}}], "hostIP": "10.224.0.5", "phase": "Succeeded", "podIP": "10.244.0.24", "podIPs": [{"ip": "10.244.0.24"}], "qosClass": "BestEffort", "startTime": "2022-07-17T14:59:36Z"}}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:28
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job supplychain-vaultkubenertes-job in supplychain-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:42
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Delete vault token secret] ***********************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:91
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s

TASK [delete/k8s_secrets : Delete vault roottoken] *****************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/delete/k8s_secrets/tasks/main.yaml:8
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s
changed: [localhost] => {"changed": true, "method": "delete", "result": {"apiVersion": "v1", "details": {"kind": "secrets", "name": "roottoken", "uid": "9a1b8240-7f06-4aa7-a983-3e1abe552a15"}, "kind": "Status", "metadata": {}, "status": "Success"}}
META: role_complete for localhost
META: role_complete for localhost

TASK [Waiting for the namespace manufacturer-net to be created] ****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:13

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace manufacturer-net is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:13
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace manufacturer-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:23
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "232f42228953e7b7a2dc4a818e3b166b998f3fed", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"232f42228953e7b7a2dc4a818e3b166b998f3fed\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256._sr71fFK0Xm2kqAjgtd_7Y2m2J6HP7yA__y3JORZgrY\"},\"name\":\"manufacturer-net\"}}\n"}, "creationTimestamp": "2022-07-17T14:55:22Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256._sr71fFK0Xm2kqAjgtd_7Y2m2J6HP7yA__y3JORZgrY", "kubernetes.io/metadata.name": "manufacturer-net"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}, "f:kubernetes.io/metadata.name": {}}}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T14:55:22Z"}], "name": "manufacturer-net", "resourceVersion": "68172", "uid": "f83554e1-25ef-4ca3-81e6-c12a383b14fb"}, "spec": {"finalizers": ["kubernetes"]}, "status": {"phase": "Active"}}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace manufacturer-net is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:38
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace manufacturer-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:51
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Create docker credentials secret] ****************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:23

TASK [create/k8s_secrets : Check if root token exists in the namespace] ********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:13
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Put root token of every organization] ***************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:25
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Checking if the docker credentials already exists] ***********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:43

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "data": {".dockerconfigjson": "eyJhdXRocyI6IHsiaW5kZXguZG9ja2VyLmlvL2h5cGVybGVkZ2VybGFicyI6IHsidXNlcm5hbWUiOiAiYWRpdHlham9zaGkxMiIsICJwYXNzd29yZCI6ICJGYXJjcnlAMjAxNCIsICJlbWFpbCI6ICJ0ZXN0QGFiYy5tYWlsIiwgImF1dGgiOiAiWVdScGRIbGhhbTl6YUdreE1qcEdZWEpqY25sQU1qQXhOQT09In19fQ=="}, "kind": "Secret", "metadata": {"creationTimestamp": "2022-07-17T15:00:04Z", "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:data": {".": {}, "f:.dockerconfigjson": {}}, "f:type": {}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2022-07-17T15:00:04Z"}], "name": "regcred", "namespace": "manufacturer-net", "resourceVersion": "69124", "uid": "70e5b11b-c3a9-430b-90f5-0bc44fc1b9af"}, "type": "kubernetes.io/dockerconfigjson"}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:51
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:55
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:59
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the docker pull credentials] *****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:65
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check Ambassador cred exists] ***********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:83
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca certs already created] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:97
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca key already created] ********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:112
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the Ambassador credentials] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:127
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check Ambassador cred exists for orderers] **********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:151
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca certs already created for orderers] *****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:165
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca key already created for orderers] *******
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:180
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the Ambassador credentials for orderers] *****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:195
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if endorser certs secret exists in the namespace] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:219
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create endorser certs secret exists in the namespace] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:231
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Create vault token secret] ***********************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:33

TASK [create/k8s_secrets : Check if root token exists in the namespace] ********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:13
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": []}

TASK [create/k8s_secrets : Put root token of every organization] ***************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:25
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s
changed: [localhost] => {"changed": true, "method": "create", "result": {"apiVersion": "v1", "data": {"config.yaml": "", "token": "aHZzLnFwYjlUeVVWSWtkQnVCRE1ieUFtQ0VIeQ=="}, "kind": "Secret", "metadata": {"creationTimestamp": "2022-07-17T16:13:59Z", "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:data": {".": {}, "f:config.yaml": {}, "f:token": {}}, "f:type": {}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2022-07-17T16:13:59Z"}], "name": "roottoken", "namespace": "manufacturer-net", "resourceVersion": "85849", "uid": "48b3b8ea-c2e5-4c5f-bad2-9b10956d4ae5"}, "type": "Opaque"}}

TASK [Checking if the docker credentials already exists] ***********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:43

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "data": {".dockerconfigjson": "eyJhdXRocyI6IHsiaW5kZXguZG9ja2VyLmlvL2h5cGVybGVkZ2VybGFicyI6IHsidXNlcm5hbWUiOiAiYWRpdHlham9zaGkxMiIsICJwYXNzd29yZCI6ICJGYXJjcnlAMjAxNCIsICJlbWFpbCI6ICJ0ZXN0QGFiYy5tYWlsIiwgImF1dGgiOiAiWVdScGRIbGhhbTl6YUdreE1qcEdZWEpqY25sQU1qQXhOQT09In19fQ=="}, "kind": "Secret", "metadata": {"creationTimestamp": "2022-07-17T15:00:04Z", "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:data": {".": {}, "f:.dockerconfigjson": {}}, "f:type": {}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2022-07-17T15:00:04Z"}], "name": "regcred", "namespace": "manufacturer-net", "resourceVersion": "69124", "uid": "70e5b11b-c3a9-430b-90f5-0bc44fc1b9af"}, "type": "kubernetes.io/dockerconfigjson"}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:51
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:55
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:59
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the docker pull credentials] *****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:65
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check Ambassador cred exists] ***********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:83
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca certs already created] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:97
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca key already created] ********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:112
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the Ambassador credentials] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:127
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check Ambassador cred exists for orderers] **********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:151
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca certs already created for orderers] *****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:165
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca key already created for orderers] *******
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:180
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the Ambassador credentials for orderers] *****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:195
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if endorser certs secret exists in the namespace] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:219
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create endorser certs secret exists in the namespace] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:231
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [setup/vault_kubernetes : Get the kubernetes server url] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:44
changed: [localhost] => {"changed": true, "cmd": "KUBECONFIG=/home/bevel/build/config kubectl config view --minify | grep server | cut -f 2- -d \":\" | tr -d \" \"\n", "delta": "0:00:00.094297", "end": "2022-07-17 16:14:02.364223", "msg": "", "rc": 0, "start": "2022-07-17 16:14:02.269926", "stderr": "", "stderr_lines": [], "stdout": "https://bevel-dns-6a0e538d.hcp.centralindia.azmk8s.io:443", "stdout_lines": ["https://bevel-dns-6a0e538d.hcp.centralindia.azmk8s.io:443"]}

TASK [Create value file for vault_kubernetes] **********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:51

TASK [helm_component : Ensures /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer dir exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:14
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer", "size": 4096, "state": "directory", "uid": 0}

TASK [helm_component : create value file for manufacturer-vaultkubernetes-job] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:23
ok: [localhost] => {"changed": false, "checksum": "1eb6f7f17d6fb67e3a1149c9857b470b172eb9fb", "dest": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer/manufacturer-vaultkubernetes-job.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer/manufacturer-vaultkubernetes-job.yaml", "size": 967, "state": "file", "uid": 0}

TASK [Helm lint] ***************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:32

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
ok: [localhost] => {"changed": false, "stat": {"atime": 1658070013.7165685, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "checksum": "1eb6f7f17d6fb67e3a1149c9857b470b172eb9fb", "ctime": 1658070013.1845691, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626756, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658070012.8845696, "nlink": 1, "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer/manufacturer-vaultkubernetes-job.yaml", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 967, "uid": 0, "version": "1169477485", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [Check or create test directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:22

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"atime": 1658074423.378228, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "ctime": 1658074424.4862227, "dev": 64513, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626754, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658074424.4862227, "nlink": 2, "path": "./build/test", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "version": "4197237393", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:31
ok: [localhost] => {"ansible_facts": {"apiVersion": "helm.fluxcd.io/v1", "kind": "HelmRelease", "metadata": {"annotations": {"fluxcd.io/automated": "false"}, "name": "manufacturer-vaultkubenertes-job", "namespace": "manufacturer-net"}, "spec": {"chart": {"git": "ssh://git@github.com/adityajoshi12/bevel.git", "path": "platforms/hyperledger-fabric/charts/vault_kubernetes", "ref": "test"}, "releaseName": "manufacturer-vaultkubenertes-job", "values": {"k8s": {"kubernetes_url": "https://bevel-dns-6a0e538d.hcp.centralindia.azmk8s.io:443"}, "metadata": {"component_type": "peer", "images": {"alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0"}, "name": "manufacturer", "namespace": "manufacturer-net"}, "vault": {"address": "http://20.197.63.209:8200", "authpath": "devmanufacturer-net-auth", "imagesecretname": "regcred", "policy": "vault-crypto-peer-manufacturer-net-ro", "reviewer_service": "vault-reviewer", "role": "vault-role", "secret_path": "secretv2", "serviceaccountname": "vault-auth"}}}}, "ansible_included_var_files": ["/home/bevel/platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer/manufacturer-vaultkubernetes-job.yaml"], "changed": false}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:36
ok: [localhost] => {"changed": false, "checksum": "bd19b5d55b73e7b7fe971baee50651b45231d0b9", "dest": "./build/test/manufacturer-vaultkubenertes-job.yaml", "gid": 0, "group": "root", "md5sum": "50c11ac50a6e80be824f7ea4f6a6df6b", "mode": "0644", "owner": "root", "size": 538, "src": "/root/.ansible/tmp/ansible-tmp-1658074445.2659812-31987-47454597393833/source", "state": "file", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:42
changed: [localhost] => {"changed": true, "cmd": "helm lint -f \"./build/test/manufacturer-vaultkubenertes-job.yaml\" \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/vault_kubernetes\"\n", "delta": "0:00:00.095906", "end": "2022-07-17 16:14:06.319611", "msg": "", "rc": 0, "start": "2022-07-17 16:14:06.223705", "stderr": "", "stderr_lines": [], "stdout": "==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/vault_kubernetes\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, 0 chart(s) failed", "stdout_lines": ["==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/vault_kubernetes", "[INFO] Chart.yaml: icon is recommended", "", "1 chart(s) linted, 0 chart(s) failed"]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:70

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing vault_kubernetes files\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.454263", "end": "2022-07-17 16:14:09.761130", "msg": "", "rc": 0, "start": "2022-07-17 16:14:07.306867", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   ad39f1f..b4ba6a9  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   ad39f1f..b4ba6a9  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main b4ba6a9] [ci skip] Pushing vault_kubernetes files\n 1 file changed, 371 insertions(+)", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main b4ba6a9] [ci skip] Pushing vault_kubernetes files", " 1 file changed, 371 insertions(+)"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main b4ba6a9] [ci skip] Pushing vault_kubernetes files",
        " 1 file changed, 371 insertions(+)"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   ad39f1f..b4ba6a9  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost

TASK [Check if vault_kubernetes job is completed] ******************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:80

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job manufacturer-vaultkubenertes-job in manufacturer-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:11
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2022-07-17T15:01:31Z", "generateName": "manufacturer-vaultkubenertes-job-", "labels": {"app": "manufacturer-vaultkubenertes-job", "app.kubernetes.io/instance": "manufacturer-vaultkubenertes-job", "app.kubernetes.io/managed-by": "Helm", "app.kubernetes.io/name": "manufacturer-vaultkubenertes-job", "controller-uid": "34cd078b-766f-451f-80de-3c42f13826d4", "helm.sh/chart": "vault_kubernetes-0.2.0", "job-name": "manufacturer-vaultkubenertes-job"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:app": {}, "f:app.kubernetes.io/instance": {}, "f:app.kubernetes.io/managed-by": {}, "f:app.kubernetes.io/name": {}, "f:controller-uid": {}, "f:helm.sh/chart": {}, "f:job-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"34cd078b-766f-451f-80de-3c42f13826d4\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {"f:containers": {"k:{\"name\":\"vault-kubernetes\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"COMPONENT_TYPE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"KUBERNETES_AUTH_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"KUBERNETES_URL\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"NAMESPACE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"POLICIES_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"POLICY_NAME\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"ROOT_TOKEN\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:secretKeyRef": {".": {}, "f:key": {}, "f:name": {}}}}, "k:{\"name\":\"VAULT_ADDR\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ROLE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SA\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/policies/policies-config-orderer.json.tmpl\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:subPath": {}}, "k:{\"mountPath\":\"/policies/policies-config-peer.json.tmpl\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:subPath": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:imagePullSecrets": {".": {}, "k:{\"name\":\"regcred\"}": {".": {}, "f:name": {}}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"policies\"}": {".": {}, "f:emptyDir": {".": {}, "f:medium": {}}, "f:name": {}}, "k:{\"name\":\"policies-config-orderer\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:items": {}, "f:name": {}}, "f:name": {}}, "k:{\"name\":\"policies-config-peer\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:items": {}, "f:name": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T15:01:31Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.25\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "time": "2022-07-17T15:01:35Z"}], "name": "manufacturer-vaultkubenertes-job-2dkcn", "namespace": "manufacturer-net", "ownerReferences": [{"apiVersion": "batch/v1", "blockOwnerDeletion": true, "controller": true, "kind": "Job", "name": "manufacturer-vaultkubenertes-job", "uid": "34cd078b-766f-451f-80de-3c42f13826d4"}], "resourceVersion": "69440", "uid": "4e9b2c6f-c455-4269-8035-3685b339511d"}, "spec": {"containers": [{"args": ["apk update && apk add jq curl;\n\nvalidateVaultResponse () {\n  if [ ${1} != 200 -a ${1} != 204 ]; then\n    echo \"ERROR: Unable to retrieve. Http status: ${1}\"\n    exit 1\n  fi\n};\n\n# Check if authpath already created\nvault_auth_check=$(curl --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  ${VAULT_ADDR}/v1/sys/auth | jq '.\"devmanufacturer-net-auth/\"');\n\nif [ \"$vault_auth_check\" == 'null' ]; then\n  echo \"authpath does not exist. Creating ...\"\n  # This command enables the path for the organizations and orderers on vault\n  curl \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  --request POST \\\n  --data '{\"type\": \"kubernetes\"}' \\\n  ${VAULT_ADDR}/v1/sys/auth/${KUBERNETES_AUTH_PATH}\n\n  while IFS= read -r line\n  do\n    echo \"$line\\n\"\n  done < /var/run/secrets/kubernetes.io/serviceaccount/ca.crt > ca_formatted.txt\n\n  KUBE_SA_CRT_ONELINE=$(cat ca_formatted.txt)\n  export REVIEWER_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token);\n\n  # This echo get the certificate for the cluster\n  echo \"\n    {\n      \\\"token_reviewer_jwt\\\": \\\"${REVIEWER_TOKEN}\\\",\n      \\\"kubernetes_host\\\": \\\"${KUBERNETES_URL}\\\",\n      \\\"disable_iss_validation\\\":\\\"true\\\",\n      \\\"kubernetes_ca_cert\\\": \\\"${KUBE_SA_CRT_ONELINE}\\\"\n    }\" > payload.json\n\n  # This command writtes the Service Account token to the vault for Organisations\n  curl \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  --request POST \\\n  --data @payload.json \\\n  ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/config\n\n  # Check auth\n  response_status=$(curl -s -o /dev/null -w \"%{http_code}\" \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/config);\n\n  rm payload.json\n\n  validateVaultResponse ${response_status};\nfi;\n\n# Check if policy already created\nvault_policy_check=$(curl --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  ${VAULT_ADDR}/v1/sys/policy/${POLICY_NAME} | jq -r '.name');\n\nif [ \"$vault_policy_check\" == 'null' ]; then\n  echo \"vaultpolicy does not exist. Creating ...\"\n  mkdir -p ${POLICIES_PATH}\n\n  if [ $COMPONENT_TYPE == 'orderer' ]; then\n    \n    # This command writes the policies to the vault\n    curl \\\n    --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n    --request POST \\\n    --data @${POLICIES_PATH}/policies-config-orderer.json.tmpl \\\n    ${VAULT_ADDR}/v1/sys/policy/${POLICY_NAME}\n\n  fi;\n\n  if [ $COMPONENT_TYPE == 'peer' ]; then\n\n    # This command writes the policies to the vault\n    curl \\\n    --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n    --request POST \\\n    --data @${POLICIES_PATH}/policies-config-peer.json.tmpl \\\n    ${VAULT_ADDR}/v1/sys/policy/${POLICY_NAME}\n\n  fi;\n\n  # Check policy\n  response_status=$(curl -s -o /dev/null -w \"%{http_code}\" \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  ${VAULT_ADDR}/v1/sys/policy/${POLICY_NAME});\n\n  validateVaultResponse ${response_status};\nfi;\n\nif [ \"$vault_auth_check\" == 'null' ]; then\n  echo \"Need vault auth role\"\n\n  echo \" {\\\"bound_service_account_names\\\": \\\"${VAULT_SA}\\\", \\\n  \\\"bound_service_account_namespaces\\\": \\\"${NAMESPACE}\\\", \\\n  \\\"policies\\\": [\\\"${POLICY_NAME}\\\"], \\\"ttl\\\": \\\"1200s\\\"}\" > payload.json\n\n  curl \\\n  -s -o /dev/null -w \"%{http_code}\" \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  --request POST \\\n  --data @payload.json \\\n  ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/role/${VAULT_ROLE}\n\n  # Check role\n  response_status=$(curl -s -o /dev/null -w \"%{http_code}\" \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/role/${VAULT_ROLE});\n\n  rm payload.json\n\n  validateVaultResponse ${response_status};\nfi;"], "command": ["sh", "-c"], "env": [{"name": "VAULT_ADDR", "value": "http://20.197.63.209:8200"}, {"name": "VAULT_SECRET_PATH", "value": "secretv2"}, {"name": "KUBERNETES_AUTH_PATH", "value": "devmanufacturer-net-auth"}, {"name": "VAULT_ROLE", "value": "vault-role"}, {"name": "VAULT_SA", "value": "vault-auth"}, {"name": "KUBERNETES_URL", "value": "https://bevel-dns-6a0e538d.hcp.centralindia.azmk8s.io:443"}, {"name": "POLICY_NAME", "value": "vault-crypto-peer-manufacturer-net-ro"}, {"name": "COMPONENT_TYPE", "value": "peer"}, {"name": "NAMESPACE", "value": "manufacturer-net"}, {"name": "POLICIES_PATH", "value": "/policies"}, {"name": "ROOT_TOKEN", "valueFrom": {"secretKeyRef": {"key": "token", "name": "roottoken"}}}], "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "imagePullPolicy": "IfNotPresent", "name": "vault-kubernetes", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/policies/policies-config-orderer.json.tmpl", "name": "policies-config-orderer", "subPath": "policies-config-orderer.json.tmpl"}, {"mountPath": "/policies/policies-config-peer.json.tmpl", "name": "policies-config-peer", "subPath": "policies-config-peer.json.tmpl"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-s2zrn", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "imagePullSecrets": [{"name": "regcred"}], "nodeName": "aks-agentpool-84293659-vmss000001", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "OnFailure", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "vault-reviewer", "serviceAccountName": "vault-reviewer", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"emptyDir": {"medium": "Memory"}, "name": "policies"}, {"configMap": {"defaultMode": 420, "items": [{"key": "policies-config-orderer.json.tmpl", "path": "policies-config-orderer.json.tmpl"}], "name": "policies-config-peer"}, "name": "policies-config-orderer"}, {"configMap": {"defaultMode": 420, "items": [{"key": "policies-config-peer.json.tmpl", "path": "policies-config-peer.json.tmpl"}], "name": "policies-config-peer"}, "name": "policies-config-peer"}, {"name": "kube-api-access-s2zrn", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:01:31Z", "reason": "PodCompleted", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:01:35Z", "reason": "PodCompleted", "status": "False", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:01:35Z", "reason": "PodCompleted", "status": "False", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:01:31Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://70855c3443b470c3c6f9c0134c4053038ee13aa9fd0731d2a9cf5693a655f6f0", "image": "docker.io/hyperledgerlabs/alpine-utils:1.0", "imageID": "docker.io/hyperledgerlabs/alpine-utils@sha256:cab1d1566ddaa28e482b5eeda7426791bdf607cee41e2b752ccc566553810f74", "lastState": {}, "name": "vault-kubernetes", "ready": false, "restartCount": 0, "started": false, "state": {"terminated": {"containerID": "containerd://70855c3443b470c3c6f9c0134c4053038ee13aa9fd0731d2a9cf5693a655f6f0", "exitCode": 0, "finishedAt": "2022-07-17T15:01:34Z", "reason": "Completed", "startedAt": "2022-07-17T15:01:32Z"}}}], "hostIP": "10.224.0.5", "phase": "Succeeded", "podIP": "10.244.0.25", "podIPs": [{"ip": "10.244.0.25"}], "qosClass": "BestEffort", "startTime": "2022-07-17T15:01:31Z"}}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:28
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job manufacturer-vaultkubenertes-job in manufacturer-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:42
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Delete vault token secret] ***********************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:91

TASK [delete/k8s_secrets : Delete vault roottoken] *****************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/delete/k8s_secrets/tasks/main.yaml:8
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s
changed: [localhost] => {"changed": true, "method": "delete", "result": {"apiVersion": "v1", "details": {"kind": "secrets", "name": "roottoken", "uid": "48b3b8ea-c2e5-4c5f-bad2-9b10956d4ae5"}, "kind": "Status", "metadata": {}, "status": "Success"}}
META: role_complete for localhost
META: role_complete for localhost

TASK [Waiting for the namespace carrier-net to be created] *********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:13

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace carrier-net is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:13
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:23
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Namespace", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "9caeb41821a229aac426fa223fc4c5e4a1457332", "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"9caeb41821a229aac426fa223fc4c5e4a1457332\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.YuKbj223uaHS-8etYgjS8tf9UifVidH7NL7LW97j_PU\"},\"name\":\"carrier-net\"}}\n"}, "creationTimestamp": "2022-07-17T14:57:25Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.YuKbj223uaHS-8etYgjS8tf9UifVidH7NL7LW97j_PU", "kubernetes.io/metadata.name": "carrier-net"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}, "f:kubernetes.io/metadata.name": {}}}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T14:57:25Z"}], "name": "carrier-net", "resourceVersion": "68576", "uid": "660c5013-2fb3-4502-8665-2638aa5ce0a4"}, "spec": {"finalizers": ["kubernetes"]}, "status": {"phase": "Active"}}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check Namespace carrier-net is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:38
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for Namespace carrier-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:51
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Create docker credentials secret] ****************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:23

TASK [create/k8s_secrets : Check if root token exists in the namespace] ********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:13
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Put root token of every organization] ***************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:25
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Checking if the docker credentials already exists] ***********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:43

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "data": {".dockerconfigjson": "eyJhdXRocyI6IHsiaW5kZXguZG9ja2VyLmlvL2h5cGVybGVkZ2VybGFicyI6IHsidXNlcm5hbWUiOiAiYWRpdHlham9zaGkxMiIsICJwYXNzd29yZCI6ICJGYXJjcnlAMjAxNCIsICJlbWFpbCI6ICJ0ZXN0QGFiYy5tYWlsIiwgImF1dGgiOiAiWVdScGRIbGhhbTl6YUdreE1qcEdZWEpqY25sQU1qQXhOQT09In19fQ=="}, "kind": "Secret", "metadata": {"creationTimestamp": "2022-07-17T15:02:01Z", "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:data": {".": {}, "f:.dockerconfigjson": {}}, "f:type": {}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2022-07-17T15:02:01Z"}], "name": "regcred", "namespace": "carrier-net", "resourceVersion": "69525", "uid": "b5f1f4db-5970-4a3d-8fa2-2a8fffb38a58"}, "type": "kubernetes.io/dockerconfigjson"}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:51
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:55
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:59
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the docker pull credentials] *****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:65
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check Ambassador cred exists] ***********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:83
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca certs already created] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:97
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca key already created] ********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:112
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the Ambassador credentials] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:127
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check Ambassador cred exists for orderers] **********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:151
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca certs already created for orderers] *****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:165
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca key already created for orderers] *******
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:180
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the Ambassador credentials for orderers] *****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:195
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if endorser certs secret exists in the namespace] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:219
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create endorser certs secret exists in the namespace] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:231
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Create vault token secret] ***********************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:33

TASK [create/k8s_secrets : Check if root token exists in the namespace] ********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:13
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": []}

TASK [create/k8s_secrets : Put root token of every organization] ***************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:25
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s
changed: [localhost] => {"changed": true, "method": "create", "result": {"apiVersion": "v1", "data": {"config.yaml": "", "token": "aHZzLnFwYjlUeVVWSWtkQnVCRE1ieUFtQ0VIeQ=="}, "kind": "Secret", "metadata": {"creationTimestamp": "2022-07-17T16:14:20Z", "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:data": {".": {}, "f:config.yaml": {}, "f:token": {}}, "f:type": {}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2022-07-17T16:14:20Z"}], "name": "roottoken", "namespace": "carrier-net", "resourceVersion": "85922", "uid": "a5a855be-826e-4c3d-be17-da9ef425e010"}, "type": "Opaque"}}

TASK [Checking if the docker credentials already exists] ***********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:43

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"apiVersion": "v1", "data": {".dockerconfigjson": "eyJhdXRocyI6IHsiaW5kZXguZG9ja2VyLmlvL2h5cGVybGVkZ2VybGFicyI6IHsidXNlcm5hbWUiOiAiYWRpdHlham9zaGkxMiIsICJwYXNzd29yZCI6ICJGYXJjcnlAMjAxNCIsICJlbWFpbCI6ICJ0ZXN0QGFiYy5tYWlsIiwgImF1dGgiOiAiWVdScGRIbGhhbTl6YUdreE1qcEdZWEpqY25sQU1qQXhOQT09In19fQ=="}, "kind": "Secret", "metadata": {"creationTimestamp": "2022-07-17T15:02:01Z", "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:data": {".": {}, "f:.dockerconfigjson": {}}, "f:type": {}}, "manager": "OpenAPI-Generator", "operation": "Update", "time": "2022-07-17T15:02:01Z"}], "name": "regcred", "namespace": "carrier-net", "resourceVersion": "69525", "uid": "b5f1f4db-5970-4a3d-8fa2-2a8fffb38a58"}, "type": "kubernetes.io/dockerconfigjson"}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:51
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:55
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : set_fact] *******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:59
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the docker pull credentials] *****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:65
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check Ambassador cred exists] ***********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:83
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca certs already created] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:97
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca key already created] ********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:112
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the Ambassador credentials] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:127
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check Ambassador cred exists for orderers] **********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:151
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca certs already created for orderers] *****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:165
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if ca key already created for orderers] *******
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:180
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create the Ambassador credentials for orderers] *****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:195
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Check if endorser certs secret exists in the namespace] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:219
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/k8s_secrets : Create endorser certs secret exists in the namespace] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/k8s_secrets/tasks/main.yaml:231
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [setup/vault_kubernetes : Get the kubernetes server url] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:44
changed: [localhost] => {"changed": true, "cmd": "KUBECONFIG=/home/bevel/build/config kubectl config view --minify | grep server | cut -f 2- -d \":\" | tr -d \" \"\n", "delta": "0:00:00.081340", "end": "2022-07-17 16:14:23.444854", "msg": "", "rc": 0, "start": "2022-07-17 16:14:23.363514", "stderr": "", "stderr_lines": [], "stdout": "https://bevel-dns-6a0e538d.hcp.centralindia.azmk8s.io:443", "stdout_lines": ["https://bevel-dns-6a0e538d.hcp.centralindia.azmk8s.io:443"]}

TASK [Create value file for vault_kubernetes] **********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:51

TASK [helm_component : Ensures /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier dir exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:14
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier", "size": 4096, "state": "directory", "uid": 0}

TASK [helm_component : create value file for carrier-vaultkubernetes-job] ******
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:23
ok: [localhost] => {"changed": false, "checksum": "cb60fe819e22de0221cf6a52f72d86eaa1dcff04", "dest": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/carrier-vaultkubernetes-job.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/carrier-vaultkubernetes-job.yaml", "size": 932, "state": "file", "uid": 0}

TASK [Helm lint] ***************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:32

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
ok: [localhost] => {"changed": false, "stat": {"atime": 1658070130.4163873, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "checksum": "cb60fe819e22de0221cf6a52f72d86eaa1dcff04", "ctime": 1658070129.9163883, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626760, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658070129.6123886, "nlink": 1, "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/carrier-vaultkubernetes-job.yaml", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 932, "uid": 0, "version": "3271988974", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [Check or create test directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:22

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"atime": 1658074423.378228, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "ctime": 1658074445.7941227, "dev": 64513, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626754, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658074445.7941227, "nlink": 2, "path": "./build/test", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "version": "4197237393", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:31
ok: [localhost] => {"ansible_facts": {"apiVersion": "helm.fluxcd.io/v1", "kind": "HelmRelease", "metadata": {"annotations": {"fluxcd.io/automated": "false"}, "name": "carrier-vaultkubenertes-job", "namespace": "carrier-net"}, "spec": {"chart": {"git": "ssh://git@github.com/adityajoshi12/bevel.git", "path": "platforms/hyperledger-fabric/charts/vault_kubernetes", "ref": "test"}, "releaseName": "carrier-vaultkubenertes-job", "values": {"k8s": {"kubernetes_url": "https://bevel-dns-6a0e538d.hcp.centralindia.azmk8s.io:443"}, "metadata": {"component_type": "peer", "images": {"alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0"}, "name": "carrier", "namespace": "carrier-net"}, "vault": {"address": "http://20.197.63.209:8200", "authpath": "devcarrier-net-auth", "imagesecretname": "regcred", "policy": "vault-crypto-peer-carrier-net-ro", "reviewer_service": "vault-reviewer", "role": "vault-role", "secret_path": "secretv2", "serviceaccountname": "vault-auth"}}}}, "ansible_included_var_files": ["/home/bevel/platforms/hyperledger-fabric/releases/dev/carrier/carrier/carrier-vaultkubernetes-job.yaml"], "changed": false}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:36
ok: [localhost] => {"changed": false, "checksum": "2bc66f911b79200988c664c16f790c78e23961db", "dest": "./build/test/carrier-vaultkubenertes-job.yaml", "gid": 0, "group": "root", "md5sum": "92642b19d184398fceca822b8b049601", "mode": "0644", "owner": "root", "size": 518, "src": "/root/.ansible/tmp/ansible-tmp-1658074466.504338-32606-193045164845900/source", "state": "file", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:42
changed: [localhost] => {"changed": true, "cmd": "helm lint -f \"./build/test/carrier-vaultkubenertes-job.yaml\" \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/vault_kubernetes\"\n", "delta": "0:00:00.098392", "end": "2022-07-17 16:14:27.687785", "msg": "", "rc": 0, "start": "2022-07-17 16:14:27.589393", "stderr": "", "stderr_lines": [], "stdout": "==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/vault_kubernetes\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, 0 chart(s) failed", "stdout_lines": ["==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/vault_kubernetes", "[INFO] Chart.yaml: icon is recommended", "", "1 chart(s) linted, 0 chart(s) failed"]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:70

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing vault_kubernetes files\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.394778", "end": "2022-07-17 16:14:31.203844", "msg": "", "rc": 0, "start": "2022-07-17 16:14:28.809066", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   b4ba6a9..f8090d6  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   b4ba6a9..f8090d6  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main f8090d6] [ci skip] Pushing vault_kubernetes files\n 1 file changed, 367 insertions(+)", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main f8090d6] [ci skip] Pushing vault_kubernetes files", " 1 file changed, 367 insertions(+)"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main f8090d6] [ci skip] Pushing vault_kubernetes files",
        " 1 file changed, 367 insertions(+)"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   b4ba6a9..f8090d6  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost

TASK [Check if vault_kubernetes job is completed] ******************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:80

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job carrier-vaultkubenertes-job in carrier-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:11
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2022-07-17T15:03:35Z", "generateName": "carrier-vaultkubenertes-job-", "labels": {"app": "carrier-vaultkubenertes-job", "app.kubernetes.io/instance": "carrier-vaultkubenertes-job", "app.kubernetes.io/managed-by": "Helm", "app.kubernetes.io/name": "carrier-vaultkubenertes-job", "controller-uid": "55d16278-f6d5-45e0-b82c-6bd643938fcd", "helm.sh/chart": "vault_kubernetes-0.2.0", "job-name": "carrier-vaultkubenertes-job"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:app": {}, "f:app.kubernetes.io/instance": {}, "f:app.kubernetes.io/managed-by": {}, "f:app.kubernetes.io/name": {}, "f:controller-uid": {}, "f:helm.sh/chart": {}, "f:job-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"55d16278-f6d5-45e0-b82c-6bd643938fcd\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {"f:containers": {"k:{\"name\":\"vault-kubernetes\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"COMPONENT_TYPE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"KUBERNETES_AUTH_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"KUBERNETES_URL\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"NAMESPACE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"POLICIES_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"POLICY_NAME\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"ROOT_TOKEN\"}": {".": {}, "f:name": {}, "f:valueFrom": {".": {}, "f:secretKeyRef": {".": {}, "f:key": {}, "f:name": {}}}}, "k:{\"name\":\"VAULT_ADDR\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ROLE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SA\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/policies/policies-config-orderer.json.tmpl\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:subPath": {}}, "k:{\"mountPath\":\"/policies/policies-config-peer.json.tmpl\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:subPath": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:imagePullSecrets": {".": {}, "k:{\"name\":\"regcred\"}": {".": {}, "f:name": {}}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"policies\"}": {".": {}, "f:emptyDir": {".": {}, "f:medium": {}}, "f:name": {}}, "k:{\"name\":\"policies-config-orderer\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:items": {}, "f:name": {}}, "f:name": {}}, "k:{\"name\":\"policies-config-peer\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:items": {}, "f:name": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T15:03:35Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.26\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "time": "2022-07-17T15:03:38Z"}], "name": "carrier-vaultkubenertes-job-n88k7", "namespace": "carrier-net", "ownerReferences": [{"apiVersion": "batch/v1", "blockOwnerDeletion": true, "controller": true, "kind": "Job", "name": "carrier-vaultkubenertes-job", "uid": "55d16278-f6d5-45e0-b82c-6bd643938fcd"}], "resourceVersion": "69864", "uid": "42020edc-9554-4a33-a4a1-e727ed625f67"}, "spec": {"containers": [{"args": ["apk update && apk add jq curl;\n\nvalidateVaultResponse () {\n  if [ ${1} != 200 -a ${1} != 204 ]; then\n    echo \"ERROR: Unable to retrieve. Http status: ${1}\"\n    exit 1\n  fi\n};\n\n# Check if authpath already created\nvault_auth_check=$(curl --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  ${VAULT_ADDR}/v1/sys/auth | jq '.\"devcarrier-net-auth/\"');\n\nif [ \"$vault_auth_check\" == 'null' ]; then\n  echo \"authpath does not exist. Creating ...\"\n  # This command enables the path for the organizations and orderers on vault\n  curl \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  --request POST \\\n  --data '{\"type\": \"kubernetes\"}' \\\n  ${VAULT_ADDR}/v1/sys/auth/${KUBERNETES_AUTH_PATH}\n\n  while IFS= read -r line\n  do\n    echo \"$line\\n\"\n  done < /var/run/secrets/kubernetes.io/serviceaccount/ca.crt > ca_formatted.txt\n\n  KUBE_SA_CRT_ONELINE=$(cat ca_formatted.txt)\n  export REVIEWER_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token);\n\n  # This echo get the certificate for the cluster\n  echo \"\n    {\n      \\\"token_reviewer_jwt\\\": \\\"${REVIEWER_TOKEN}\\\",\n      \\\"kubernetes_host\\\": \\\"${KUBERNETES_URL}\\\",\n      \\\"disable_iss_validation\\\":\\\"true\\\",\n      \\\"kubernetes_ca_cert\\\": \\\"${KUBE_SA_CRT_ONELINE}\\\"\n    }\" > payload.json\n\n  # This command writtes the Service Account token to the vault for Organisations\n  curl \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  --request POST \\\n  --data @payload.json \\\n  ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/config\n\n  # Check auth\n  response_status=$(curl -s -o /dev/null -w \"%{http_code}\" \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/config);\n\n  rm payload.json\n\n  validateVaultResponse ${response_status};\nfi;\n\n# Check if policy already created\nvault_policy_check=$(curl --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  ${VAULT_ADDR}/v1/sys/policy/${POLICY_NAME} | jq -r '.name');\n\nif [ \"$vault_policy_check\" == 'null' ]; then\n  echo \"vaultpolicy does not exist. Creating ...\"\n  mkdir -p ${POLICIES_PATH}\n\n  if [ $COMPONENT_TYPE == 'orderer' ]; then\n    \n    # This command writes the policies to the vault\n    curl \\\n    --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n    --request POST \\\n    --data @${POLICIES_PATH}/policies-config-orderer.json.tmpl \\\n    ${VAULT_ADDR}/v1/sys/policy/${POLICY_NAME}\n\n  fi;\n\n  if [ $COMPONENT_TYPE == 'peer' ]; then\n\n    # This command writes the policies to the vault\n    curl \\\n    --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n    --request POST \\\n    --data @${POLICIES_PATH}/policies-config-peer.json.tmpl \\\n    ${VAULT_ADDR}/v1/sys/policy/${POLICY_NAME}\n\n  fi;\n\n  # Check policy\n  response_status=$(curl -s -o /dev/null -w \"%{http_code}\" \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  ${VAULT_ADDR}/v1/sys/policy/${POLICY_NAME});\n\n  validateVaultResponse ${response_status};\nfi;\n\nif [ \"$vault_auth_check\" == 'null' ]; then\n  echo \"Need vault auth role\"\n\n  echo \" {\\\"bound_service_account_names\\\": \\\"${VAULT_SA}\\\", \\\n  \\\"bound_service_account_namespaces\\\": \\\"${NAMESPACE}\\\", \\\n  \\\"policies\\\": [\\\"${POLICY_NAME}\\\"], \\\"ttl\\\": \\\"1200s\\\"}\" > payload.json\n\n  curl \\\n  -s -o /dev/null -w \"%{http_code}\" \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  --request POST \\\n  --data @payload.json \\\n  ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/role/${VAULT_ROLE}\n\n  # Check role\n  response_status=$(curl -s -o /dev/null -w \"%{http_code}\" \\\n  --header \"X-Vault-Token: $ROOT_TOKEN\" \\\n  ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/role/${VAULT_ROLE});\n\n  rm payload.json\n\n  validateVaultResponse ${response_status};\nfi;"], "command": ["sh", "-c"], "env": [{"name": "VAULT_ADDR", "value": "http://20.197.63.209:8200"}, {"name": "VAULT_SECRET_PATH", "value": "secretv2"}, {"name": "KUBERNETES_AUTH_PATH", "value": "devcarrier-net-auth"}, {"name": "VAULT_ROLE", "value": "vault-role"}, {"name": "VAULT_SA", "value": "vault-auth"}, {"name": "KUBERNETES_URL", "value": "https://bevel-dns-6a0e538d.hcp.centralindia.azmk8s.io:443"}, {"name": "POLICY_NAME", "value": "vault-crypto-peer-carrier-net-ro"}, {"name": "COMPONENT_TYPE", "value": "peer"}, {"name": "NAMESPACE", "value": "carrier-net"}, {"name": "POLICIES_PATH", "value": "/policies"}, {"name": "ROOT_TOKEN", "valueFrom": {"secretKeyRef": {"key": "token", "name": "roottoken"}}}], "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "imagePullPolicy": "IfNotPresent", "name": "vault-kubernetes", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/policies/policies-config-orderer.json.tmpl", "name": "policies-config-orderer", "subPath": "policies-config-orderer.json.tmpl"}, {"mountPath": "/policies/policies-config-peer.json.tmpl", "name": "policies-config-peer", "subPath": "policies-config-peer.json.tmpl"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-2lj4m", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "imagePullSecrets": [{"name": "regcred"}], "nodeName": "aks-agentpool-84293659-vmss000001", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "OnFailure", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "vault-reviewer", "serviceAccountName": "vault-reviewer", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"emptyDir": {"medium": "Memory"}, "name": "policies"}, {"configMap": {"defaultMode": 420, "items": [{"key": "policies-config-orderer.json.tmpl", "path": "policies-config-orderer.json.tmpl"}], "name": "policies-config-peer"}, "name": "policies-config-orderer"}, {"configMap": {"defaultMode": 420, "items": [{"key": "policies-config-peer.json.tmpl", "path": "policies-config-peer.json.tmpl"}], "name": "policies-config-peer"}, "name": "policies-config-peer"}, {"name": "kube-api-access-2lj4m", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:03:35Z", "reason": "PodCompleted", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:03:38Z", "reason": "PodCompleted", "status": "False", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:03:38Z", "reason": "PodCompleted", "status": "False", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:03:35Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://c186262b589dd0c4386d487ac8e2439fa3f48ca1aad5c8aee5f1d29767415aeb", "image": "docker.io/hyperledgerlabs/alpine-utils:1.0", "imageID": "docker.io/hyperledgerlabs/alpine-utils@sha256:cab1d1566ddaa28e482b5eeda7426791bdf607cee41e2b752ccc566553810f74", "lastState": {}, "name": "vault-kubernetes", "ready": false, "restartCount": 0, "started": false, "state": {"terminated": {"containerID": "containerd://c186262b589dd0c4386d487ac8e2439fa3f48ca1aad5c8aee5f1d29767415aeb", "exitCode": 0, "finishedAt": "2022-07-17T15:03:37Z", "reason": "Completed", "startedAt": "2022-07-17T15:03:36Z"}}}], "hostIP": "10.224.0.5", "phase": "Succeeded", "podIP": "10.244.0.26", "podIPs": [{"ip": "10.244.0.26"}], "qosClass": "BestEffort", "startTime": "2022-07-17T15:03:35Z"}}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:28
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job carrier-vaultkubenertes-job in carrier-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:42
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Delete vault token secret] ***********************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/setup/vault_kubernetes/tasks/main.yaml:91

TASK [delete/k8s_secrets : Delete vault roottoken] *****************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/delete/k8s_secrets/tasks/main.yaml:8
redirecting (type: modules) ansible.builtin.k8s to kubernetes.core.k8s
changed: [localhost] => {"changed": true, "method": "delete", "result": {"apiVersion": "v1", "details": {"kind": "secrets", "name": "roottoken", "uid": "a5a855be-826e-4c3d-be17-da9ef425e010"}, "kind": "Status", "metadata": {}, "status": "Success"}}
META: role_complete for localhost
META: role_complete for localhost

TASK [Create storageclass for each organization] *******************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:52

TASK [Checking if the storage class supplychainsc already exists] **************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:12
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check StorageClass supplychainsc is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:13
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"allowVolumeExpansion": true, "apiVersion": "storage.k8s.io/v1", "kind": "StorageClass", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "561507a628b179ebd66840d514405746bcfc2f0c", "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"561507a628b179ebd66840d514405746bcfc2f0c\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.QBSPGCX3U6nghOWonfbCSN9mLiieFPqfE98zfVtobik\"},\"name\":\"supplychainsc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"}, "creationTimestamp": "2022-07-17T15:05:35Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.QBSPGCX3U6nghOWonfbCSN9mLiieFPqfE98zfVtobik"}, "managedFields": [{"apiVersion": "storage.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:allowVolumeExpansion": {}, "f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}}}, "f:parameters": {".": {}, "f:kind": {}, "f:storageaccounttype": {}}, "f:provisioner": {}, "f:reclaimPolicy": {}, "f:volumeBindingMode": {}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T15:05:35Z"}], "name": "supplychainsc", "resourceVersion": "70242", "uid": "b7c804bc-8085-46d5-9836-e6206a60e6c4"}, "parameters": {"kind": "Managed", "storageaccounttype": "Premium_LRS"}, "provisioner": "kubernetes.io/azure-disk", "reclaimPolicy": "Retain", "volumeBindingMode": "Immediate"}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass supplychainsc] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:23
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check StorageClass supplychainsc is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:38
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass supplychainsc] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:51
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create/storageclass : Set Variable] **************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:20
ok: [localhost] => {"ansible_facts": {"get_sc": {"api_found": true, "changed": false, "failed": false, "resources": [{"allowVolumeExpansion": true, "apiVersion": "storage.k8s.io/v1", "kind": "StorageClass", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "561507a628b179ebd66840d514405746bcfc2f0c", "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"561507a628b179ebd66840d514405746bcfc2f0c\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.QBSPGCX3U6nghOWonfbCSN9mLiieFPqfE98zfVtobik\"},\"name\":\"supplychainsc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"}, "creationTimestamp": "2022-07-17T15:05:35Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.QBSPGCX3U6nghOWonfbCSN9mLiieFPqfE98zfVtobik"}, "managedFields": [{"apiVersion": "storage.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:allowVolumeExpansion": {}, "f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}}}, "f:parameters": {".": {}, "f:kind": {}, "f:storageaccounttype": {}}, "f:provisioner": {}, "f:reclaimPolicy": {}, "f:volumeBindingMode": {}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T15:05:35Z"}], "name": "supplychainsc", "resourceVersion": "70242", "uid": "b7c804bc-8085-46d5-9836-e6206a60e6c4"}, "parameters": {"kind": "Managed", "storageaccounttype": "Premium_LRS"}, "provisioner": "kubernetes.io/azure-disk", "reclaimPolicy": "Retain", "volumeBindingMode": "Immediate"}]}}, "changed": false}

TASK [creating /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/orderer directory] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:25
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/storageclass : Create Storage Class value file for orderers] ******
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:35
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/storageclass : Create Storage Class value file for Organizations] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:57
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Waiting for the creation of supplychainsc storage class] *****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:70
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Checking if the storage class manufacturersc already exists] *************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:12

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check StorageClass manufacturersc is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:13
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"allowVolumeExpansion": true, "apiVersion": "storage.k8s.io/v1", "kind": "StorageClass", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "afc6da04e7f0a6385b2e788e77f35dbf4350469f", "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"afc6da04e7f0a6385b2e788e77f35dbf4350469f\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.9CmEP41dik860yhy6B0RfhuKfQ-S5Nbx21_0pTtVdJA\"},\"name\":\"manufacturersc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"}, "creationTimestamp": "2022-07-17T15:07:37Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.9CmEP41dik860yhy6B0RfhuKfQ-S5Nbx21_0pTtVdJA"}, "managedFields": [{"apiVersion": "storage.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:allowVolumeExpansion": {}, "f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}}}, "f:parameters": {".": {}, "f:kind": {}, "f:storageaccounttype": {}}, "f:provisioner": {}, "f:reclaimPolicy": {}, "f:volumeBindingMode": {}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T15:07:37Z"}], "name": "manufacturersc", "resourceVersion": "70638", "uid": "5067a520-6c8e-4935-9457-c748198126c8"}, "parameters": {"kind": "Managed", "storageaccounttype": "Premium_LRS"}, "provisioner": "kubernetes.io/azure-disk", "reclaimPolicy": "Retain", "volumeBindingMode": "Immediate"}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass manufacturersc] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:23
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check StorageClass manufacturersc is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:38
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass manufacturersc] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:51
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create/storageclass : Set Variable] **************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:20
ok: [localhost] => {"ansible_facts": {"get_sc": {"api_found": true, "changed": false, "failed": false, "resources": [{"allowVolumeExpansion": true, "apiVersion": "storage.k8s.io/v1", "kind": "StorageClass", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "afc6da04e7f0a6385b2e788e77f35dbf4350469f", "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"afc6da04e7f0a6385b2e788e77f35dbf4350469f\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.9CmEP41dik860yhy6B0RfhuKfQ-S5Nbx21_0pTtVdJA\"},\"name\":\"manufacturersc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"}, "creationTimestamp": "2022-07-17T15:07:37Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.9CmEP41dik860yhy6B0RfhuKfQ-S5Nbx21_0pTtVdJA"}, "managedFields": [{"apiVersion": "storage.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:allowVolumeExpansion": {}, "f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}}}, "f:parameters": {".": {}, "f:kind": {}, "f:storageaccounttype": {}}, "f:provisioner": {}, "f:reclaimPolicy": {}, "f:volumeBindingMode": {}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T15:07:37Z"}], "name": "manufacturersc", "resourceVersion": "70638", "uid": "5067a520-6c8e-4935-9457-c748198126c8"}, "parameters": {"kind": "Managed", "storageaccounttype": "Premium_LRS"}, "provisioner": "kubernetes.io/azure-disk", "reclaimPolicy": "Retain", "volumeBindingMode": "Immediate"}]}}, "changed": false}

TASK [creating /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/peer directory] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:25
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/storageclass : Create Storage Class value file for orderers] ******
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:35
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/storageclass : Create Storage Class value file for Organizations] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:57
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Waiting for the creation of manufacturersc storage class] ****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:70
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Checking if the storage class carriersc already exists] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:12

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check StorageClass carriersc is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:13
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "changed": false, "resources": [{"allowVolumeExpansion": true, "apiVersion": "storage.k8s.io/v1", "kind": "StorageClass", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "794d065b5dabd85e24641673f6b88ac32779a6a1", "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"794d065b5dabd85e24641673f6b88ac32779a6a1\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.fV8B57mPi0k_997myyZsIGfq8d5BqQZlSKNsfCT2yRI\"},\"name\":\"carriersc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"}, "creationTimestamp": "2022-07-17T15:09:40Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.fV8B57mPi0k_997myyZsIGfq8d5BqQZlSKNsfCT2yRI"}, "managedFields": [{"apiVersion": "storage.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:allowVolumeExpansion": {}, "f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}}}, "f:parameters": {".": {}, "f:kind": {}, "f:storageaccounttype": {}}, "f:provisioner": {}, "f:reclaimPolicy": {}, "f:volumeBindingMode": {}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T15:09:40Z"}], "name": "carriersc", "resourceVersion": "71035", "uid": "4447dcae-1ab6-4a88-870e-f97a67516a52"}, "parameters": {"kind": "Managed", "storageaccounttype": "Premium_LRS"}, "provisioner": "kubernetes.io/azure-disk", "reclaimPolicy": "Retain", "volumeBindingMode": "Immediate"}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass carriersc] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:23
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Check StorageClass carriersc is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:38
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass carriersc] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:51
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create/storageclass : Set Variable] **************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:20
ok: [localhost] => {"ansible_facts": {"get_sc": {"api_found": true, "changed": false, "failed": false, "resources": [{"allowVolumeExpansion": true, "apiVersion": "storage.k8s.io/v1", "kind": "StorageClass", "metadata": {"annotations": {"fluxcd.io/sync-checksum": "794d065b5dabd85e24641673f6b88ac32779a6a1", "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"fluxcd.io/sync-checksum\":\"794d065b5dabd85e24641673f6b88ac32779a6a1\"},\"labels\":{\"fluxcd.io/sync-gc-mark\":\"sha256.fV8B57mPi0k_997myyZsIGfq8d5BqQZlSKNsfCT2yRI\"},\"name\":\"carriersc\"},\"parameters\":{\"kind\":\"Managed\",\"storageaccounttype\":\"Premium_LRS\"},\"provisioner\":\"kubernetes.io/azure-disk\",\"reclaimPolicy\":\"Retain\"}\n"}, "creationTimestamp": "2022-07-17T15:09:40Z", "labels": {"fluxcd.io/sync-gc-mark": "sha256.fV8B57mPi0k_997myyZsIGfq8d5BqQZlSKNsfCT2yRI"}, "managedFields": [{"apiVersion": "storage.k8s.io/v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:allowVolumeExpansion": {}, "f:metadata": {"f:annotations": {".": {}, "f:fluxcd.io/sync-checksum": {}, "f:kubectl.kubernetes.io/last-applied-configuration": {}}, "f:labels": {".": {}, "f:fluxcd.io/sync-gc-mark": {}}}, "f:parameters": {".": {}, "f:kind": {}, "f:storageaccounttype": {}}, "f:provisioner": {}, "f:reclaimPolicy": {}, "f:volumeBindingMode": {}}, "manager": "kubectl", "operation": "Update", "time": "2022-07-17T15:09:40Z"}], "name": "carriersc", "resourceVersion": "71035", "uid": "4447dcae-1ab6-4a88-870e-f97a67516a52"}, "parameters": {"kind": "Managed", "storageaccounttype": "Premium_LRS"}, "provisioner": "kubernetes.io/azure-disk", "reclaimPolicy": "Retain", "volumeBindingMode": "Immediate"}]}}, "changed": false}

TASK [creating /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/peer directory] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:25
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/storageclass : Create Storage Class value file for orderers] ******
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:35
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/storageclass : Create Storage Class value file for Organizations] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:57
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Waiting for the creation of carriersc storage class] *********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/storageclass/tasks/main.yaml:70
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Create CA server for each organization] **********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:63

TASK [creating the directory ./build/crypto-config/ordererOrganizations/supplychain-net/ca] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:14
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"exists": false}}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
changed: [localhost] => {"changed": true, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "./build/crypto-config/ordererOrganizations/supplychain-net/ca", "size": 4096, "state": "directory", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Create value file for cacerts job] ***************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:23

TASK [helm_component : Ensures /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/supplychain dir exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:14
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/supplychain", "size": 4096, "state": "directory", "uid": 0}

TASK [helm_component : create value file for supplychain-cacerts-job] **********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:23
ok: [localhost] => {"changed": false, "checksum": "1bd283c692c0a170a21dcf4bda945bf267ac2b6c", "dest": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/supplychain/supplychain-cacerts-job.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/supplychain/supplychain-cacerts-job.yaml", "size": 1057, "state": "file", "uid": 0}

TASK [Helm lint] ***************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:32

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
ok: [localhost] => {"changed": false, "stat": {"atime": 1658070605.735451, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "checksum": "1bd283c692c0a170a21dcf4bda945bf267ac2b6c", "ctime": 1658070605.203452, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626914, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658070604.9114528, "nlink": 1, "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/supplychain/supplychain-cacerts-job.yaml", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 1057, "uid": 0, "version": "1295315643", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [Check or create test directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:22

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"atime": 1658074423.378228, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "ctime": 1658074467.134023, "dev": 64513, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626754, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658074467.134023, "nlink": 2, "path": "./build/test", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "version": "4197237393", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:31
ok: [localhost] => {"ansible_facts": {"apiVersion": "helm.fluxcd.io/v1", "kind": "HelmRelease", "metadata": {"annotations": {"fluxcd.io/automated": "false"}, "name": "supplychain-cacerts-job", "namespace": "supplychain-net"}, "spec": {"chart": {"git": "ssh://git@github.com/adityajoshi12/bevel.git", "path": "platforms/hyperledger-fabric/charts/generate_cacerts", "ref": "test"}, "releaseName": "supplychain-cacerts-job", "values": {"ca": {"subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net"}, "metadata": {"component_name": "supplychain-net", "images": {"alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "fabrictools": "hyperledger/fabric-tools:2.2.2"}, "name": "supplychain", "namespace": "supplychain-net"}, "vault": {"address": "http://20.197.63.209:8200", "authpath": "devsupplychain-net-auth", "imagesecretname": "regcred", "role": "vault-role", "secretcredentialsprefix": "secretv2/data/credentials/supplychain-net/ca/supplychain", "secretcryptoprefix": "secretv2/data/crypto/ordererOrganizations/supplychain-net/ca", "serviceaccountname": "vault-auth"}}}}, "ansible_included_var_files": ["/home/bevel/platforms/hyperledger-fabric/releases/dev/supplychain/supplychain/supplychain-cacerts-job.yaml"], "changed": false}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:36
ok: [localhost] => {"changed": false, "checksum": "6461e1247d7da68ad3eb50b5ef117525da3b09cf", "dest": "./build/test/supplychain-cacerts-job.yaml", "gid": 0, "group": "root", "md5sum": "f33e7be80849549872184605ef816119", "mode": "0644", "owner": "root", "size": 647, "src": "/root/.ansible/tmp/ansible-tmp-1658074489.1452458-33162-44530177719041/source", "state": "file", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:42
changed: [localhost] => {"changed": true, "cmd": "helm lint -f \"./build/test/supplychain-cacerts-job.yaml\" \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/generate_cacerts\"\n", "delta": "0:00:00.117913", "end": "2022-07-17 16:14:50.342065", "msg": "", "rc": 0, "start": "2022-07-17 16:14:50.224152", "stderr": "", "stderr_lines": [], "stdout": "==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/generate_cacerts\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, 0 chart(s) failed", "stdout_lines": ["==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/generate_cacerts", "[INFO] Chart.yaml: icon is recommended", "", "1 chart(s) linted, 0 chart(s) failed"]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:41

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.487323", "end": "2022-07-17 16:14:53.884152", "msg": "", "rc": 0, "start": "2022-07-17 16:14:51.396829", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   f8090d6..82902bc  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   f8090d6..82902bc  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main 82902bc] [ci skip] Pushing CA server files\n 1 file changed, 320 insertions(+)", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main 82902bc] [ci skip] Pushing CA server files", " 1 file changed, 320 insertions(+)"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main 82902bc] [ci skip] Pushing CA server files",
        " 1 file changed, 320 insertions(+)"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   f8090d6..82902bc  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost

TASK [Check if cacerts-job job is completed] ***********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:53
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job supplychain-cacerts-job in supplychain-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:11
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2022-07-17T15:11:43Z", "generateName": "supplychain-cacerts-job-", "labels": {"app": "supplychain-cacerts-job", "app.kubernetes.io/instance": "supplychain-cacerts-job", "app.kubernetes.io/managed-by": "Helm", "app.kubernetes.io/name": "supplychain-cacerts-job", "controller-uid": "75a55acd-657d-4302-9399-7db612a4a2aa", "helm.sh/chart": "generate_cacerts-0.2.0", "job-name": "supplychain-cacerts-job"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:app": {}, "f:app.kubernetes.io/instance": {}, "f:app.kubernetes.io/managed-by": {}, "f:app.kubernetes.io/name": {}, "f:controller-uid": {}, "f:helm.sh/chart": {}, "f:job-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"75a55acd-657d-4302-9399-7db612a4a2aa\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {"f:containers": {"k:{\"name\":\"cacerts\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"CA_SUBJECT\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"COMPONENT_NAME\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"KUBERNETES_AUTH_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"NAME\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ADDR\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_APP_ROLE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_CREDENTIALS_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_CRYPTO_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/certcheck\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:imagePullSecrets": {".": {}, "k:{\"name\":\"regcred\"}": {".": {}, "f:name": {}}}, "f:initContainers": {".": {}, "k:{\"name\":\"init-check-certificates\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"KUBERNETES_AUTH_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"MOUNT_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ADDR\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_APP_ROLE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_CREDENTIALS_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_CRYPTO_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/certcheck\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"certcheck\"}": {".": {}, "f:emptyDir": {".": {}, "f:medium": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T15:11:43Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:initContainerStatuses": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.27\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "time": "2022-07-17T15:11:48Z"}], "name": "supplychain-cacerts-job-sk4cz", "namespace": "supplychain-net", "ownerReferences": [{"apiVersion": "batch/v1", "blockOwnerDeletion": true, "controller": true, "kind": "Job", "name": "supplychain-cacerts-job", "uid": "75a55acd-657d-4302-9399-7db612a4a2aa"}], "resourceVersion": "71470", "uid": "4ae045f2-e913-4b6e-8c0b-9fd666a19dea"}, "spec": {"containers": [{"args": ["apk update && apk add jq curl openssl;\n\nvalidateVaultResponse () {\n  if echo ${2} | grep \"errors\"; then\n    echo \"ERROR: unable to retrieve ${1}: ${2}\"\n    exit 1\n  fi\n  if  [ \"$3\" == \"LOOKUPSECRETRESPONSE\" ]\n  then\n    http_code=$(curl -sS -o /dev/null -w \"%{http_code}\" \\\n    --header \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${1})\n    curl_response=$?\n    if test \"$http_code\" != \"200\" ; then\n        echo \"Http response code from Vault - $http_code and curl_response - $curl_response\"\n        if test \"$curl_response\" != \"0\"; then\n          echo \"Error: curl command failed with error code - $curl_response\"\n          exit 1\n        fi\n    fi\n  fi\n}\n\nif [ -e /certcheck/absent_cacert.txt ]\nthen\n\n  # Create openssl.conf file\n  echo \"[req]\nreq_extensions = v3_req\ndistinguished_name = dn\n\n[dn]\n\n[v3_req]\nbasicConstraints = critical, CA:TRUE\nkeyUsage = critical,digitalSignature, keyEncipherment, keyCertSign, cRLSign\nsubjectKeyIdentifier = hash\n\" > openssl.conf\n\n  # this commands generate the CA certificate\n  openssl ecparam -name prime256v1 -genkey -noout -out  ${COMPONENT_NAME}-CA.key\n  openssl req -x509 -config \"openssl.conf\" -new -nodes -key ${COMPONENT_NAME}-CA.key -days 1024 -out ca.${COMPONENT_NAME}-cert.pem -extensions v3_req -subj \"${CA_SUBJECT}\"\n\n  # This commands put the certificates with correct format for the curl command\n  while IFS= read -r line\n  do\n    echo \"$line\\n\"\n  done < ${COMPONENT_NAME}-CA.key > ./cakey_formatted.txt\n\n  while IFS= read -r line\n  do\n    echo \"$line\\n\"\n  done < ca.${COMPONENT_NAME}-cert.pem > ./capem_formatted.txt\n\n  PEM_CERTIFICATE=$(cat capem_formatted.txt)\n  KEY_CERTIFICATE=$(cat cakey_formatted.txt)\n  \n  echo \"\n    {\n      \\\"data\\\": \n        {\n          \\\"ca.${COMPONENT_NAME}-cert.pem\\\": \\\"${PEM_CERTIFICATE}\\\",\n          \\\"${COMPONENT_NAME}-CA.key\\\": \\\"${KEY_CERTIFICATE}\\\"\n        }  \n    }\" > payload.json\n\n  echo \"Putting secrets/certificates to Vault server\"\n  KUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\n  VAULT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login -H \"Content-Type: application/json\" -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | jq -r 'if .errors then . else .auth.client_token end')\n  validateVaultResponse 'vault login token' \"${VAULT_TOKEN}\"\n\n  # This command copy the CA certificates to the Vault\n  curl \\\n    -H \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n    -H \"Content-Type: application/json\" \\\n    -X POST \\\n    -d @payload.json \\\n    ${VAULT_ADDR}/v1/${VAULT_SECRET_CRYPTO_PATH}\n\n  # Check CA certificates\n  response_status=$(curl -s -o /dev/null -w \"%{http_code}\" \\\n  --header \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n  ${VAULT_ADDR}/v1/${VAULT_SECRET_CRYPTO_PATH});\n\n  validateVaultResponse 'certs creation' ${response_status};\n\n  rm payload.json\n\nfi\n\nif [ -e /certcheck/absent_creds.txt ]\nthen\n\n  # This task write the CA server admin credentials to Vault\n    curl \\\n      -H \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n      -H \"Content-Type: application/json\" \\\n      -X POST \\\n      -d '{ \"data\": {\"user\":\"'\"$NAME-adminpw\"'\"}}' \\\n      ${VAULT_ADDR}/v1/${VAULT_SECRET_CREDENTIALS_PATH}\n\n    # Check CA server admin credentials\n    response_status=$(curl -s -o /dev/null -w \"%{http_code}\" \\\n    --header \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${VAULT_SECRET_CREDENTIALS_PATH});\n\n    validateVaultResponse 'creds creation' ${response_status};\nfi"], "command": ["sh", "-c"], "env": [{"name": "VAULT_ADDR", "value": "http://20.197.63.209:8200"}, {"name": "VAULT_APP_ROLE", "value": "vault-role"}, {"name": "KUBERNETES_AUTH_PATH", "value": "devsupplychain-net-auth"}, {"name": "VAULT_SECRET_CRYPTO_PATH", "value": "secretv2/data/crypto/ordererOrganizations/supplychain-net/ca"}, {"name": "VAULT_SECRET_CREDENTIALS_PATH", "value": "secretv2/data/credentials/supplychain-net/ca/supplychain"}, {"name": "COMPONENT_NAME", "value": "supplychain-net"}, {"name": "NAME", "value": "supplychain"}, {"name": "CA_SUBJECT", "value": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net"}], "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "imagePullPolicy": "IfNotPresent", "name": "cacerts", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/certcheck", "name": "certcheck"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-vpxkz", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "imagePullSecrets": [{"name": "regcred"}], "initContainers": [{"args": ["#!/usr/bin/env sh\nvalidateVaultResponse () {\n  if echo ${2} | grep \"errors\"; then\n    echo \"ERROR: unable to retrieve ${1}: ${2}\"\n    exit 1\n  fi\n  if  [ \"$3\" == \"LOOKUPSECRETRESPONSE\" ]\n  then\n    http_code=$(curl -sS -o /dev/null -w \"%{http_code}\" \\\n    --header \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${1})\n    curl_response=$?\n    if test \"$http_code\" != \"200\" ; then\n        echo \"Http response code from Vault - $http_code and curl_response - $curl_response\"\n        if test \"$curl_response\" != \"0\"; then\n          echo \"Error: curl command failed with error code - $curl_response\"\n          exit 1\n        fi\n    fi\n  fi\n}\n\n# Setting up the environment to get secrets/certificates from Vault\necho \"Getting secrets/certificates from Vault server\"\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\nVAULT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login -H \"Content-Type: application/json\" -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | jq -r 'if .errors then . else .auth.client_token end')\nvalidateVaultResponse 'vault login token' \"${VAULT_TOKEN}\"\necho \"Logged into Vault\"\n\nmkdir -p ${MOUNT_PATH}\n\n# Check if certificates already present in the vault\nLOOKUP_SECRET_RESPONSE=$(curl --header \"X-Vault-Token: ${VAULT_TOKEN}\" ${VAULT_ADDR}/v1/${VAULT_SECRET_CRYPTO_PATH} | jq -r 'if .errors then . else . end')\nif echo ${LOOKUP_SECRET_RESPONSE} | grep \"errors\"\nthen\n  echo \"Certficates absent in vault. Ignore error warning\"\n  touch ${MOUNT_PATH}/absent_cacert.txt\nelif echo ${LOOKUP_SECRET_RESPONSE} | grep \"\\\"data\\\": null\"\nthen\n  echo \"Certficates absent in vault2. Ignore error warning\"\n  touch ${MOUNT_PATH}/absent_cacert.txt\nelse\n  validateVaultResponse \"${VAULT_SECRET_CRYPTO_PATH}\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\n  echo \"Certificates present in vault\"\n  touch ${MOUNT_PATH}/present_cacert.txt\nfi\n\n# Check if CA server admin credentials already present in the vault\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_TOKEN}\" ${VAULT_ADDR}/v1/${VAULT_SECRET_CREDENTIALS_PATH} | jq -r 'if .errors then . else . end')\nif echo ${LOOKUP_SECRET_RESPONSE} | grep \"errors\"\nthen\n  echo \"Certficates absent in vault. Ignore error warning\"\n  touch ${MOUNT_PATH}/absent_creds.txt\nelif echo ${LOOKUP_SECRET_RESPONSE} | grep \"\\\"data\\\": null\"\nthen\n  echo \"Certficates absent in vault2. Ignore error warning\"\n  touch ${MOUNT_PATH}/absent_creds.txt\nelse\n  validateVaultResponse \"${VAULT_SECRET_CREDENTIALS_PATH}\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\n  echo \"Certificates present in vault\"\n  touch ${MOUNT_PATH}/present_creds.txt\nfi \n\necho \"Done checking for certificates in vault\""], "command": ["sh", "-c"], "env": [{"name": "VAULT_ADDR", "value": "http://20.197.63.209:8200"}, {"name": "VAULT_APP_ROLE", "value": "vault-role"}, {"name": "KUBERNETES_AUTH_PATH", "value": "devsupplychain-net-auth"}, {"name": "VAULT_SECRET_CRYPTO_PATH", "value": "secretv2/data/crypto/ordererOrganizations/supplychain-net/ca"}, {"name": "VAULT_SECRET_CREDENTIALS_PATH", "value": "secretv2/data/credentials/supplychain-net/ca/supplychain"}, {"name": "MOUNT_PATH", "value": "/certcheck"}], "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "imagePullPolicy": "IfNotPresent", "name": "init-check-certificates", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/certcheck", "name": "certcheck"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-vpxkz", "readOnly": true}]}], "nodeName": "aks-agentpool-84293659-vmss000001", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "OnFailure", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "vault-auth", "serviceAccountName": "vault-auth", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"emptyDir": {"medium": "Memory"}, "name": "certcheck"}, {"name": "kube-api-access-vpxkz", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:11:45Z", "reason": "PodCompleted", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:11:48Z", "reason": "PodCompleted", "status": "False", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:11:48Z", "reason": "PodCompleted", "status": "False", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:11:43Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://e7632a0476c38d91237fd4ac1aa078ef4ff40ee35b523da2694f18e61c97edee", "image": "docker.io/hyperledgerlabs/alpine-utils:1.0", "imageID": "docker.io/hyperledgerlabs/alpine-utils@sha256:cab1d1566ddaa28e482b5eeda7426791bdf607cee41e2b752ccc566553810f74", "lastState": {}, "name": "cacerts", "ready": false, "restartCount": 0, "started": false, "state": {"terminated": {"containerID": "containerd://e7632a0476c38d91237fd4ac1aa078ef4ff40ee35b523da2694f18e61c97edee", "exitCode": 0, "finishedAt": "2022-07-17T15:11:48Z", "reason": "Completed", "startedAt": "2022-07-17T15:11:45Z"}}}], "hostIP": "10.224.0.5", "initContainerStatuses": [{"containerID": "containerd://4acee2794b99c9498433fb8efd55a5829df6574f4e371bbcc40b71ee1f072d5e", "image": "docker.io/hyperledgerlabs/alpine-utils:1.0", "imageID": "docker.io/hyperledgerlabs/alpine-utils@sha256:cab1d1566ddaa28e482b5eeda7426791bdf607cee41e2b752ccc566553810f74", "lastState": {}, "name": "init-check-certificates", "ready": true, "restartCount": 0, "state": {"terminated": {"containerID": "containerd://4acee2794b99c9498433fb8efd55a5829df6574f4e371bbcc40b71ee1f072d5e", "exitCode": 0, "finishedAt": "2022-07-17T15:11:45Z", "reason": "Completed", "startedAt": "2022-07-17T15:11:45Z"}}}], "phase": "Succeeded", "podIP": "10.244.0.27", "podIPs": [{"ip": "10.244.0.27"}], "qosClass": "BestEffort", "startTime": "2022-07-17T15:11:43Z"}}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:28
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job supplychain-cacerts-job in supplychain-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:42
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create/ca-server : Copy custom config for fabric-ca server] **************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:65
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create the Ambassador credentials] ***************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:72
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create CA server values for Orderer] *************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:85

TASK [helm_component : Ensures /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/ca dir exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:14
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/ca", "size": 4096, "state": "directory", "uid": 0}

TASK [helm_component : create value file for supplychain-net] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:23
ok: [localhost] => {"changed": false, "checksum": "10cd6110b7d76bbfafc829349b4a0570e75bc1e3", "dest": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/ca/supplychain-net.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/ca/supplychain-net.yaml", "size": 1421, "state": "file", "uid": 0}

TASK [Helm lint] ***************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:32

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
ok: [localhost] => {"changed": false, "stat": {"atime": 1658070740.3031495, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "checksum": "10cd6110b7d76bbfafc829349b4a0570e75bc1e3", "ctime": 1658070739.7551506, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626933, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658070739.4631512, "nlink": 1, "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/ca/supplychain-net.yaml", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 1421, "uid": 0, "version": "538283593", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [Check or create test directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:22

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"atime": 1658074423.378228, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "ctime": 1658074489.7779179, "dev": 64513, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626754, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658074489.7779179, "nlink": 2, "path": "./build/test", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "version": "4197237393", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:31
ok: [localhost] => {"ansible_facts": {"apiVersion": "helm.fluxcd.io/v1", "kind": "HelmRelease", "metadata": {"annotations": {"fluxcd.io/automated": "false"}, "name": "supplychain-net-ca", "namespace": "supplychain-net"}, "spec": {"chart": {"git": "ssh://git@github.com/adityajoshi12/bevel.git", "path": "platforms/hyperledger-fabric/charts/ca", "ref": "test"}, "releaseName": "supplychain-net-ca", "values": {"annotations": {"pvc": null, "service": null}, "deployment": {"annotations": null}, "metadata": {"images": {"alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "ca": "hyperledger/fabric-ca:1.4.8"}, "namespace": "supplychain-net"}, "proxy": {"external_url_suffix": "develop.local.com", "provider": "none", "type": "orderer"}, "server": {"admin": "supplychain-admin", "name": "ca", "tlsstatus": true}, "service": {"ports": {"tcp": {"port": 7054}}, "servicetype": "ClusterIP"}, "storage": {"storageclassname": "supplychainsc", "storagesize": "512Mi"}, "vault": {"address": "http://20.197.63.209:8200", "authpath": "devsupplychain-net-auth", "imagesecretname": "regcred", "role": "vault-role", "secretadminpass": "secretv2/data/credentials/supplychain-net/ca/supplychain?user", "secretcert": "secretv2/data/crypto/ordererOrganizations/supplychain-net/ca?ca.supplychain-net-cert.pem", "secretkey": "secretv2/data/crypto/ordererOrganizations/supplychain-net/ca?supplychain-net-CA.key", "serviceaccountname": "vault-auth"}}}}, "ansible_included_var_files": ["/home/bevel/platforms/hyperledger-fabric/releases/dev/supplychain/ca/supplychain-net.yaml"], "changed": false}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:36
ok: [localhost] => {"changed": false, "checksum": "8c20874644cc11681e4daadc4f2710f15dcc1930", "dest": "./build/test/supplychain-net-ca.yaml", "gid": 0, "group": "root", "md5sum": "ea774dbfb36d6ba1d409022aa2f4fc3f", "mode": "0644", "owner": "root", "size": 1006, "src": "/root/.ansible/tmp/ansible-tmp-1658074499.2580924-33484-149827576894014/source", "state": "file", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:42
changed: [localhost] => {"changed": true, "cmd": "helm lint -f \"./build/test/supplychain-net-ca.yaml\" \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n", "delta": "0:00:00.110291", "end": "2022-07-17 16:15:00.276846", "msg": "", "rc": 0, "start": "2022-07-17 16:15:00.166555", "stderr": "", "stderr_lines": [], "stdout": "==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, 0 chart(s) failed", "stdout_lines": ["==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca", "[INFO] Chart.yaml: icon is recommended", "", "1 chart(s) linted, 0 chart(s) failed"]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Create CA server values organizations] ***********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:101
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:116

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.452399", "end": "2022-07-17 16:15:03.964727", "msg": "", "rc": 0, "start": "2022-07-17 16:15:01.512328", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   82902bc..f21b6d1  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   82902bc..f21b6d1  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main f21b6d1] [ci skip] Pushing CA server files\n 1 file changed, 143 insertions(+)", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main f21b6d1] [ci skip] Pushing CA server files", " 1 file changed, 143 insertions(+)"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main f21b6d1] [ci skip] Pushing CA server files",
        " 1 file changed, 143 insertions(+)"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   82902bc..f21b6d1  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost
META: role_complete for localhost

TASK [creating the directory ./build/crypto-config/peerOrganizations/manufacturer-net/ca] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:14

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"exists": false}}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
changed: [localhost] => {"changed": true, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "./build/crypto-config/peerOrganizations/manufacturer-net/ca", "size": 4096, "state": "directory", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Create value file for cacerts job] ***************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:23

TASK [helm_component : Ensures /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer dir exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:14
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer", "size": 4096, "state": "directory", "uid": 0}

TASK [helm_component : create value file for manufacturer-cacerts-job] *********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:23
ok: [localhost] => {"changed": false, "checksum": "9fc91ce8a16c6942e487cf20117ff2281eaf7d1e", "dest": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer/manufacturer-cacerts-job.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer/manufacturer-cacerts-job.yaml", "size": 1070, "state": "file", "uid": 0}

TASK [Helm lint] ***************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:32

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
ok: [localhost] => {"changed": false, "stat": {"atime": 1658070750.0031273, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "checksum": "9fc91ce8a16c6942e487cf20117ff2281eaf7d1e", "ctime": 1658070749.4271286, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626994, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658070749.1671293, "nlink": 1, "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer/manufacturer-cacerts-job.yaml", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 1070, "uid": 0, "version": "1028611574", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [Check or create test directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:22

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"atime": 1658074423.378228, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "ctime": 1658074499.7818716, "dev": 64513, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626754, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658074499.7818716, "nlink": 2, "path": "./build/test", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "version": "4197237393", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:31
ok: [localhost] => {"ansible_facts": {"apiVersion": "helm.fluxcd.io/v1", "kind": "HelmRelease", "metadata": {"annotations": {"fluxcd.io/automated": "false"}, "name": "manufacturer-cacerts-job", "namespace": "manufacturer-net"}, "spec": {"chart": {"git": "ssh://git@github.com/adityajoshi12/bevel.git", "path": "platforms/hyperledger-fabric/charts/generate_cacerts", "ref": "test"}, "releaseName": "manufacturer-cacerts-job", "values": {"ca": {"subject": "/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net"}, "metadata": {"component_name": "manufacturer-net", "images": {"alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "fabrictools": "hyperledger/fabric-tools:2.2.2"}, "name": "manufacturer", "namespace": "manufacturer-net"}, "vault": {"address": "http://20.197.63.209:8200", "authpath": "devmanufacturer-net-auth", "imagesecretname": "regcred", "role": "vault-role", "secretcredentialsprefix": "secretv2/data/credentials/manufacturer-net/ca/manufacturer", "secretcryptoprefix": "secretv2/data/crypto/peerOrganizations/manufacturer-net/ca", "serviceaccountname": "vault-auth"}}}}, "ansible_included_var_files": ["/home/bevel/platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer/manufacturer-cacerts-job.yaml"], "changed": false}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:36
ok: [localhost] => {"changed": false, "checksum": "fccafab79856ee359a9a4aa3d647f3e2ac2a634b", "dest": "./build/test/manufacturer-cacerts-job.yaml", "gid": 0, "group": "root", "md5sum": "2ce8efc8222e0363a28b15a8e0953a9b", "mode": "0644", "owner": "root", "size": 657, "src": "/root/.ansible/tmp/ansible-tmp-1658074508.4981484-33835-165777425982347/source", "state": "file", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:42
changed: [localhost] => {"changed": true, "cmd": "helm lint -f \"./build/test/manufacturer-cacerts-job.yaml\" \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/generate_cacerts\"\n", "delta": "0:00:00.090333", "end": "2022-07-17 16:15:09.465059", "msg": "", "rc": 0, "start": "2022-07-17 16:15:09.374726", "stderr": "", "stderr_lines": [], "stdout": "==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/generate_cacerts\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, 0 chart(s) failed", "stdout_lines": ["==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/generate_cacerts", "[INFO] Chart.yaml: icon is recommended", "", "1 chart(s) linted, 0 chart(s) failed"]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:41

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.542301", "end": "2022-07-17 16:15:13.026212", "msg": "", "rc": 0, "start": "2022-07-17 16:15:10.483911", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   f21b6d1..0902cb2  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   f21b6d1..0902cb2  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main 0902cb2] [ci skip] Pushing CA server files\n 1 file changed, 144 insertions(+)", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main 0902cb2] [ci skip] Pushing CA server files", " 1 file changed, 144 insertions(+)"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main 0902cb2] [ci skip] Pushing CA server files",
        " 1 file changed, 144 insertions(+)"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   f21b6d1..0902cb2  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost

TASK [Check if cacerts-job job is completed] ***********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:53

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job manufacturer-cacerts-job in manufacturer-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:11
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2022-07-17T15:13:47Z", "generateName": "manufacturer-cacerts-job-", "labels": {"app": "manufacturer-cacerts-job", "app.kubernetes.io/instance": "manufacturer-cacerts-job", "app.kubernetes.io/managed-by": "Helm", "app.kubernetes.io/name": "manufacturer-cacerts-job", "controller-uid": "be16655f-a9f8-4975-8c76-3078ffeba88d", "helm.sh/chart": "generate_cacerts-0.2.0", "job-name": "manufacturer-cacerts-job"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:app": {}, "f:app.kubernetes.io/instance": {}, "f:app.kubernetes.io/managed-by": {}, "f:app.kubernetes.io/name": {}, "f:controller-uid": {}, "f:helm.sh/chart": {}, "f:job-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"be16655f-a9f8-4975-8c76-3078ffeba88d\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {"f:containers": {"k:{\"name\":\"cacerts\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"CA_SUBJECT\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"COMPONENT_NAME\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"KUBERNETES_AUTH_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"NAME\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ADDR\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_APP_ROLE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_CREDENTIALS_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_CRYPTO_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/certcheck\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:imagePullSecrets": {".": {}, "k:{\"name\":\"regcred\"}": {".": {}, "f:name": {}}}, "f:initContainers": {".": {}, "k:{\"name\":\"init-check-certificates\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"KUBERNETES_AUTH_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"MOUNT_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ADDR\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_APP_ROLE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_CREDENTIALS_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_CRYPTO_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/certcheck\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"certcheck\"}": {".": {}, "f:emptyDir": {".": {}, "f:medium": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T15:13:47Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:initContainerStatuses": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.28\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "time": "2022-07-17T15:13:52Z"}], "name": "manufacturer-cacerts-job-nrm5s", "namespace": "manufacturer-net", "ownerReferences": [{"apiVersion": "batch/v1", "blockOwnerDeletion": true, "controller": true, "kind": "Job", "name": "manufacturer-cacerts-job", "uid": "be16655f-a9f8-4975-8c76-3078ffeba88d"}], "resourceVersion": "71950", "uid": "9064bf42-0adb-404d-a2dc-e654f8642a6e"}, "spec": {"containers": [{"args": ["apk update && apk add jq curl openssl;\n\nvalidateVaultResponse () {\n  if echo ${2} | grep \"errors\"; then\n    echo \"ERROR: unable to retrieve ${1}: ${2}\"\n    exit 1\n  fi\n  if  [ \"$3\" == \"LOOKUPSECRETRESPONSE\" ]\n  then\n    http_code=$(curl -sS -o /dev/null -w \"%{http_code}\" \\\n    --header \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${1})\n    curl_response=$?\n    if test \"$http_code\" != \"200\" ; then\n        echo \"Http response code from Vault - $http_code and curl_response - $curl_response\"\n        if test \"$curl_response\" != \"0\"; then\n          echo \"Error: curl command failed with error code - $curl_response\"\n          exit 1\n        fi\n    fi\n  fi\n}\n\nif [ -e /certcheck/absent_cacert.txt ]\nthen\n\n  # Create openssl.conf file\n  echo \"[req]\nreq_extensions = v3_req\ndistinguished_name = dn\n\n[dn]\n\n[v3_req]\nbasicConstraints = critical, CA:TRUE\nkeyUsage = critical,digitalSignature, keyEncipherment, keyCertSign, cRLSign\nsubjectKeyIdentifier = hash\n\" > openssl.conf\n\n  # this commands generate the CA certificate\n  openssl ecparam -name prime256v1 -genkey -noout -out  ${COMPONENT_NAME}-CA.key\n  openssl req -x509 -config \"openssl.conf\" -new -nodes -key ${COMPONENT_NAME}-CA.key -days 1024 -out ca.${COMPONENT_NAME}-cert.pem -extensions v3_req -subj \"${CA_SUBJECT}\"\n\n  # This commands put the certificates with correct format for the curl command\n  while IFS= read -r line\n  do\n    echo \"$line\\n\"\n  done < ${COMPONENT_NAME}-CA.key > ./cakey_formatted.txt\n\n  while IFS= read -r line\n  do\n    echo \"$line\\n\"\n  done < ca.${COMPONENT_NAME}-cert.pem > ./capem_formatted.txt\n\n  PEM_CERTIFICATE=$(cat capem_formatted.txt)\n  KEY_CERTIFICATE=$(cat cakey_formatted.txt)\n  \n  echo \"\n    {\n      \\\"data\\\": \n        {\n          \\\"ca.${COMPONENT_NAME}-cert.pem\\\": \\\"${PEM_CERTIFICATE}\\\",\n          \\\"${COMPONENT_NAME}-CA.key\\\": \\\"${KEY_CERTIFICATE}\\\"\n        }  \n    }\" > payload.json\n\n  echo \"Putting secrets/certificates to Vault server\"\n  KUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\n  VAULT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login -H \"Content-Type: application/json\" -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | jq -r 'if .errors then . else .auth.client_token end')\n  validateVaultResponse 'vault login token' \"${VAULT_TOKEN}\"\n\n  # This command copy the CA certificates to the Vault\n  curl \\\n    -H \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n    -H \"Content-Type: application/json\" \\\n    -X POST \\\n    -d @payload.json \\\n    ${VAULT_ADDR}/v1/${VAULT_SECRET_CRYPTO_PATH}\n\n  # Check CA certificates\n  response_status=$(curl -s -o /dev/null -w \"%{http_code}\" \\\n  --header \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n  ${VAULT_ADDR}/v1/${VAULT_SECRET_CRYPTO_PATH});\n\n  validateVaultResponse 'certs creation' ${response_status};\n\n  rm payload.json\n\nfi\n\nif [ -e /certcheck/absent_creds.txt ]\nthen\n\n  # This task write the CA server admin credentials to Vault\n    curl \\\n      -H \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n      -H \"Content-Type: application/json\" \\\n      -X POST \\\n      -d '{ \"data\": {\"user\":\"'\"$NAME-adminpw\"'\"}}' \\\n      ${VAULT_ADDR}/v1/${VAULT_SECRET_CREDENTIALS_PATH}\n\n    # Check CA server admin credentials\n    response_status=$(curl -s -o /dev/null -w \"%{http_code}\" \\\n    --header \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${VAULT_SECRET_CREDENTIALS_PATH});\n\n    validateVaultResponse 'creds creation' ${response_status};\nfi"], "command": ["sh", "-c"], "env": [{"name": "VAULT_ADDR", "value": "http://20.197.63.209:8200"}, {"name": "VAULT_APP_ROLE", "value": "vault-role"}, {"name": "KUBERNETES_AUTH_PATH", "value": "devmanufacturer-net-auth"}, {"name": "VAULT_SECRET_CRYPTO_PATH", "value": "secretv2/data/crypto/peerOrganizations/manufacturer-net/ca"}, {"name": "VAULT_SECRET_CREDENTIALS_PATH", "value": "secretv2/data/credentials/manufacturer-net/ca/manufacturer"}, {"name": "COMPONENT_NAME", "value": "manufacturer-net"}, {"name": "NAME", "value": "manufacturer"}, {"name": "CA_SUBJECT", "value": "/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net"}], "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "imagePullPolicy": "IfNotPresent", "name": "cacerts", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/certcheck", "name": "certcheck"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-vrm54", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "imagePullSecrets": [{"name": "regcred"}], "initContainers": [{"args": ["#!/usr/bin/env sh\nvalidateVaultResponse () {\n  if echo ${2} | grep \"errors\"; then\n    echo \"ERROR: unable to retrieve ${1}: ${2}\"\n    exit 1\n  fi\n  if  [ \"$3\" == \"LOOKUPSECRETRESPONSE\" ]\n  then\n    http_code=$(curl -sS -o /dev/null -w \"%{http_code}\" \\\n    --header \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${1})\n    curl_response=$?\n    if test \"$http_code\" != \"200\" ; then\n        echo \"Http response code from Vault - $http_code and curl_response - $curl_response\"\n        if test \"$curl_response\" != \"0\"; then\n          echo \"Error: curl command failed with error code - $curl_response\"\n          exit 1\n        fi\n    fi\n  fi\n}\n\n# Setting up the environment to get secrets/certificates from Vault\necho \"Getting secrets/certificates from Vault server\"\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\nVAULT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login -H \"Content-Type: application/json\" -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | jq -r 'if .errors then . else .auth.client_token end')\nvalidateVaultResponse 'vault login token' \"${VAULT_TOKEN}\"\necho \"Logged into Vault\"\n\nmkdir -p ${MOUNT_PATH}\n\n# Check if certificates already present in the vault\nLOOKUP_SECRET_RESPONSE=$(curl --header \"X-Vault-Token: ${VAULT_TOKEN}\" ${VAULT_ADDR}/v1/${VAULT_SECRET_CRYPTO_PATH} | jq -r 'if .errors then . else . end')\nif echo ${LOOKUP_SECRET_RESPONSE} | grep \"errors\"\nthen\n  echo \"Certficates absent in vault. Ignore error warning\"\n  touch ${MOUNT_PATH}/absent_cacert.txt\nelif echo ${LOOKUP_SECRET_RESPONSE} | grep \"\\\"data\\\": null\"\nthen\n  echo \"Certficates absent in vault2. Ignore error warning\"\n  touch ${MOUNT_PATH}/absent_cacert.txt\nelse\n  validateVaultResponse \"${VAULT_SECRET_CRYPTO_PATH}\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\n  echo \"Certificates present in vault\"\n  touch ${MOUNT_PATH}/present_cacert.txt\nfi\n\n# Check if CA server admin credentials already present in the vault\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_TOKEN}\" ${VAULT_ADDR}/v1/${VAULT_SECRET_CREDENTIALS_PATH} | jq -r 'if .errors then . else . end')\nif echo ${LOOKUP_SECRET_RESPONSE} | grep \"errors\"\nthen\n  echo \"Certficates absent in vault. Ignore error warning\"\n  touch ${MOUNT_PATH}/absent_creds.txt\nelif echo ${LOOKUP_SECRET_RESPONSE} | grep \"\\\"data\\\": null\"\nthen\n  echo \"Certficates absent in vault2. Ignore error warning\"\n  touch ${MOUNT_PATH}/absent_creds.txt\nelse\n  validateVaultResponse \"${VAULT_SECRET_CREDENTIALS_PATH}\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\n  echo \"Certificates present in vault\"\n  touch ${MOUNT_PATH}/present_creds.txt\nfi \n\necho \"Done checking for certificates in vault\""], "command": ["sh", "-c"], "env": [{"name": "VAULT_ADDR", "value": "http://20.197.63.209:8200"}, {"name": "VAULT_APP_ROLE", "value": "vault-role"}, {"name": "KUBERNETES_AUTH_PATH", "value": "devmanufacturer-net-auth"}, {"name": "VAULT_SECRET_CRYPTO_PATH", "value": "secretv2/data/crypto/peerOrganizations/manufacturer-net/ca"}, {"name": "VAULT_SECRET_CREDENTIALS_PATH", "value": "secretv2/data/credentials/manufacturer-net/ca/manufacturer"}, {"name": "MOUNT_PATH", "value": "/certcheck"}], "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "imagePullPolicy": "IfNotPresent", "name": "init-check-certificates", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/certcheck", "name": "certcheck"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-vrm54", "readOnly": true}]}], "nodeName": "aks-agentpool-84293659-vmss000001", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "OnFailure", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "vault-auth", "serviceAccountName": "vault-auth", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"emptyDir": {"medium": "Memory"}, "name": "certcheck"}, {"name": "kube-api-access-vrm54", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:13:49Z", "reason": "PodCompleted", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:13:52Z", "reason": "PodCompleted", "status": "False", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:13:52Z", "reason": "PodCompleted", "status": "False", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:13:47Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://6f111df9638c262133a33fab4aeb8b6cedb4063d8590eea9444f941ccb8ea348", "image": "docker.io/hyperledgerlabs/alpine-utils:1.0", "imageID": "docker.io/hyperledgerlabs/alpine-utils@sha256:cab1d1566ddaa28e482b5eeda7426791bdf607cee41e2b752ccc566553810f74", "lastState": {}, "name": "cacerts", "ready": false, "restartCount": 0, "started": false, "state": {"terminated": {"containerID": "containerd://6f111df9638c262133a33fab4aeb8b6cedb4063d8590eea9444f941ccb8ea348", "exitCode": 0, "finishedAt": "2022-07-17T15:13:52Z", "reason": "Completed", "startedAt": "2022-07-17T15:13:50Z"}}}], "hostIP": "10.224.0.5", "initContainerStatuses": [{"containerID": "containerd://6d3489722712eca3d4169e1216b0976cf123de1167aedaa53269d3b00cc3449a", "image": "docker.io/hyperledgerlabs/alpine-utils:1.0", "imageID": "docker.io/hyperledgerlabs/alpine-utils@sha256:cab1d1566ddaa28e482b5eeda7426791bdf607cee41e2b752ccc566553810f74", "lastState": {}, "name": "init-check-certificates", "ready": true, "restartCount": 0, "state": {"terminated": {"containerID": "containerd://6d3489722712eca3d4169e1216b0976cf123de1167aedaa53269d3b00cc3449a", "exitCode": 0, "finishedAt": "2022-07-17T15:13:49Z", "reason": "Completed", "startedAt": "2022-07-17T15:13:49Z"}}}], "phase": "Succeeded", "podIP": "10.244.0.28", "podIPs": [{"ip": "10.244.0.28"}], "qosClass": "BestEffort", "startTime": "2022-07-17T15:13:47Z"}}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:28
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job manufacturer-cacerts-job in manufacturer-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:42
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create/ca-server : Copy custom config for fabric-ca server] **************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:65
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create the Ambassador credentials] ***************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:72
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create CA server values for Orderer] *************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:85
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create CA server values organizations] ***********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:101

TASK [helm_component : Ensures /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/ca dir exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:14
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/ca", "size": 4096, "state": "directory", "uid": 0}

TASK [helm_component : create value file for manufacturer-net] *****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:23
ok: [localhost] => {"changed": false, "checksum": "43eab6e535377d7e69aa03c9cff4eea43539dd45", "dest": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/ca/manufacturer-net.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/ca/manufacturer-net.yaml", "size": 1421, "state": "file", "uid": 0}

TASK [Helm lint] ***************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:32

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
ok: [localhost] => {"changed": false, "stat": {"atime": 1658070853.7708876, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "checksum": "43eab6e535377d7e69aa03c9cff4eea43539dd45", "ctime": 1658070853.214889, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 3627004, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658070852.9148896, "nlink": 1, "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/ca/manufacturer-net.yaml", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 1421, "uid": 0, "version": "1404642413", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [Check or create test directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:22

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"atime": 1658074423.378228, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "ctime": 1658074508.9818292, "dev": 64513, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626754, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658074508.9818292, "nlink": 2, "path": "./build/test", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "version": "4197237393", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:31
ok: [localhost] => {"ansible_facts": {"apiVersion": "helm.fluxcd.io/v1", "kind": "HelmRelease", "metadata": {"annotations": {"fluxcd.io/automated": "false"}, "name": "manufacturer-net-ca", "namespace": "manufacturer-net"}, "spec": {"chart": {"git": "ssh://git@github.com/adityajoshi12/bevel.git", "path": "platforms/hyperledger-fabric/charts/ca", "ref": "test"}, "releaseName": "manufacturer-net-ca", "values": {"annotations": {"pvc": null, "service": null}, "deployment": {"annotations": null}, "metadata": {"images": {"alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "ca": "hyperledger/fabric-ca:1.4.8"}, "namespace": "manufacturer-net"}, "proxy": {"external_url_suffix": "develop.local.com", "provider": "none", "type": "peer"}, "server": {"admin": "manufacturer-admin", "name": "ca", "tlsstatus": true}, "service": {"ports": {"tcp": {"port": 7054}}, "servicetype": "ClusterIP"}, "storage": {"storageclassname": "manufacturersc", "storagesize": "512Mi"}, "vault": {"address": "http://20.197.63.209:8200", "authpath": "devmanufacturer-net-auth", "imagesecretname": "regcred", "role": "vault-role", "secretadminpass": "secretv2/data/credentials/manufacturer-net/ca/manufacturer?user", "secretcert": "secretv2/data/crypto/peerOrganizations/manufacturer-net/ca?ca.manufacturer-net-cert.pem", "secretkey": "secretv2/data/crypto/peerOrganizations/manufacturer-net/ca?manufacturer-net-CA.key", "serviceaccountname": "vault-auth"}}}}, "ansible_included_var_files": ["/home/bevel/platforms/hyperledger-fabric/releases/dev/manufacturer/ca/manufacturer-net.yaml"], "changed": false}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:36
ok: [localhost] => {"changed": false, "checksum": "53b69d6b8102a6d5606b896998bbc02cc79e4920", "dest": "./build/test/manufacturer-net-ca.yaml", "gid": 0, "group": "root", "md5sum": "01b7a3e4d2e73d614c04eb45527f2a20", "mode": "0644", "owner": "root", "size": 1007, "src": "/root/.ansible/tmp/ansible-tmp-1658074518.2303777-34159-217054069556071/source", "state": "file", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:42
changed: [localhost] => {"changed": true, "cmd": "helm lint -f \"./build/test/manufacturer-net-ca.yaml\" \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n", "delta": "0:00:00.102770", "end": "2022-07-17 16:15:19.236999", "msg": "", "rc": 0, "start": "2022-07-17 16:15:19.134229", "stderr": "", "stderr_lines": [], "stdout": "==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, 0 chart(s) failed", "stdout_lines": ["==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca", "[INFO] Chart.yaml: icon is recommended", "", "1 chart(s) linted, 0 chart(s) failed"]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:116

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.436477", "end": "2022-07-17 16:15:22.701873", "msg": "", "rc": 0, "start": "2022-07-17 16:15:20.265396", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   0902cb2..08a24e6  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   0902cb2..08a24e6  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main 08a24e6] [ci skip] Pushing CA server files\n 1 file changed, 140 insertions(+)", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main 08a24e6] [ci skip] Pushing CA server files", " 1 file changed, 140 insertions(+)"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main 08a24e6] [ci skip] Pushing CA server files",
        " 1 file changed, 140 insertions(+)"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   0902cb2..08a24e6  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost
META: role_complete for localhost

TASK [creating the directory ./build/crypto-config/peerOrganizations/carrier-net/ca] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:14

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"exists": false}}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
changed: [localhost] => {"changed": true, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "./build/crypto-config/peerOrganizations/carrier-net/ca", "size": 4096, "state": "directory", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Create value file for cacerts job] ***************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:23

TASK [helm_component : Ensures /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier dir exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:14
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier", "size": 4096, "state": "directory", "uid": 0}

TASK [helm_component : create value file for carrier-cacerts-job] **************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:23
ok: [localhost] => {"changed": false, "checksum": "11a969548e9d9388e233d21c2e8abe5db9612e9a", "dest": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/carrier-cacerts-job.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/carrier-cacerts-job.yaml", "size": 1010, "state": "file", "uid": 0}

TASK [Helm lint] ***************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:32

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
ok: [localhost] => {"changed": false, "stat": {"atime": 1658070862.574867, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "checksum": "11a969548e9d9388e233d21c2e8abe5db9612e9a", "ctime": 1658070862.0028684, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 3627563, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658070861.7228692, "nlink": 1, "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/carrier-cacerts-job.yaml", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 1010, "uid": 0, "version": "2420851343", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [Check or create test directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:22

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"atime": 1658074423.378228, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "ctime": 1658074518.7177844, "dev": 64513, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626754, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658074518.7177844, "nlink": 2, "path": "./build/test", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "version": "4197237393", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:31
ok: [localhost] => {"ansible_facts": {"apiVersion": "helm.fluxcd.io/v1", "kind": "HelmRelease", "metadata": {"annotations": {"fluxcd.io/automated": "false"}, "name": "carrier-cacerts-job", "namespace": "carrier-net"}, "spec": {"chart": {"git": "ssh://git@github.com/adityajoshi12/bevel.git", "path": "platforms/hyperledger-fabric/charts/generate_cacerts", "ref": "test"}, "releaseName": "carrier-cacerts-job", "values": {"ca": {"subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net"}, "metadata": {"component_name": "carrier-net", "images": {"alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "fabrictools": "hyperledger/fabric-tools:2.2.2"}, "name": "carrier", "namespace": "carrier-net"}, "vault": {"address": "http://20.197.63.209:8200", "authpath": "devcarrier-net-auth", "imagesecretname": "regcred", "role": "vault-role", "secretcredentialsprefix": "secretv2/data/credentials/carrier-net/ca/carrier", "secretcryptoprefix": "secretv2/data/crypto/peerOrganizations/carrier-net/ca", "serviceaccountname": "vault-auth"}}}}, "ansible_included_var_files": ["/home/bevel/platforms/hyperledger-fabric/releases/dev/carrier/carrier/carrier-cacerts-job.yaml"], "changed": false}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:36
ok: [localhost] => {"changed": false, "checksum": "3086915aa64df520a6acca7b41888e441c3adfb8", "dest": "./build/test/carrier-cacerts-job.yaml", "gid": 0, "group": "root", "md5sum": "fa4682e51412fd9d0dce40255eb4751e", "mode": "0644", "owner": "root", "size": 612, "src": "/root/.ansible/tmp/ansible-tmp-1658074527.3807302-34509-217394118620276/source", "state": "file", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:42
changed: [localhost] => {"changed": true, "cmd": "helm lint -f \"./build/test/carrier-cacerts-job.yaml\" \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/generate_cacerts\"\n", "delta": "0:00:00.085165", "end": "2022-07-17 16:15:28.406407", "msg": "", "rc": 0, "start": "2022-07-17 16:15:28.321242", "stderr": "", "stderr_lines": [], "stdout": "==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/generate_cacerts\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, 0 chart(s) failed", "stdout_lines": ["==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/generate_cacerts", "[INFO] Chart.yaml: icon is recommended", "", "1 chart(s) linted, 0 chart(s) failed"]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:41

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.467888", "end": "2022-07-17 16:15:31.809217", "msg": "", "rc": 0, "start": "2022-07-17 16:15:29.341329", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   08a24e6..ea62d5a  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   08a24e6..ea62d5a  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main ea62d5a] [ci skip] Pushing CA server files\n 1 file changed, 144 insertions(+)", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main ea62d5a] [ci skip] Pushing CA server files", " 1 file changed, 144 insertions(+)"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main ea62d5a] [ci skip] Pushing CA server files",
        " 1 file changed, 144 insertions(+)"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   08a24e6..ea62d5a  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost

TASK [Check if cacerts-job job is completed] ***********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:53

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job carrier-cacerts-job in carrier-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:11
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2022-07-17T15:15:49Z", "generateName": "carrier-cacerts-job-", "labels": {"app": "carrier-cacerts-job", "app.kubernetes.io/instance": "carrier-cacerts-job", "app.kubernetes.io/managed-by": "Helm", "app.kubernetes.io/name": "carrier-cacerts-job", "controller-uid": "01837658-0efb-4745-8d7c-af1a0803d000", "helm.sh/chart": "generate_cacerts-0.2.0", "job-name": "carrier-cacerts-job"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:app": {}, "f:app.kubernetes.io/instance": {}, "f:app.kubernetes.io/managed-by": {}, "f:app.kubernetes.io/name": {}, "f:controller-uid": {}, "f:helm.sh/chart": {}, "f:job-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"01837658-0efb-4745-8d7c-af1a0803d000\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {"f:containers": {"k:{\"name\":\"cacerts\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"CA_SUBJECT\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"COMPONENT_NAME\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"KUBERNETES_AUTH_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"NAME\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ADDR\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_APP_ROLE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_CREDENTIALS_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_CRYPTO_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/certcheck\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:imagePullSecrets": {".": {}, "k:{\"name\":\"regcred\"}": {".": {}, "f:name": {}}}, "f:initContainers": {".": {}, "k:{\"name\":\"init-check-certificates\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"KUBERNETES_AUTH_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"MOUNT_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ADDR\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_APP_ROLE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_CREDENTIALS_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_CRYPTO_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/certcheck\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"certcheck\"}": {".": {}, "f:emptyDir": {".": {}, "f:medium": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T15:15:49Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:initContainerStatuses": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.30\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "time": "2022-07-17T15:15:55Z"}], "name": "carrier-cacerts-job-lx2d7", "namespace": "carrier-net", "ownerReferences": [{"apiVersion": "batch/v1", "blockOwnerDeletion": true, "controller": true, "kind": "Job", "name": "carrier-cacerts-job", "uid": "01837658-0efb-4745-8d7c-af1a0803d000"}], "resourceVersion": "72446", "uid": "1c5c5dd3-6211-42e1-8c57-c01674c22fdd"}, "spec": {"containers": [{"args": ["apk update && apk add jq curl openssl;\n\nvalidateVaultResponse () {\n  if echo ${2} | grep \"errors\"; then\n    echo \"ERROR: unable to retrieve ${1}: ${2}\"\n    exit 1\n  fi\n  if  [ \"$3\" == \"LOOKUPSECRETRESPONSE\" ]\n  then\n    http_code=$(curl -sS -o /dev/null -w \"%{http_code}\" \\\n    --header \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${1})\n    curl_response=$?\n    if test \"$http_code\" != \"200\" ; then\n        echo \"Http response code from Vault - $http_code and curl_response - $curl_response\"\n        if test \"$curl_response\" != \"0\"; then\n          echo \"Error: curl command failed with error code - $curl_response\"\n          exit 1\n        fi\n    fi\n  fi\n}\n\nif [ -e /certcheck/absent_cacert.txt ]\nthen\n\n  # Create openssl.conf file\n  echo \"[req]\nreq_extensions = v3_req\ndistinguished_name = dn\n\n[dn]\n\n[v3_req]\nbasicConstraints = critical, CA:TRUE\nkeyUsage = critical,digitalSignature, keyEncipherment, keyCertSign, cRLSign\nsubjectKeyIdentifier = hash\n\" > openssl.conf\n\n  # this commands generate the CA certificate\n  openssl ecparam -name prime256v1 -genkey -noout -out  ${COMPONENT_NAME}-CA.key\n  openssl req -x509 -config \"openssl.conf\" -new -nodes -key ${COMPONENT_NAME}-CA.key -days 1024 -out ca.${COMPONENT_NAME}-cert.pem -extensions v3_req -subj \"${CA_SUBJECT}\"\n\n  # This commands put the certificates with correct format for the curl command\n  while IFS= read -r line\n  do\n    echo \"$line\\n\"\n  done < ${COMPONENT_NAME}-CA.key > ./cakey_formatted.txt\n\n  while IFS= read -r line\n  do\n    echo \"$line\\n\"\n  done < ca.${COMPONENT_NAME}-cert.pem > ./capem_formatted.txt\n\n  PEM_CERTIFICATE=$(cat capem_formatted.txt)\n  KEY_CERTIFICATE=$(cat cakey_formatted.txt)\n  \n  echo \"\n    {\n      \\\"data\\\": \n        {\n          \\\"ca.${COMPONENT_NAME}-cert.pem\\\": \\\"${PEM_CERTIFICATE}\\\",\n          \\\"${COMPONENT_NAME}-CA.key\\\": \\\"${KEY_CERTIFICATE}\\\"\n        }  \n    }\" > payload.json\n\n  echo \"Putting secrets/certificates to Vault server\"\n  KUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\n  VAULT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login -H \"Content-Type: application/json\" -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | jq -r 'if .errors then . else .auth.client_token end')\n  validateVaultResponse 'vault login token' \"${VAULT_TOKEN}\"\n\n  # This command copy the CA certificates to the Vault\n  curl \\\n    -H \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n    -H \"Content-Type: application/json\" \\\n    -X POST \\\n    -d @payload.json \\\n    ${VAULT_ADDR}/v1/${VAULT_SECRET_CRYPTO_PATH}\n\n  # Check CA certificates\n  response_status=$(curl -s -o /dev/null -w \"%{http_code}\" \\\n  --header \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n  ${VAULT_ADDR}/v1/${VAULT_SECRET_CRYPTO_PATH});\n\n  validateVaultResponse 'certs creation' ${response_status};\n\n  rm payload.json\n\nfi\n\nif [ -e /certcheck/absent_creds.txt ]\nthen\n\n  # This task write the CA server admin credentials to Vault\n    curl \\\n      -H \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n      -H \"Content-Type: application/json\" \\\n      -X POST \\\n      -d '{ \"data\": {\"user\":\"'\"$NAME-adminpw\"'\"}}' \\\n      ${VAULT_ADDR}/v1/${VAULT_SECRET_CREDENTIALS_PATH}\n\n    # Check CA server admin credentials\n    response_status=$(curl -s -o /dev/null -w \"%{http_code}\" \\\n    --header \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${VAULT_SECRET_CREDENTIALS_PATH});\n\n    validateVaultResponse 'creds creation' ${response_status};\nfi"], "command": ["sh", "-c"], "env": [{"name": "VAULT_ADDR", "value": "http://20.197.63.209:8200"}, {"name": "VAULT_APP_ROLE", "value": "vault-role"}, {"name": "KUBERNETES_AUTH_PATH", "value": "devcarrier-net-auth"}, {"name": "VAULT_SECRET_CRYPTO_PATH", "value": "secretv2/data/crypto/peerOrganizations/carrier-net/ca"}, {"name": "VAULT_SECRET_CREDENTIALS_PATH", "value": "secretv2/data/credentials/carrier-net/ca/carrier"}, {"name": "COMPONENT_NAME", "value": "carrier-net"}, {"name": "NAME", "value": "carrier"}, {"name": "CA_SUBJECT", "value": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net"}], "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "imagePullPolicy": "IfNotPresent", "name": "cacerts", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/certcheck", "name": "certcheck"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-tnbvk", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "imagePullSecrets": [{"name": "regcred"}], "initContainers": [{"args": ["#!/usr/bin/env sh\nvalidateVaultResponse () {\n  if echo ${2} | grep \"errors\"; then\n    echo \"ERROR: unable to retrieve ${1}: ${2}\"\n    exit 1\n  fi\n  if  [ \"$3\" == \"LOOKUPSECRETRESPONSE\" ]\n  then\n    http_code=$(curl -sS -o /dev/null -w \"%{http_code}\" \\\n    --header \"X-Vault-Token: ${VAULT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${1})\n    curl_response=$?\n    if test \"$http_code\" != \"200\" ; then\n        echo \"Http response code from Vault - $http_code and curl_response - $curl_response\"\n        if test \"$curl_response\" != \"0\"; then\n          echo \"Error: curl command failed with error code - $curl_response\"\n          exit 1\n        fi\n    fi\n  fi\n}\n\n# Setting up the environment to get secrets/certificates from Vault\necho \"Getting secrets/certificates from Vault server\"\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\nVAULT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login -H \"Content-Type: application/json\" -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | jq -r 'if .errors then . else .auth.client_token end')\nvalidateVaultResponse 'vault login token' \"${VAULT_TOKEN}\"\necho \"Logged into Vault\"\n\nmkdir -p ${MOUNT_PATH}\n\n# Check if certificates already present in the vault\nLOOKUP_SECRET_RESPONSE=$(curl --header \"X-Vault-Token: ${VAULT_TOKEN}\" ${VAULT_ADDR}/v1/${VAULT_SECRET_CRYPTO_PATH} | jq -r 'if .errors then . else . end')\nif echo ${LOOKUP_SECRET_RESPONSE} | grep \"errors\"\nthen\n  echo \"Certficates absent in vault. Ignore error warning\"\n  touch ${MOUNT_PATH}/absent_cacert.txt\nelif echo ${LOOKUP_SECRET_RESPONSE} | grep \"\\\"data\\\": null\"\nthen\n  echo \"Certficates absent in vault2. Ignore error warning\"\n  touch ${MOUNT_PATH}/absent_cacert.txt\nelse\n  validateVaultResponse \"${VAULT_SECRET_CRYPTO_PATH}\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\n  echo \"Certificates present in vault\"\n  touch ${MOUNT_PATH}/present_cacert.txt\nfi\n\n# Check if CA server admin credentials already present in the vault\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_TOKEN}\" ${VAULT_ADDR}/v1/${VAULT_SECRET_CREDENTIALS_PATH} | jq -r 'if .errors then . else . end')\nif echo ${LOOKUP_SECRET_RESPONSE} | grep \"errors\"\nthen\n  echo \"Certficates absent in vault. Ignore error warning\"\n  touch ${MOUNT_PATH}/absent_creds.txt\nelif echo ${LOOKUP_SECRET_RESPONSE} | grep \"\\\"data\\\": null\"\nthen\n  echo \"Certficates absent in vault2. Ignore error warning\"\n  touch ${MOUNT_PATH}/absent_creds.txt\nelse\n  validateVaultResponse \"${VAULT_SECRET_CREDENTIALS_PATH}\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\n  echo \"Certificates present in vault\"\n  touch ${MOUNT_PATH}/present_creds.txt\nfi \n\necho \"Done checking for certificates in vault\""], "command": ["sh", "-c"], "env": [{"name": "VAULT_ADDR", "value": "http://20.197.63.209:8200"}, {"name": "VAULT_APP_ROLE", "value": "vault-role"}, {"name": "KUBERNETES_AUTH_PATH", "value": "devcarrier-net-auth"}, {"name": "VAULT_SECRET_CRYPTO_PATH", "value": "secretv2/data/crypto/peerOrganizations/carrier-net/ca"}, {"name": "VAULT_SECRET_CREDENTIALS_PATH", "value": "secretv2/data/credentials/carrier-net/ca/carrier"}, {"name": "MOUNT_PATH", "value": "/certcheck"}], "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "imagePullPolicy": "IfNotPresent", "name": "init-check-certificates", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/certcheck", "name": "certcheck"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-tnbvk", "readOnly": true}]}], "nodeName": "aks-agentpool-84293659-vmss000001", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "OnFailure", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "vault-auth", "serviceAccountName": "vault-auth", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"emptyDir": {"medium": "Memory"}, "name": "certcheck"}, {"name": "kube-api-access-tnbvk", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:15:52Z", "reason": "PodCompleted", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:15:55Z", "reason": "PodCompleted", "status": "False", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:15:55Z", "reason": "PodCompleted", "status": "False", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:15:49Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://d445906573235c863d910fbda968cfe94b5ae88ca0c21067f77fd5553b7366fb", "image": "docker.io/hyperledgerlabs/alpine-utils:1.0", "imageID": "docker.io/hyperledgerlabs/alpine-utils@sha256:cab1d1566ddaa28e482b5eeda7426791bdf607cee41e2b752ccc566553810f74", "lastState": {}, "name": "cacerts", "ready": false, "restartCount": 0, "started": false, "state": {"terminated": {"containerID": "containerd://d445906573235c863d910fbda968cfe94b5ae88ca0c21067f77fd5553b7366fb", "exitCode": 0, "finishedAt": "2022-07-17T15:15:54Z", "reason": "Completed", "startedAt": "2022-07-17T15:15:52Z"}}}], "hostIP": "10.224.0.5", "initContainerStatuses": [{"containerID": "containerd://31e32667e130907638d543894f26a9080ac63108d15dedab4d004690c7202736", "image": "docker.io/hyperledgerlabs/alpine-utils:1.0", "imageID": "docker.io/hyperledgerlabs/alpine-utils@sha256:cab1d1566ddaa28e482b5eeda7426791bdf607cee41e2b752ccc566553810f74", "lastState": {}, "name": "init-check-certificates", "ready": true, "restartCount": 0, "state": {"terminated": {"containerID": "containerd://31e32667e130907638d543894f26a9080ac63108d15dedab4d004690c7202736", "exitCode": 0, "finishedAt": "2022-07-17T15:15:51Z", "reason": "Completed", "startedAt": "2022-07-17T15:15:51Z"}}}], "phase": "Succeeded", "podIP": "10.244.0.30", "podIPs": [{"ip": "10.244.0.30"}], "qosClass": "BestEffort", "startTime": "2022-07-17T15:15:49Z"}}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:28
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job carrier-cacerts-job in carrier-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:42
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create/ca-server : Copy custom config for fabric-ca server] **************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:65
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create the Ambassador credentials] ***************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:72
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create CA server values for Orderer] *************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:85
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [Create CA server values organizations] ***********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:101

TASK [helm_component : Ensures /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca dir exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:14
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca", "size": 4096, "state": "directory", "uid": 0}

TASK [helm_component : create value file for carrier-net] **********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:23
ok: [localhost] => {"changed": false, "checksum": "501249c8e737e6621d8984aa045ffc48fb21f210", "dest": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml", "size": 1356, "state": "file", "uid": 0}

TASK [Helm lint] ***************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:32

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
ok: [localhost] => {"changed": false, "stat": {"atime": 1658070965.8626237, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "checksum": "501249c8e737e6621d8984aa045ffc48fb21f210", "ctime": 1658070965.3026252, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 3883016, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658070965.0346258, "nlink": 1, "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 1356, "uid": 0, "version": "3698390131", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [Check or create test directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:22

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"atime": 1658074423.378228, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "ctime": 1658074527.957742, "dev": 64513, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626754, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658074527.957742, "nlink": 2, "path": "./build/test", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "version": "4197237393", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:31
ok: [localhost] => {"ansible_facts": {"apiVersion": "helm.fluxcd.io/v1", "kind": "HelmRelease", "metadata": {"annotations": {"fluxcd.io/automated": "false"}, "name": "carrier-net-ca", "namespace": "carrier-net"}, "spec": {"chart": {"git": "ssh://git@github.com/adityajoshi12/bevel.git", "path": "platforms/hyperledger-fabric/charts/ca", "ref": "test"}, "releaseName": "carrier-net-ca", "values": {"annotations": {"pvc": null, "service": null}, "deployment": {"annotations": null}, "metadata": {"images": {"alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "ca": "hyperledger/fabric-ca:1.4.8"}, "namespace": "carrier-net"}, "proxy": {"external_url_suffix": "develop.local.com", "provider": "none", "type": "peer"}, "server": {"admin": "carrier-admin", "name": "ca", "tlsstatus": true}, "service": {"ports": {"tcp": {"port": 7054}}, "servicetype": "ClusterIP"}, "storage": {"storageclassname": "carriersc", "storagesize": "512Mi"}, "vault": {"address": "http://20.197.63.209:8200", "authpath": "devcarrier-net-auth", "imagesecretname": "regcred", "role": "vault-role", "secretadminpass": "secretv2/data/credentials/carrier-net/ca/carrier?user", "secretcert": "secretv2/data/crypto/peerOrganizations/carrier-net/ca?ca.carrier-net-cert.pem", "secretkey": "secretv2/data/crypto/peerOrganizations/carrier-net/ca?carrier-net-CA.key", "serviceaccountname": "vault-auth"}}}}, "ansible_included_var_files": ["/home/bevel/platforms/hyperledger-fabric/releases/dev/carrier/ca/carrier-net.yaml"], "changed": false}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:36
ok: [localhost] => {"changed": false, "checksum": "1ac71a798b72ccf9dbef002c98b7cc013867f54a", "dest": "./build/test/carrier-net-ca.yaml", "gid": 0, "group": "root", "md5sum": "11a18f396f1923f6d0edd547fd6ee5b6", "mode": "0644", "owner": "root", "size": 957, "src": "/root/.ansible/tmp/ansible-tmp-1658074537.205111-34833-190296716749114/source", "state": "file", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:42
changed: [localhost] => {"changed": true, "cmd": "helm lint -f \"./build/test/carrier-net-ca.yaml\" \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\"\n", "delta": "0:00:00.104138", "end": "2022-07-17 16:15:38.198336", "msg": "", "rc": 0, "start": "2022-07-17 16:15:38.094198", "stderr": "", "stderr_lines": [], "stdout": "==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, 0 chart(s) failed", "stdout_lines": ["==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/ca", "[INFO] Chart.yaml: icon is recommended", "", "1 chart(s) linted, 0 chart(s) failed"]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-server/tasks/main.yaml:116

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA server files\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.481144", "end": "2022-07-17 16:15:41.663735", "msg": "", "rc": 0, "start": "2022-07-17 16:15:39.182591", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   ea62d5a..522bdde  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   ea62d5a..522bdde  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main 522bdde] [ci skip] Pushing CA server files\n 1 file changed, 140 insertions(+)", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main 522bdde] [ci skip] Pushing CA server files", " 1 file changed, 140 insertions(+)"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main 522bdde] [ci skip] Pushing CA server files",
        " 1 file changed, 140 insertions(+)"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   ea62d5a..522bdde  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost
META: role_complete for localhost

TASK [Create generate_crypto.sh for each organization] *************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:81

TASK [create/crypto_script : Create build directory if it does not exist] ******
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:13
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "./build", "size": 4096, "state": "directory", "uid": 0}

TASK [create/crypto_script : Create generate_crypto script file for orderers] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:20
changed: [localhost] => (item={'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}) => {"ansible_loop_var": "orderer", "changed": true, "checksum": "591d4fa37b8d3bf255a5489d638bfbd701e96e2e", "dest": "./build/generate-crypto-supplychain-orderer1.sh", "gid": 0, "group": "root", "md5sum": "95825c6fe5fa6bc50887d3354ffeb41f", "mode": "0644", "orderer": {"consensus": "raft", "grpc": {"port": 7050}, "name": "orderer1", "orderer": null, "type": "orderer"}, "owner": "root", "size": 2840, "src": "/root/.ansible/tmp/ansible-tmp-1658074543.1030154-35011-257512366731370/source", "state": "file", "uid": 0}

TASK [create/crypto_script : Create generate_crypto script file for orderer organisation] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:41
changed: [localhost] => {"changed": true, "checksum": "91616fb55f3cf0372244fd186e8420dccd363ae0", "dest": "./build/generate-crypto-supplychain.sh", "gid": 0, "group": "root", "md5sum": "00effe50a42132064934fb3fded38b68", "mode": "0644", "owner": "root", "size": 3363, "src": "/root/.ansible/tmp/ansible-tmp-1658074543.7865322-35050-15990531601931/source", "state": "file", "uid": 0}

TASK [create/crypto_script : Create generate_crypto script file for organisations] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [create/crypto_script : Create build directory if it does not exist] ******
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:13
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "./build", "size": 4096, "state": "directory", "uid": 0}

TASK [create/crypto_script : Create generate_crypto script file for orderers] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:20
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/crypto_script : Create generate_crypto script file for orderer organisation] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/crypto_script : Create generate_crypto script file for organisations] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:58
changed: [localhost] => {"changed": true, "checksum": "53920e6ba257622ac6bb04d68c1758d53354c918", "dest": "./build/generate-crypto-manufacturer.sh", "gid": 0, "group": "root", "md5sum": "37bf014fd5911ca23553454f92d42d10", "mode": "0644", "owner": "root", "size": 5853, "src": "/root/.ansible/tmp/ansible-tmp-1658074545.2120345-35121-251414439658162/source", "state": "file", "uid": 0}
META: role_complete for localhost

TASK [create/crypto_script : Create build directory if it does not exist] ******
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:13
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "./build", "size": 4096, "state": "directory", "uid": 0}

TASK [create/crypto_script : Create generate_crypto script file for orderers] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:20
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/crypto_script : Create generate_crypto script file for orderer organisation] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/crypto_script : Create generate_crypto script file for organisations] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/crypto_script/tasks/main.yaml:58
changed: [localhost] => {"changed": true, "checksum": "8e6c5273cd1cd6f70cc1bde63c0a50189c5a2f75", "dest": "./build/generate-crypto-carrier.sh", "gid": 0, "group": "root", "md5sum": "9e03c5acae77634c32103acfa557443b", "mode": "0644", "owner": "root", "size": 5804, "src": "/root/.ansible/tmp/ansible-tmp-1658074546.4941716-35190-202493138485951/source", "state": "file", "uid": 0}
META: role_complete for localhost

TASK [pause] *******************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:91
Pausing for 360 seconds
(ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
[pause]
Sleeping... so that the client certificates are valid:
[[[KPress 'C' to continue the play or 'A' to abort 
ok: [localhost] => {"changed": false, "delta": 16, "echo": true, "rc": 0, "start": "2022-07-17 16:15:47.301192", "stderr": "", "stdout": "Paused for 0.28 minutes", "stop": "2022-07-17 16:16:04.021990", "user_input": ""}

TASK [Create CA tools for each organization] ***********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:96
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.manufacturer-net:7054', 'certificate': '/home/bevel/build/manufacturer/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net:7051', 'certificate': '/home/bevel/build/manufacturer/peer0.crt', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain1', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/manufacturer/server.crt", "url": "ca.manufacturer-net:7054"}, "cloud_provider": "azure", "country": "CH", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "Zurich", "name": "manufacturer", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/manufacturer/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain1", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "enabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.manufacturer-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.manufacturer-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "Zurich", "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': '/home/bevel/build/carrier/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net:7051', 'certificate': '/home/bevel/build/carrier/peer0.crt', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/carrier/server.crt", "url": "ca.carrier-net:7054"}, "cloud_provider": "azure", "country": "GB", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "carrier", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/carrier/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "disabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.carrier-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.carrier-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "London", "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}

TASK [waiting for the CA server to be created in supplychain-net] **************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/orderer/tasks/main.yaml:12
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in supplychain-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:11
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:28
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in supplychain-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:42
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2022-07-17T15:13:47Z", "generateName": "ca-5dddf59dd4-", "labels": {"app.kubernetes.io/instance": "supplychain-net-ca", "app.kubernetes.io/managed-by": "Helm", "app.kubernetes.io/name": "ca", "helm.sh/chart": "ca-0.2.0", "name": "ca", "pod-template-hash": "5dddf59dd4"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:app.kubernetes.io/instance": {}, "f:app.kubernetes.io/managed-by": {}, "f:app.kubernetes.io/name": {}, "f:helm.sh/chart": {}, "f:name": {}, "f:pod-template-hash": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"2f951138-9676-4028-91b9-726339f5f04f\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {"f:containers": {"k:{\"name\":\"ca\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"FABRIC_CA_HOME\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_CA_CERTFILE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_CA_KEYFILE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_CA_NAME\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_DB_DATASOURCE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_DEBUG\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_TLS_CERTFILE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_TLS_ENABLED\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_TLS_KEYFILE\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":7054,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:protocol": {}}, "k:{\"containerPort\":9443,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:protocol": {}}}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/custom-config/\"}": {".": {}, "f:mountPath": {}, "f:name": {}}, "k:{\"mountPath\":\"/etc/hyperledger/fabric-ca-server-config\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/var/hyperledger/fabric-ca-server/db/\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:imagePullSecrets": {".": {}, "k:{\"name\":\"regcred\"}": {".": {}, "f:name": {}}}, "f:initContainers": {".": {}, "k:{\"name\":\"ca-certs-init\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"KUBERNETES_AUTH_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"MOUNT_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ADDR\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_APP_ROLE\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/secret\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"ca-config-volume\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:items": {}, "f:name": {}}, "f:name": {}}, "k:{\"name\":\"ca-server-db\"}": {".": {}, "f:name": {}, "f:persistentVolumeClaim": {".": {}, "f:claimName": {}}}, "k:{\"name\":\"certificates\"}": {".": {}, "f:emptyDir": {".": {}, "f:medium": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T15:13:47Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {".": {}, "k:{\"type\":\"PodScheduled\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}}}, "manager": "kube-scheduler", "operation": "Update", "time": "2022-07-17T15:13:47Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:initContainerStatuses": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.29\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "time": "2022-07-17T15:14:26Z"}], "name": "ca-5dddf59dd4-wxrtg", "namespace": "supplychain-net", "ownerReferences": [{"apiVersion": "apps/v1", "blockOwnerDeletion": true, "controller": true, "kind": "ReplicaSet", "name": "ca-5dddf59dd4", "uid": "2f951138-9676-4028-91b9-726339f5f04f"}], "resourceVersion": "72075", "uid": "ed19455b-be3d-413f-965c-39aafaf6ebf6"}, "spec": {"containers": [{"args": ["#!/usr/bin/env sh\nif [[ -d /custom-config/ ]] && [[ -f /custom-config/fabric-ca-server-config.yaml ]]; then\n  cp /custom-config/fabric-ca-server-config.yaml $FABRIC_CA_HOME/fabric-ca-server-config.yaml\n  fabric-ca-server start --config $FABRIC_CA_HOME/fabric-ca-server-config.yaml -d\nelse\n  sleep 1 && fabric-ca-server start -b supplychain-admin:`cat /etc/hyperledger/fabric-ca-server-config/user_cred` -d\nfi"], "command": ["sh", "-c"], "env": [{"name": "FABRIC_CA_HOME", "value": "/etc/hyperledger/fabric-ca-server"}, {"name": "FABRIC_CA_SERVER_CA_NAME", "value": "ca.supplychain-net"}, {"name": "FABRIC_CA_SERVER_CA_CERTFILE", "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"}, {"name": "FABRIC_CA_SERVER_CA_KEYFILE", "value": "/etc/hyperledger/fabric-ca-server-config/server.key"}, {"name": "FABRIC_CA_SERVER_TLS_ENABLED", "value": "true"}, {"name": "FABRIC_CA_SERVER_DEBUG", "value": "true"}, {"name": "FABRIC_CA_SERVER_TLS_CERTFILE", "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"}, {"name": "FABRIC_CA_SERVER_TLS_KEYFILE", "value": "/etc/hyperledger/fabric-ca-server-config/server.key"}, {"name": "FABRIC_CA_SERVER_DB_DATASOURCE", "value": "/var/hyperledger/fabric-ca-server/db/fabric-ca-server.db"}, {"name": "FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS", "value": "0.0.0.0:9443"}], "image": "hyperledger/fabric-ca:1.4.8", "imagePullPolicy": "IfNotPresent", "name": "ca", "ports": [{"containerPort": 7054, "protocol": "TCP"}, {"containerPort": 9443, "protocol": "TCP"}], "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/etc/hyperledger/fabric-ca-server-config", "name": "certificates", "readOnly": true}, {"mountPath": "/var/hyperledger/fabric-ca-server/db/", "name": "ca-server-db"}, {"mountPath": "/custom-config/", "name": "ca-config-volume"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-n8w9t", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "imagePullSecrets": [{"name": "regcred"}], "initContainers": [{"args": ["#!/usr/bin/env sh\nvalidateVaultResponse () {\n  if echo ${2} | grep \"errors\"; then\n    echo \"ERROR: unable to retrieve ${1}: ${2}\"\n    exit 1\n  fi\n  if  [ \"$3\" == \"LOOKUPSECRETRESPONSE\" ]\n  then\n    http_code=$(curl -sS -o /dev/null -w \"%{http_code}\" \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key})\n    curl_response=$?\n    if test \"$http_code\" != \"200\" ; then\n        echo \"Http response code from Vault - $http_code\"\n        if test \"$curl_response\" != \"0\"; then\n           echo \"Error: curl command failed with error code - $curl_response\"\n           exit 1\n        fi\n    fi\n  fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')\nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nSECRET_CERT=secretv2/data/crypto/ordererOrganizations/supplychain-net/ca?ca.supplychain-net-cert.pem\nvault_secret_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data.data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.crt\n\nSECRET_KEY=secretv2/data/crypto/ordererOrganizations/supplychain-net/ca?supplychain-net-CA.key\nvault_secret_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data.data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.key\n\n\nSECRET_ADMIN_PASS=secretv2/data/credentials/supplychain-net/ca/supplychain?user\nvault_secret_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data.data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/user_cred"], "command": ["sh", "-c"], "env": [{"name": "VAULT_ADDR", "value": "http://20.197.63.209:8200"}, {"name": "KUBERNETES_AUTH_PATH", "value": "devsupplychain-net-auth"}, {"name": "VAULT_APP_ROLE", "value": "vault-role"}, {"name": "MOUNT_PATH", "value": "/secret"}], "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "imagePullPolicy": "IfNotPresent", "name": "ca-certs-init", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/secret", "name": "certificates"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-n8w9t", "readOnly": true}]}], "nodeName": "aks-agentpool-84293659-vmss000001", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "vault-auth", "serviceAccountName": "vault-auth", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"name": "ca-server-db", "persistentVolumeClaim": {"claimName": "ca-server-db-pvc"}}, {"emptyDir": {"medium": "Memory"}, "name": "certificates"}, {"configMap": {"defaultMode": 420, "items": [{"key": "fabric-ca-server-config.yaml", "path": "fabric-ca-server-config.yaml"}], "name": "ca-config"}, "name": "ca-config-volume"}, {"name": "kube-api-access-n8w9t", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:14:09Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:14:26Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:14:26Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:13:51Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://39446088aafd6273e1f3042a668646761092b8a3b4094758ebec3d3e16797ccf", "image": "docker.io/hyperledger/fabric-ca:1.4.8", "imageID": "docker.io/hyperledger/fabric-ca@sha256:51e5f7082530633dfd3512adf4dfd873cc8fa1675d7385003f213d1067c538d8", "lastState": {}, "name": "ca", "ready": true, "restartCount": 0, "started": true, "state": {"running": {"startedAt": "2022-07-17T15:14:25Z"}}}], "hostIP": "10.224.0.5", "initContainerStatuses": [{"containerID": "containerd://cac487584bd115254525ce7c1873123e364368dadb5c6ffe495fd4924899dfa6", "image": "docker.io/hyperledgerlabs/alpine-utils:1.0", "imageID": "docker.io/hyperledgerlabs/alpine-utils@sha256:cab1d1566ddaa28e482b5eeda7426791bdf607cee41e2b752ccc566553810f74", "lastState": {}, "name": "ca-certs-init", "ready": true, "restartCount": 0, "state": {"terminated": {"containerID": "containerd://cac487584bd115254525ce7c1873123e364368dadb5c6ffe495fd4924899dfa6", "exitCode": 0, "finishedAt": "2022-07-17T15:14:08Z", "reason": "Completed", "startedAt": "2022-07-17T15:14:08Z"}}}], "phase": "Running", "podIP": "10.244.0.29", "podIPs": [{"ip": "10.244.0.29"}], "qosClass": "BestEffort", "startTime": "2022-07-17T15:13:51Z"}}]}
META: role_complete for localhost

TASK [Create CA-tools Values for orderer] **************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/orderer/tasks/main.yaml:25

TASK [helm_component : Ensures /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/ca-tools dir exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:14
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/ca-tools", "size": 4096, "state": "directory", "uid": 0}

TASK [helm_component : create value file for supplychain-net] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:23
ok: [localhost] => {"changed": false, "checksum": "0495545897888fdf45662d3c486a389dc5b4570c", "dest": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/ca-tools/supplychain-net.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/ca-tools/supplychain-net.yaml", "size": 2372, "state": "file", "uid": 0}

TASK [Helm lint] ***************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:32

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
ok: [localhost] => {"changed": false, "stat": {"atime": 1658071027.1984775, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "checksum": "0495545897888fdf45662d3c486a389dc5b4570c", "ctime": 1658071026.7104785, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 3883022, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658071026.482479, "nlink": 1, "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/ca-tools/supplychain-net.yaml", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 2372, "uid": 0, "version": "3305116303", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [Check or create test directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:22

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"atime": 1658074423.378228, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "ctime": 1658074537.7336972, "dev": 64513, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626754, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658074537.7336972, "nlink": 2, "path": "./build/test", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "version": "4197237393", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:31
ok: [localhost] => {"ansible_facts": {"apiVersion": "helm.fluxcd.io/v1", "kind": "HelmRelease", "metadata": {"annotations": {"fluxcd.io/automated": "false"}, "name": "supplychain-net-ca-tools", "namespace": "supplychain-net"}, "spec": {"chart": {"git": "ssh://git@github.com/adityajoshi12/bevel.git", "path": "platforms/hyperledger-fabric/charts/catools", "ref": "test"}, "releaseName": "supplychain-net-ca-tools", "values": {"annotations": {"deployment": null, "pvc": null, "service": null}, "healthcheck": {"retries": 10, "sleepTimeAfterError": 2}, "image": {"alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "pullPolicy": "IfNotPresent", "repository": "hyperledger/fabric-ca-tools", "tag": "1.2.1"}, "metadata": {"component_type": "orderer", "name": "ca-tools", "namespace": "supplychain-net", "org_name": "supplychain", "proxy": "none"}, "orderers": {"name": "orderer1-"}, "org_data": {"ca_url": "ca.supplychain-net:7054", "cert_subject": "O=Orderer/L=51.50,-0.13,London/C=GB", "component_country": "UK", "component_location": "London", "component_state": "London", "component_subject": "O=Orderer,L=51.50/-0.13/London,C=GB", "external_url_suffix": "develop.local.com"}, "replicaCount": 1, "storage": {"storageclassname": "supplychainsc", "storagesize": "512Mi"}, "vault": {"address": "http://20.197.63.209:8200", "authpath": "devsupplychain-net-auth", "imagesecretname": "regcred", "role": "vault-role", "secretambassador": "secretv2/data/crypto/ordererOrganizations/supplychain-net/ambassador", "secretcert": "secretv2/data/crypto/ordererOrganizations/supplychain-net/ca?ca.supplychain-net-cert.pem", "secretconfigfile": "secretv2/data/crypto/ordererOrganizations/supplychain-net/msp/config", "secretcouchdb": "secretv2/data/credentials/supplychain-net/couchdb/supplychain", "secretkey": "secretv2/data/crypto/ordererOrganizations/supplychain-net/ca?supplychain-net-CA.key", "secretmsp": "secretv2/data/crypto/ordererOrganizations/supplychain-net/users/admin/msp", "secretorderer": "secretv2/data/crypto/ordererOrganizations/supplychain-net/orderers", "secretpeer": "secretv2/data/crypto/ordererOrganizations/supplychain-net/peers", "secretpeerorderertls": "secretv2/data/crypto/ordererOrganizations/supplychain-net/orderer/tls", "secrettls": "secretv2/data/crypto/ordererOrganizations/supplychain-net/users/admin/tls", "serviceaccountname": "vault-auth"}}}}, "ansible_included_var_files": ["/home/bevel/platforms/hyperledger-fabric/releases/dev/supplychain/ca-tools/supplychain-net.yaml"], "changed": false}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:36
ok: [localhost] => {"changed": false, "checksum": "4b9a258c05e003b2771ab3492f3a7b8de0dc3bbe", "dest": "./build/test/supplychain-net-ca-tools.yaml", "gid": 0, "group": "root", "md5sum": "efba52acfbde147eebb870c43f9ae5ad", "mode": "0644", "owner": "root", "size": 1890, "src": "/root/.ansible/tmp/ansible-tmp-1658074568.7603998-35401-156087140300729/source", "state": "file", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:42
changed: [localhost] => {"changed": true, "cmd": "helm lint -f \"./build/test/supplychain-net-ca-tools.yaml\" \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\"\n", "delta": "0:00:00.113119", "end": "2022-07-17 16:16:09.765867", "msg": "", "rc": 0, "start": "2022-07-17 16:16:09.652748", "stderr": "", "stderr_lines": [], "stdout": "==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, 0 chart(s) failed", "stdout_lines": ["==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools", "[INFO] Chart.yaml: icon is recommended", "", "1 chart(s) linted, 0 chart(s) failed"]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/orderer/tasks/main.yaml:49

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA-tools files\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.491901", "end": "2022-07-17 16:16:13.227457", "msg": "", "rc": 0, "start": "2022-07-17 16:16:10.735556", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   522bdde..23527e1  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   522bdde..23527e1  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main 23527e1] [ci skip] Pushing CA-tools files\n 1 file changed, 200 insertions(+)", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main 23527e1] [ci skip] Pushing CA-tools files", " 1 file changed, 200 insertions(+)"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main 23527e1] [ci skip] Pushing CA-tools files",
        " 1 file changed, 200 insertions(+)"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   522bdde..23527e1  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost

TASK [Wait for CA key exists in vault.] ****************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/orderer/tasks/main.yaml:60
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
changed: [localhost] => {"attempts": 1, "changed": true, "cmd": "vault kv get -field=supplychain-net-CA.key secretv2/crypto/ordererOrganizations/supplychain-net/ca\n", "delta": "0:00:00.212697", "end": "2022-07-17 16:16:14.803804", "msg": "", "rc": 0, "start": "2022-07-17 16:16:14.591107", "stderr": "", "stderr_lines": [], "stdout": "-----BEGIN EC PRIVATE KEY-----\nMHcCAQEEIEvjBGe148WQOhCXCEt/uVQWuAzXUwLY07f4PCP3Zop7oAoGCCqGSM49\nAwEHoUQDQgAEAO6su5jtV8hvMqeldYI0NoeNl6PS2qCOMju1bHe2BOwxIFYwD1Vk\nIa0b/v4OfjyUxqKzWn/3//nSIklwqtzgxQ==\n-----END EC PRIVATE KEY-----", "stdout_lines": ["-----BEGIN EC PRIVATE KEY-----", "MHcCAQEEIEvjBGe148WQOhCXCEt/uVQWuAzXUwLY07f4PCP3Zop7oAoGCCqGSM49", "AwEHoUQDQgAEAO6su5jtV8hvMqeldYI0NoeNl6PS2qCOMju1bHe2BOwxIFYwD1Vk", "Ia0b/v4OfjyUxqKzWn/3//nSIklwqtzgxQ==", "-----END EC PRIVATE KEY-----"]}
META: role_complete for localhost

TASK [Wait for admin tls exists in vault.] *************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/orderer/tasks/main.yaml:69
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
changed: [localhost] => {"attempts": 1, "changed": true, "cmd": "vault kv get -field=client.key secretv2/crypto/ordererOrganizations/supplychain-net/users/admin/tls\n", "delta": "0:00:00.366336", "end": "2022-07-17 16:16:16.667390", "msg": "", "rc": 0, "start": "2022-07-17 16:16:16.301054", "stderr": "", "stderr_lines": [], "stdout": "-----BEGIN PRIVATE KEY-----\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg5f0dDFgt/hd6P42/\njDM+p+nGHKAwcq7kkyOn5e0zixKhRANCAAS3I5q8gZ2b7DHdbSlbnnqQnQa2ddg6\nBBMzusz17VbZwgEkZCKNksBfmeS7Q1UWoNiLPPReoQNZOvi7zRq71AhF\n-----END PRIVATE KEY-----", "stdout_lines": ["-----BEGIN PRIVATE KEY-----", "MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg5f0dDFgt/hd6P42/", "jDM+p+nGHKAwcq7kkyOn5e0zixKhRANCAAS3I5q8gZ2b7DHdbSlbnnqQnQa2ddg6", "BBMzusz17VbZwgEkZCKNksBfmeS7Q1UWoNiLPPReoQNZOvi7zRq71AhF", "-----END PRIVATE KEY-----"]}
META: role_complete for localhost

TASK [Wait for orderers tls exists in vault.] **********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/orderer/tasks/main.yaml:78
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
changed: [localhost] => {"attempts": 1, "changed": true, "cmd": "vault kv get -field=server.key secretv2/crypto/ordererOrganizations/supplychain-net/orderers/orderer1.supplychain-net/tls\n", "delta": "0:00:00.275485", "end": "2022-07-17 16:16:18.632912", "msg": "", "rc": 0, "start": "2022-07-17 16:16:18.357427", "stderr": "", "stderr_lines": [], "stdout": "-----BEGIN PRIVATE KEY-----\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgAJt22IKrBDp+g2XB\ndw3LktxGQbR5bDDqXZI1nRv+LAahRANCAARm7ZQi2JGljn1S79nfV4FilRmSdWdC\nAjPibCCHsxYS70m1cZFhK3X2dAseI7PhT3ZiQiV6G/LOGl4PRc2e8VrW\n-----END PRIVATE KEY-----", "stdout_lines": ["-----BEGIN PRIVATE KEY-----", "MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgAJt22IKrBDp+g2XB", "dw3LktxGQbR5bDDqXZI1nRv+LAahRANCAARm7ZQi2JGljn1S79nfV4FilRmSdWdC", "AjPibCCHsxYS70m1cZFhK3X2dAseI7PhT3ZiQiV6G/LOGl4PRc2e8VrW", "-----END PRIVATE KEY-----"]}
META: role_complete for localhost

TASK [Wait for ambassador key exists in vault.] ********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/orderer/tasks/main.yaml:90
skipping: [localhost] => (item={'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}})  => {"ansible_loop_var": "orderer", "changed": false, "orderer": {"consensus": "raft", "grpc": {"port": 7050}, "name": "orderer1", "orderer": null, "type": "orderer"}, "skip_reason": "Conditional result was False"}

TASK [Create the Ambassador credentials for orderers] **************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/orderer/tasks/main.yaml:104
skipping: [localhost] => (item={'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}})  => {"ansible_loop_var": "orderer", "changed": false, "orderer": {"consensus": "raft", "grpc": {"port": 7050}, "name": "orderer1", "orderer": null, "type": "orderer"}, "skip_reason": "Conditional result was False"}

TASK [create/ca-tools/orderer : Copy the msp folder from the ca tools] *********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/orderer/tasks/main.yaml:120
changed: [localhost] => {"changed": true, "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/home/bevel/build/config  kubectl get po -n supplychain-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/home/bevel/build/config kubectl cp supplychain-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/supplychain-net/msp ./build/crypto-config/ordererOrganizations/supplychain-net/msp\n", "delta": "0:00:01.612890", "end": "2022-07-17 16:16:21.034123", "msg": "", "rc": 0, "start": "2022-07-17 16:16:19.421233", "stderr": "", "stderr_lines": [], "stdout": "Defaulting container name to ca-tools.", "stdout_lines": ["Defaulting container name to ca-tools."]}

TASK [create/ca-tools/orderer : Copy the tls server.crt file from the ca tools] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/orderer/tasks/main.yaml:128
changed: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'supplychain', 'uri': 'orderer1.supplychain-net:7050', 'certificate': '/home/bevel/build/orderer1.crt'}) => {"ansible_loop_var": "orderer", "changed": true, "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/home/bevel/build/config  kubectl get po -n supplychain-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/home/bevel/build/config kubectl cp supplychain-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/supplychain-net/orderers/orderer1.supplychain-net/tls/server.crt ./build/crypto-config/ordererOrganizations/supplychain-net/orderers/orderer1.supplychain-net/tls/server.crt\n", "delta": "0:00:00.966162", "end": "2022-07-17 16:16:22.781280", "msg": "", "orderer": {"certificate": "/home/bevel/build/orderer1.crt", "name": "orderer1", "orderer": null, "org_name": "supplychain", "type": "orderer", "uri": "orderer1.supplychain-net:7050"}, "rc": 0, "start": "2022-07-17 16:16:21.815118", "stderr": "", "stderr_lines": [], "stdout": "Defaulting container name to ca-tools.", "stdout_lines": ["Defaulting container name to ca-tools."]}

TASK [create/ca-tools/orderer : Create the certs directory if it does not exist] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/orderer/tasks/main.yaml:137
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'supplychain', 'uri': 'orderer1.supplychain-net:7050', 'certificate': '/home/bevel/build/orderer1.crt'}) => {"ansible_loop_var": "orderer", "changed": false, "gid": 1000, "group": "1000", "mode": "0777", "orderer": {"certificate": "/home/bevel/build/orderer1.crt", "name": "orderer1", "orderer": null, "org_name": "supplychain", "type": "orderer", "uri": "orderer1.supplychain-net:7050"}, "owner": "1000", "path": "/home/bevel/build", "size": 4096, "state": "directory", "uid": 1000}

TASK [create/ca-tools/orderer : Copy the tls ca.crt file from the ca tools] ****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/orderer/tasks/main.yaml:149
changed: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'supplychain', 'uri': 'orderer1.supplychain-net:7050', 'certificate': '/home/bevel/build/orderer1.crt'}) => {"ansible_loop_var": "orderer", "changed": true, "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/home/bevel/build/config  kubectl get po -n supplychain-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/home/bevel/build/config kubectl cp supplychain-net/${CA_TOOL_CLI}:crypto-config/ordererOrganizations/supplychain-net/orderers/orderer1.supplychain-net/tls/ca.crt  /home/bevel/build/orderer1.crt\n", "delta": "0:00:01.122747", "end": "2022-07-17 16:16:25.173770", "msg": "", "orderer": {"certificate": "/home/bevel/build/orderer1.crt", "name": "orderer1", "orderer": null, "org_name": "supplychain", "type": "orderer", "uri": "orderer1.supplychain-net:7050"}, "rc": 0, "start": "2022-07-17 16:16:24.051023", "stderr": "", "stderr_lines": [], "stdout": "Defaulting container name to ca-tools.", "stdout_lines": ["Defaulting container name to ca-tools."]}
META: role_complete for localhost

TASK [Create CA tools for each organization] ***********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:113
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.supplychain-net:7054', 'certificate': '/home/bevel/build/supplychain/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft'}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/supplychain/server.crt", "url": "ca.supplychain-net:7054"}, "cloud_provider": "azure", "country": "UK", "external_url_suffix": "develop.local.com", "fabric_console": "enabled", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "supplychain", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net", "type": "ca"}, "consensus": {"name": "raft"}, "orderers": [{"consensus": "raft", "grpc": {"port": 7050}, "name": "orderer1", "orderer": null, "type": "orderer"}]}, "state": "London", "subject": "O=Orderer,L=51.50/-0.13/London,C=GB", "type": "orderer", "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}

TASK [waiting for the CA server to be created in manufacturer-net] *************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:12

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in manufacturer-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:11
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:28
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in manufacturer-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:42
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2022-07-17T15:15:49Z", "generateName": "ca-5c755d546b-", "labels": {"app.kubernetes.io/instance": "manufacturer-net-ca", "app.kubernetes.io/managed-by": "Helm", "app.kubernetes.io/name": "ca", "helm.sh/chart": "ca-0.2.0", "name": "ca", "pod-template-hash": "5c755d546b"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:app.kubernetes.io/instance": {}, "f:app.kubernetes.io/managed-by": {}, "f:app.kubernetes.io/name": {}, "f:helm.sh/chart": {}, "f:name": {}, "f:pod-template-hash": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"d190a58e-e477-4ef3-9b45-d48d00206dda\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {"f:containers": {"k:{\"name\":\"ca\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"FABRIC_CA_HOME\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_CA_CERTFILE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_CA_KEYFILE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_CA_NAME\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_DB_DATASOURCE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_DEBUG\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_TLS_CERTFILE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_TLS_ENABLED\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_TLS_KEYFILE\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":7054,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:protocol": {}}, "k:{\"containerPort\":9443,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:protocol": {}}}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/custom-config/\"}": {".": {}, "f:mountPath": {}, "f:name": {}}, "k:{\"mountPath\":\"/etc/hyperledger/fabric-ca-server-config\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/var/hyperledger/fabric-ca-server/db/\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:imagePullSecrets": {".": {}, "k:{\"name\":\"regcred\"}": {".": {}, "f:name": {}}}, "f:initContainers": {".": {}, "k:{\"name\":\"ca-certs-init\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"KUBERNETES_AUTH_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"MOUNT_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ADDR\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_APP_ROLE\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/secret\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"ca-config-volume\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:items": {}, "f:name": {}}, "f:name": {}}, "k:{\"name\":\"ca-server-db\"}": {".": {}, "f:name": {}, "f:persistentVolumeClaim": {".": {}, "f:claimName": {}}}, "k:{\"name\":\"certificates\"}": {".": {}, "f:emptyDir": {".": {}, "f:medium": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T15:15:49Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {".": {}, "k:{\"type\":\"PodScheduled\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}}}, "manager": "kube-scheduler", "operation": "Update", "time": "2022-07-17T15:15:49Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:initContainerStatuses": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.31\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "time": "2022-07-17T15:16:12Z"}], "name": "ca-5c755d546b-hjmqq", "namespace": "manufacturer-net", "ownerReferences": [{"apiVersion": "apps/v1", "blockOwnerDeletion": true, "controller": true, "kind": "ReplicaSet", "name": "ca-5c755d546b", "uid": "d190a58e-e477-4ef3-9b45-d48d00206dda"}], "resourceVersion": "72516", "uid": "0fa3126d-7e21-4b08-8da8-471b799bf069"}, "spec": {"containers": [{"args": ["#!/usr/bin/env sh\nif [[ -d /custom-config/ ]] && [[ -f /custom-config/fabric-ca-server-config.yaml ]]; then\n  cp /custom-config/fabric-ca-server-config.yaml $FABRIC_CA_HOME/fabric-ca-server-config.yaml\n  fabric-ca-server start --config $FABRIC_CA_HOME/fabric-ca-server-config.yaml -d\nelse\n  sleep 1 && fabric-ca-server start -b manufacturer-admin:`cat /etc/hyperledger/fabric-ca-server-config/user_cred` -d\nfi"], "command": ["sh", "-c"], "env": [{"name": "FABRIC_CA_HOME", "value": "/etc/hyperledger/fabric-ca-server"}, {"name": "FABRIC_CA_SERVER_CA_NAME", "value": "ca.manufacturer-net"}, {"name": "FABRIC_CA_SERVER_CA_CERTFILE", "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"}, {"name": "FABRIC_CA_SERVER_CA_KEYFILE", "value": "/etc/hyperledger/fabric-ca-server-config/server.key"}, {"name": "FABRIC_CA_SERVER_TLS_ENABLED", "value": "true"}, {"name": "FABRIC_CA_SERVER_DEBUG", "value": "true"}, {"name": "FABRIC_CA_SERVER_TLS_CERTFILE", "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"}, {"name": "FABRIC_CA_SERVER_TLS_KEYFILE", "value": "/etc/hyperledger/fabric-ca-server-config/server.key"}, {"name": "FABRIC_CA_SERVER_DB_DATASOURCE", "value": "/var/hyperledger/fabric-ca-server/db/fabric-ca-server.db"}, {"name": "FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS", "value": "0.0.0.0:9443"}], "image": "hyperledger/fabric-ca:1.4.8", "imagePullPolicy": "IfNotPresent", "name": "ca", "ports": [{"containerPort": 7054, "protocol": "TCP"}, {"containerPort": 9443, "protocol": "TCP"}], "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/etc/hyperledger/fabric-ca-server-config", "name": "certificates", "readOnly": true}, {"mountPath": "/var/hyperledger/fabric-ca-server/db/", "name": "ca-server-db"}, {"mountPath": "/custom-config/", "name": "ca-config-volume"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-ln64m", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "imagePullSecrets": [{"name": "regcred"}], "initContainers": [{"args": ["#!/usr/bin/env sh\nvalidateVaultResponse () {\n  if echo ${2} | grep \"errors\"; then\n    echo \"ERROR: unable to retrieve ${1}: ${2}\"\n    exit 1\n  fi\n  if  [ \"$3\" == \"LOOKUPSECRETRESPONSE\" ]\n  then\n    http_code=$(curl -sS -o /dev/null -w \"%{http_code}\" \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key})\n    curl_response=$?\n    if test \"$http_code\" != \"200\" ; then\n        echo \"Http response code from Vault - $http_code\"\n        if test \"$curl_response\" != \"0\"; then\n           echo \"Error: curl command failed with error code - $curl_response\"\n           exit 1\n        fi\n    fi\n  fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')\nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nSECRET_CERT=secretv2/data/crypto/peerOrganizations/manufacturer-net/ca?ca.manufacturer-net-cert.pem\nvault_secret_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data.data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.crt\n\nSECRET_KEY=secretv2/data/crypto/peerOrganizations/manufacturer-net/ca?manufacturer-net-CA.key\nvault_secret_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data.data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.key\n\n\nSECRET_ADMIN_PASS=secretv2/data/credentials/manufacturer-net/ca/manufacturer?user\nvault_secret_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data.data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/user_cred"], "command": ["sh", "-c"], "env": [{"name": "VAULT_ADDR", "value": "http://20.197.63.209:8200"}, {"name": "KUBERNETES_AUTH_PATH", "value": "devmanufacturer-net-auth"}, {"name": "VAULT_APP_ROLE", "value": "vault-role"}, {"name": "MOUNT_PATH", "value": "/secret"}], "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "imagePullPolicy": "IfNotPresent", "name": "ca-certs-init", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/secret", "name": "certificates"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-ln64m", "readOnly": true}]}], "nodeName": "aks-agentpool-84293659-vmss000001", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "vault-auth", "serviceAccountName": "vault-auth", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"name": "ca-server-db", "persistentVolumeClaim": {"claimName": "ca-server-db-pvc"}}, {"emptyDir": {"medium": "Memory"}, "name": "certificates"}, {"configMap": {"defaultMode": 420, "items": [{"key": "fabric-ca-server-config.yaml", "path": "fabric-ca-server-config.yaml"}], "name": "ca-config"}, "name": "ca-config-volume"}, {"name": "kube-api-access-ln64m", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:16:11Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:16:12Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:16:12Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:15:53Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://58c6225daf57856c3dd679353bab7814815919e50e782e0c65c090297370e8cb", "image": "docker.io/hyperledger/fabric-ca:1.4.8", "imageID": "docker.io/hyperledger/fabric-ca@sha256:51e5f7082530633dfd3512adf4dfd873cc8fa1675d7385003f213d1067c538d8", "lastState": {}, "name": "ca", "ready": true, "restartCount": 0, "started": true, "state": {"running": {"startedAt": "2022-07-17T15:16:11Z"}}}], "hostIP": "10.224.0.5", "initContainerStatuses": [{"containerID": "containerd://fba5fc52673c7491fc0c6cad154e3b5cc36ad612a45959a0fc874ebc4b80c41f", "image": "docker.io/hyperledgerlabs/alpine-utils:1.0", "imageID": "docker.io/hyperledgerlabs/alpine-utils@sha256:cab1d1566ddaa28e482b5eeda7426791bdf607cee41e2b752ccc566553810f74", "lastState": {}, "name": "ca-certs-init", "ready": true, "restartCount": 0, "state": {"terminated": {"containerID": "containerd://fba5fc52673c7491fc0c6cad154e3b5cc36ad612a45959a0fc874ebc4b80c41f", "exitCode": 0, "finishedAt": "2022-07-17T15:16:10Z", "reason": "Completed", "startedAt": "2022-07-17T15:16:10Z"}}}], "phase": "Running", "podIP": "10.244.0.31", "podIPs": [{"ip": "10.244.0.31"}], "qosClass": "BestEffort", "startTime": "2022-07-17T15:15:53Z"}}]}
META: role_complete for localhost

TASK [create/ca-tools/peer : Check that orderer-certificate file exists] *******
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:24
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'supplychain', 'uri': 'orderer1.supplychain-net:7050', 'certificate': '/home/bevel/build/orderer1.crt'}) => {"ansible_loop_var": "orderer", "changed": false, "failed_when_result": false, "orderer": {"certificate": "/home/bevel/build/orderer1.crt", "name": "orderer1", "orderer": null, "org_name": "supplychain", "type": "orderer", "uri": "orderer1.supplychain-net:7050"}, "stat": {"atime": 1658071166.0701423, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "checksum": "7c2e2fb7ceb9bea39597db031d8ee14956258774", "ctime": 1658074585.1654816, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 2072885, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658074585.1654816, "nlink": 1, "path": "/home/bevel/build/orderer1.crt", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 757, "uid": 0, "version": "2876949908", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [create/ca-tools/peer : Check if Orderer certs exist in Vault] ************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:36
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'supplychain', 'uri': 'orderer1.supplychain-net:7050', 'certificate': '/home/bevel/build/orderer1.crt'}) => {"ansible_loop_var": "orderer", "changed": false, "cmd": "vault kv get -field=ca.crt secretv2/crypto/peerOrganizations/manufacturer-net/orderer/tls\n", "delta": "0:00:00.304537", "end": "2022-07-17 16:16:30.238038", "msg": "", "orderer": {"certificate": "/home/bevel/build/orderer1.crt", "name": "orderer1", "orderer": null, "org_name": "supplychain", "type": "orderer", "uri": "orderer1.supplychain-net:7050"}, "rc": 0, "start": "2022-07-17 16:16:29.933501", "stderr": "", "stderr_lines": [], "stdout": "-----BEGIN CERTIFICATE-----\nMIICATCCAaagAwIBAgIUOLdDsOd/KOnv7plbQLmfSD7mbu8wCgYIKoZIzj0EAwIw\nXjELMAkGA1UEBhMCR0IxDzANBgNVBAgMBkxvbmRvbjEPMA0GA1UEBwwGTG9uZG9u\nMRAwDgYDVQQKDAdPcmRlcmVyMRswGQYDVQQDDBJjYS5zdXBwbHljaGFpbi1uZXQw\nHhcNMjIwNzE3MTUxMTQ4WhcNMjUwNTA2MTUxMTQ4WjBeMQswCQYDVQQGEwJHQjEP\nMA0GA1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xEDAOBgNVBAoMB09yZGVy\nZXIxGzAZBgNVBAMMEmNhLnN1cHBseWNoYWluLW5ldDBZMBMGByqGSM49AgEGCCqG\nSM49AwEHA0IABADurLuY7VfIbzKnpXWCNDaHjZej0tqgjjI7tWx3tgTsMSBWMA9V\nZCGtG/7+Dn48lMais1p/9//50iJJcKrc4MWjQjBAMA8GA1UdEwEB/wQFMAMBAf8w\nDgYDVR0PAQH/BAQDAgGmMB0GA1UdDgQWBBTXQxbFyQYSidZ5SdZPfX6hActTtTAK\nBggqhkjOPQQDAgNJADBGAiEAlWEVqyE9YnsNjE8OGRSIcc3dkxxcSRwncMj989Sh\nQOgCIQCK6hBheX7X2QOu9yLbFB1ojPf1htqb++WXLFC8NNjAJA==\n-----END CERTIFICATE-----", "stdout_lines": ["-----BEGIN CERTIFICATE-----", "MIICATCCAaagAwIBAgIUOLdDsOd/KOnv7plbQLmfSD7mbu8wCgYIKoZIzj0EAwIw", "XjELMAkGA1UEBhMCR0IxDzANBgNVBAgMBkxvbmRvbjEPMA0GA1UEBwwGTG9uZG9u", "MRAwDgYDVQQKDAdPcmRlcmVyMRswGQYDVQQDDBJjYS5zdXBwbHljaGFpbi1uZXQw", "HhcNMjIwNzE3MTUxMTQ4WhcNMjUwNTA2MTUxMTQ4WjBeMQswCQYDVQQGEwJHQjEP", "MA0GA1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xEDAOBgNVBAoMB09yZGVy", "ZXIxGzAZBgNVBAMMEmNhLnN1cHBseWNoYWluLW5ldDBZMBMGByqGSM49AgEGCCqG", "SM49AwEHA0IABADurLuY7VfIbzKnpXWCNDaHjZej0tqgjjI7tWx3tgTsMSBWMA9V", "ZCGtG/7+Dn48lMais1p/9//50iJJcKrc4MWjQjBAMA8GA1UdEwEB/wQFMAMBAf8w", "DgYDVR0PAQH/BAQDAgGmMB0GA1UdDgQWBBTXQxbFyQYSidZ5SdZPfX6hActTtTAK", "BggqhkjOPQQDAgNJADBGAiEAlWEVqyE9YnsNjE8OGRSIcc3dkxxcSRwncMj989Sh", "QOgCIQCK6hBheX7X2QOu9yLbFB1ojPf1htqb++WXLFC8NNjAJA==", "-----END CERTIFICATE-----"]}

TASK [create/ca-tools/peer : Save Orderer certs if not in Vault] ***************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:51
changed: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'supplychain', 'uri': 'orderer1.supplychain-net:7050', 'certificate': '/home/bevel/build/orderer1.crt'}) => {"ansible_loop_var": "orderer", "changed": true, "checksum": "0a3ebd32607a5cbd837f55d7ed65cfb1f7fbf6c4", "dest": "/home/bevel/build/orderer1.crt", "gid": 0, "group": "root", "md5sum": "7e2d02e8ef4735a63096866d79f5be5f", "mode": "0644", "orderer": {"certificate": "/home/bevel/build/orderer1.crt", "name": "orderer1", "orderer": null, "org_name": "supplychain", "type": "orderer", "uri": "orderer1.supplychain-net:7050"}, "owner": "root", "size": 756, "src": "/root/.ansible/tmp/ansible-tmp-1658074590.5160573-35975-70737856773637/source", "state": "file", "uid": 0}

TASK [create/ca-tools/peer : Create the certs directory if it does not exist] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:62
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../charts/catools/certs", "size": 4096, "state": "directory", "uid": 0}

TASK [create/ca-tools/peer : Copy the tls orderers certs to the chart catools directory] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:69
changed: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'supplychain', 'uri': 'orderer1.supplychain-net:7050', 'certificate': '/home/bevel/build/orderer1.crt'}) => {"ansible_loop_var": "orderer", "changed": true, "cmd": "cp /home/bevel/build/orderer1.crt /home/bevel/platforms/hyperledger-fabric/configuration/../charts/catools/certs/orderer1-ca.crt\n", "delta": "0:00:00.026685", "end": "2022-07-17 16:16:33.182593", "msg": "", "orderer": {"certificate": "/home/bevel/build/orderer1.crt", "name": "orderer1", "orderer": null, "org_name": "supplychain", "type": "orderer", "uri": "orderer1.supplychain-net:7050"}, "rc": 0, "start": "2022-07-17 16:16:33.155908", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [Create CA-tools Values for peer] *****************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:78

TASK [helm_component : Ensures /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/ca-tools dir exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:14
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/ca-tools", "size": 4096, "state": "directory", "uid": 0}

TASK [helm_component : create value file for manufacturer-net] *****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:23
ok: [localhost] => {"changed": false, "checksum": "df2a22a3393af30481c9df68034fb5725e95d46d", "dest": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/ca-tools/manufacturer-net.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/ca-tools/manufacturer-net.yaml", "size": 2586, "state": "file", "uid": 0}

TASK [Helm lint] ***************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:32

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
ok: [localhost] => {"changed": false, "stat": {"atime": 1658071168.8581355, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "checksum": "df2a22a3393af30481c9df68034fb5725e95d46d", "ctime": 1658071168.4741364, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 4916216, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658071168.262137, "nlink": 1, "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/ca-tools/manufacturer-net.yaml", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 2586, "uid": 0, "version": "2405500499", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [Check or create test directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:22

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"atime": 1658074423.378228, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "ctime": 1658074569.2935536, "dev": 64513, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626754, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658074569.2935536, "nlink": 2, "path": "./build/test", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "version": "4197237393", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:31
ok: [localhost] => {"ansible_facts": {"apiVersion": "helm.fluxcd.io/v1", "kind": "HelmRelease", "metadata": {"annotations": {"fluxcd.io/automated": "false"}, "name": "manufacturer-net-ca-tools", "namespace": "manufacturer-net"}, "spec": {"chart": {"git": "ssh://git@github.com/adityajoshi12/bevel.git", "path": "platforms/hyperledger-fabric/charts/catools", "ref": "test"}, "releaseName": "manufacturer-net-ca-tools", "values": {"annotations": {"deployment": null, "pvc": null, "service": null}, "checks": {"refresh_cert_value": false}, "healthcheck": {"retries": 10, "sleepTimeAfterError": 2}, "image": {"alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "pullPolicy": "IfNotPresent", "repository": "hyperledger/fabric-ca-tools", "tag": "1.2.1"}, "metadata": {"component_type": "peer", "name": "ca-tools", "namespace": "manufacturer-net", "org_name": "manufacturer", "proxy": "none"}, "orderers": {"name": "orderer1-"}, "orderers_info": [{"name": "orderer1", "path": "certs/orderer1-ca.crt"}], "org_data": {"ca_url": "ca.manufacturer-net:7054", "cert_subject": "O=Manufacturer/OU=Manufacturer/L=47.38,8.54,Zurich/C=CH", "component_country": "CH", "component_location": "Zurich", "component_state": "Zurich", "component_subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH", "external_url_suffix": "develop.local.com"}, "peer_count": "1", "peers": {"name": "peer0,-"}, "replicaCount": 1, "storage": {"storageclassname": "manufacturersc", "storagesize": "512Mi"}, "vault": {"address": "http://20.197.63.209:8200", "authpath": "devmanufacturer-net-auth", "imagesecretname": "regcred", "role": "vault-role", "secretambassador": "secretv2/data/crypto/peerOrganizations/manufacturer-net/ambassador", "secretcert": "secretv2/data/crypto/peerOrganizations/manufacturer-net/ca?ca.manufacturer-net-cert.pem", "secretconfigfile": "secretv2/data/crypto/peerOrganizations/manufacturer-net/msp/config", "secretcouchdb": "secretv2/data/credentials/manufacturer-net/couchdb/manufacturer", "secretkey": "secretv2/data/crypto/peerOrganizations/manufacturer-net/ca?manufacturer-net-CA.key", "secretmsp": "secretv2/data/crypto/peerOrganizations/manufacturer-net/users/admin/msp", "secretorderer": "secretv2/data/crypto/peerOrganizations/manufacturer-net/orderers", "secretpeer": "secretv2/data/crypto/peerOrganizations/manufacturer-net/peers", "secretpeerorderertls": "secretv2/data/crypto/peerOrganizations/manufacturer-net/orderer/tls", "secrettls": "secretv2/data/crypto/peerOrganizations/manufacturer-net/users/admin/tls", "serviceaccountname": "vault-auth"}}}}, "ansible_included_var_files": ["/home/bevel/platforms/hyperledger-fabric/releases/dev/manufacturer/ca-tools/manufacturer-net.yaml"], "changed": false}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:36
ok: [localhost] => {"changed": false, "checksum": "15dee2b9a8f848417c6935fb7b527dc666eaccbd", "dest": "./build/test/manufacturer-net-ca-tools.yaml", "gid": 0, "group": "root", "md5sum": "95579519c3afd3959e2438f25f015add", "mode": "0644", "owner": "root", "size": 2063, "src": "/root/.ansible/tmp/ansible-tmp-1658074598.1434186-36204-242731067144367/source", "state": "file", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:42
changed: [localhost] => {"changed": true, "cmd": "helm lint -f \"./build/test/manufacturer-net-ca-tools.yaml\" \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\"\n", "delta": "0:00:00.192228", "end": "2022-07-17 16:16:39.929157", "msg": "", "rc": 0, "start": "2022-07-17 16:16:39.736929", "stderr": "coalesce.go:200: warning: cannot overwrite table with non table for orderers_info (map[])", "stderr_lines": ["coalesce.go:200: warning: cannot overwrite table with non table for orderers_info (map[])"], "stdout": "==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, 0 chart(s) failed", "stdout_lines": ["==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools", "[INFO] Chart.yaml: icon is recommended", "", "1 chart(s) linted, 0 chart(s) failed"]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:105

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA-tools files\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.658172", "end": "2022-07-17 16:16:44.040274", "msg": "", "rc": 0, "start": "2022-07-17 16:16:41.382102", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   23527e1..3feecad  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   23527e1..3feecad  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main 3feecad] [ci skip] Pushing CA-tools files\n 2 files changed, 280 insertions(+), 1 deletion(-)", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main 3feecad] [ci skip] Pushing CA-tools files", " 2 files changed, 280 insertions(+), 1 deletion(-)"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main 3feecad] [ci skip] Pushing CA-tools files",
        " 2 files changed, 280 insertions(+), 1 deletion(-)"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   23527e1..3feecad  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost

TASK [Wait for CA key exists in vault.] ****************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:116

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
changed: [localhost] => {"attempts": 1, "changed": true, "cmd": "vault kv get -field=manufacturer-net-CA.key secretv2/crypto/peerOrganizations/manufacturer-net/ca\n", "delta": "0:00:00.376761", "end": "2022-07-17 16:16:47.211566", "msg": "", "rc": 0, "start": "2022-07-17 16:16:46.834805", "stderr": "", "stderr_lines": [], "stdout": "-----BEGIN EC PRIVATE KEY-----\nMHcCAQEEIKDvQn0F6rpybygU8kEIC5IJLl6rSXqV5EynWJMxc/kkoAoGCCqGSM49\nAwEHoUQDQgAET4hw6u+uYjaa5akEd8Ree5N+wUHtLFc6m4Jpc0WG6HakV003tc3c\nxuHTrfiCJYD9V5wFI0HFgVYltcm5RCD7Yg==\n-----END EC PRIVATE KEY-----", "stdout_lines": ["-----BEGIN EC PRIVATE KEY-----", "MHcCAQEEIKDvQn0F6rpybygU8kEIC5IJLl6rSXqV5EynWJMxc/kkoAoGCCqGSM49", "AwEHoUQDQgAET4hw6u+uYjaa5akEd8Ree5N+wUHtLFc6m4Jpc0WG6HakV003tc3c", "xuHTrfiCJYD9V5wFI0HFgVYltcm5RCD7Yg==", "-----END EC PRIVATE KEY-----"]}
META: role_complete for localhost

TASK [Wait for admin tls exists in vault.] *************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:125

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
changed: [localhost] => {"attempts": 1, "changed": true, "cmd": "vault kv get -field=client.key secretv2/crypto/peerOrganizations/manufacturer-net/users/admin/tls\n", "delta": "0:00:00.313423", "end": "2022-07-17 16:16:49.531263", "msg": "", "rc": 0, "start": "2022-07-17 16:16:49.217840", "stderr": "", "stderr_lines": [], "stdout": "-----BEGIN PRIVATE KEY-----\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg25ftR9NbkVhynGs7\nD4DpFKU7DgxLV0wwTHtCTIvVvtGhRANCAAQ+fkg+QiCtW81Hy4iFSirAfiYd7rE3\ngTCiiOOtC2wAJ3P/lU4prmlx2vB1wqF50oj0g5YJs9lxgELkbEhP/6K2\n-----END PRIVATE KEY-----", "stdout_lines": ["-----BEGIN PRIVATE KEY-----", "MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg25ftR9NbkVhynGs7", "D4DpFKU7DgxLV0wwTHtCTIvVvtGhRANCAAQ+fkg+QiCtW81Hy4iFSirAfiYd7rE3", "gTCiiOOtC2wAJ3P/lU4prmlx2vB1wqF50oj0g5YJs9lxgELkbEhP/6K2", "-----END PRIVATE KEY-----"]}
META: role_complete for localhost

TASK [Wait for peers tls exists in vault.] *************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:134
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
changed: [localhost] => {"attempts": 1, "changed": true, "cmd": "vault kv get -field=server.key secretv2/crypto/peerOrganizations/manufacturer-net/peers/peer0.manufacturer-net/tls\n", "delta": "0:00:00.377877", "end": "2022-07-17 16:16:51.867879", "msg": "", "rc": 0, "start": "2022-07-17 16:16:51.490002", "stderr": "", "stderr_lines": [], "stdout": "-----BEGIN PRIVATE KEY-----\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQghISpt5Sf7WEhe+5v\ngWv0yYPQOORs1+p6u+UW5tQKUpmhRANCAATLC3t+5aYZdZuHTkSsAbTEnpqmoAhr\nzPzDe4Rgfkv5EAn0VD7IH7t5oQgGJnQKX+Uae6sn1F+TP9izejTuNZK/\n-----END PRIVATE KEY-----", "stdout_lines": ["-----BEGIN PRIVATE KEY-----", "MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQghISpt5Sf7WEhe+5v", "gWv0yYPQOORs1+p6u+UW5tQKUpmhRANCAATLC3t+5aYZdZuHTkSsAbTEnpqmoAhr", "zPzDe4Rgfkv5EAn0VD7IH7t5oQgGJnQKX+Uae6sn1F+TP9izejTuNZK/", "-----END PRIVATE KEY-----"]}
META: role_complete for localhost

TASK [Wait for ambassador key exists in vault.] ********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:146
skipping: [localhost] => (item={'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net:7051', 'certificate': '/home/bevel/build/manufacturer/peer0.crt', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain1', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}})  => {"ansible_loop_var": "peer", "changed": false, "peer": {"certificate": "/home/bevel/build/manufacturer/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain1", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "enabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.manufacturer-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.manufacturer-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}, "skip_reason": "Conditional result was False"}

TASK [Create the Ambassador credentials for peers] *****************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:160
skipping: [localhost] => (item={'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net:7051', 'certificate': '/home/bevel/build/manufacturer/peer0.crt', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain1', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}})  => {"ansible_loop_var": "peer", "changed": false, "peer": {"certificate": "/home/bevel/build/manufacturer/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain1", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "enabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.manufacturer-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.manufacturer-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}, "skip_reason": "Conditional result was False"}

TASK [create/ca-tools/peer : Copy msp cacerts to given path] *******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:175
included: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/nested_endorsers.yaml for localhost => (item=(censored due to no_log))

TASK [create/ca-tools/peer : Get endorsers data] *******************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/nested_endorsers.yaml:9
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'peers': [{'peer': None, 'name': 'peer0', 'corepeerAddress': 'peer0.carrier-net:7051', 'certificate': '/home/bevel/build/carrier/peer0.crt'}]})  => {"ansible_loop_var": "endorser", "changed": false, "endorser": {"name": "carrier", "organization": null, "peers": [{"certificate": "/home/bevel/build/carrier/peer0.crt", "corepeerAddress": "peer0.carrier-net:7051", "name": "peer0", "peer": null}]}, "skip_reason": "Conditional result was False"}
included: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/nested_peers.yaml for localhost => (item=(censored due to no_log))

TASK [create/ca-tools/peer : set_fact] *****************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/nested_peers.yaml:8
ok: [localhost] => {"ansible_facts": {"endorsers_peers_data": []}, "changed": false}

TASK [create/ca-tools/peer : get endorsers peers] ******************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/nested_peers.yaml:12
ok: [localhost] => (item={'peer': None, 'name': 'peer0', 'corepeerAddress': 'peer0.manufacturer-net:7051', 'certificate': '/home/bevel/build/manufacturer/peer0.crt'}) => {"ansible_facts": {"endorsers_peers_data": [{"certificate": "/home/bevel/build/manufacturer/peer0.crt", "name": "peer0"}]}, "ansible_loop_var": "peer", "changed": false, "peer": {"certificate": "/home/bevel/build/manufacturer/peer0.crt", "corepeerAddress": "peer0.manufacturer-net:7051", "name": "peer0", "peer": null}}

TASK [create/ca-tools/peer : Copy certificates] ********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/nested_peers.yaml:21
included: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/write.yaml for localhost => (item=(censored due to no_log))

TASK [create/ca-tools/peer : Create the certs directory if it does not exist] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/write.yaml:10
ok: [localhost] => (item={'name': 'peer0', 'certificate': '/home/bevel/build/manufacturer/peer0.crt'}) => {"ansible_loop_var": "peer", "changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/build/manufacturer", "peer": {"certificate": "/home/bevel/build/manufacturer/peer0.crt", "name": "peer0"}, "size": 4096, "state": "directory", "uid": 0}

TASK [create/ca-tools/peer : Get msp cacerts] **********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/write.yaml:22
changed: [localhost] => (item={'name': 'peer0', 'certificate': '/home/bevel/build/manufacturer/peer0.crt'}) => {"ansible_loop_var": "peer", "changed": true, "cmd": "vault kv get -field=cacerts secretv2/crypto/peerOrganizations/manufacturer-net/peers/peer0.manufacturer-net/msp > /home/bevel/build/manufacturer/peer0.crt\n", "delta": "0:00:00.344264", "end": "2022-07-17 16:16:55.192481", "msg": "", "peer": {"certificate": "/home/bevel/build/manufacturer/peer0.crt", "name": "peer0"}, "rc": 0, "start": "2022-07-17 16:16:54.848217", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [create/ca-tools/peer : Copy the msp folder from the ca tools] ************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:187
changed: [localhost] => {"changed": true, "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/home/bevel/build/config  kubectl get po -n manufacturer-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/home/bevel/build/config kubectl cp manufacturer-net/${CA_TOOL_CLI}:crypto-config/peerOrganizations/manufacturer-net/msp ./build/crypto-config/peerOrganizations/manufacturer-net/msp\n", "delta": "0:00:01.209123", "end": "2022-07-17 16:16:56.966126", "msg": "", "rc": 0, "start": "2022-07-17 16:16:55.757003", "stderr": "", "stderr_lines": [], "stdout": "Defaulting container name to ca-tools.", "stdout_lines": ["Defaulting container name to ca-tools."]}

TASK [create/ca-tools/peer : Get msp config.yaml file] *************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:194
changed: [localhost] => {"changed": true, "cmd": "vault kv get -field=configfile secretv2/crypto/peerOrganizations/manufacturer-net/msp/config > config.yaml\nmv config.yaml ./build/crypto-config/peerOrganizations/manufacturer-net/msp/\n", "delta": "0:00:00.263045", "end": "2022-07-17 16:16:57.928584", "msg": "", "rc": 0, "start": "2022-07-17 16:16:57.665539", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [Create user crypto] ******************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:204

TASK [create/users : Copy generate-user-crypto.sh to destination directory] ****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/users/tasks/main.yaml:13
changed: [localhost] => (item=generate-user-crypto.sh) => {"ansible_loop_var": "files", "changed": true, "checksum": "257e2b3028d95a5a7509d8d5d2232ba3e103b260", "dest": "./build/generate-user-crypto.sh", "files": "generate-user-crypto.sh", "gid": 0, "group": "root", "md5sum": "daba10e7bff04b9a0905e85cb270fe76", "mode": "0755", "owner": "root", "size": 8583, "src": "/home/bevel/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh", "state": "file", "uid": 0}

TASK [create/users : Changing the permission of msp files] *********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/users/tasks/main.yaml:26
changed: [localhost] => (item=generate-user-crypto.sh) => {"ansible_loop_var": "files", "changed": true, "files": "generate-user-crypto.sh", "gid": 0, "group": "root", "mode": "0775", "owner": "root", "path": "./build/generate-user-crypto.sh", "size": 8583, "state": "file", "uid": 0}

TASK [create/users : Copy generate_crypto.sh file using the CA Tools] **********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/users/tasks/main.yaml:37
changed: [localhost] => {"changed": true, "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/home/bevel/build/config kubectl get po -n manufacturer-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/home/bevel/build/config kubectl cp ./build/generate-user-crypto.sh manufacturer-net/${CA_TOOL_CLI}:/root/ca-tools/manufacturer/generate-user-crypto.sh  \n", "delta": "0:00:01.286708", "end": "2022-07-17 16:17:01.057492", "msg": "", "rc": 0, "start": "2022-07-17 16:16:59.770784", "stderr": "Defaulting container name to ca-tools.", "stderr_lines": ["Defaulting container name to ca-tools."], "stdout": "", "stdout_lines": []}

TASK [create/users : Execute generate-user-crypto.sh file using the CA Tools] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/users/tasks/main.yaml:43
changed: [localhost] => {"changed": true, "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/home/bevel/build/config kubectl get po -n manufacturer-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/home/bevel/build/config kubectl exec -n manufacturer-net ${CA_TOOL_CLI} -- /root/ca-tools/manufacturer/./generate-user-crypto.sh peer manufacturer-net manufacturer W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d manufacturer \"O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH\" \"ca.manufacturer-net:7054\"\nKUBECONFIG=/home/bevel/build/config kubectl cp manufacturer-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n", "delta": "0:00:01.949913", "end": "2022-07-17 16:17:03.403851", "msg": "", "rc": 0, "start": "2022-07-17 16:17:01.453938", "stderr": "Defaulting container name to ca-tools.\nUse 'kubectl describe pod/ca-tools-865fc89ff5-8t8vx -n manufacturer-net' to see all of the containers in this pod.\n+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=manufacturer-net\n+ ORG_NAME=manufacturer\n+ TYPE_FOLDER=peers\n+ USER_IDENTITIES=W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d\n+ AFFILIATION=manufacturer\n+ SUBJECT=O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH\n+ CA=ca.manufacturer-net:7054\n+ '[' peer '!=' peer ']'\n+ ORG_CYPTO_FOLDER=/crypto-config/peerOrganizations/manufacturer-net\n+ ROOT_TLS_CERT=/crypto-config/peerOrganizations/manufacturer-net/ca/ca.manufacturer-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-manufacturer\n+ ORG_HOME=/root/ca-tools/manufacturer\n+ CUR_USER=0\n++ echo W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d\n++ base64 -d\n++ sed -e s/None/null/g\n++ tr \\' '\"'\n++ jq '. | length'\n+ TOTAL_USERS=1\n+ '[' 0 -lt 1 ']'\n++ echo W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d\n++ base64 -d\n++ sed -e s/None/null/g\n++ tr \\' '\"'\n++ jq '.[0].identity'\n++ sed -e 's/\"//g'\n+ USER=user1\n+ ORG_USER=user1@manufacturer-net\n+ ORG_USERPASS=user1@manufacturer-net-pw\n+ ADMIN_USER=Admin@manufacturer-net\n+ ADMIN_USERPASS=Admin@manufacturer-net-pw\n+ CUR_ATTRS=0\n+ ATTRS=hf.Revoker=true\n++ echo W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d\n++ base64 -d\n++ sed -e s/None/null/g\n++ tr \\' '\"'\n++ jq '.[0].attributes | length'\n+ TOTAL_ATTRS=1\n+ '[' 0 -lt 1 ']'\n++ echo W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d\n++ base64 -d\n++ tr \\' '\"'\n++ jq '.[0].attributes[0].key'\n++ sed -e s/None/null/g\n++ sed -e 's/\"//g'\n++ echo W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d\n++ base64 -d\n++ sed -e s/None/null/g\n++ jq '.[0].attributes[0].value'\n++ tr \\' '\"'\n++ sed -e 's/\"//g'\n+ ATTRS=hf.Revoker=true,hf.Revoker=true:ecert\n+ CUR_ATTRS=1\n+ '[' 1 -lt 1 ']'\n+ '[' '!' -d /root/ca-tools/manufacturer/clientuser1 ']'\n++++ date\n+++ echo Sun Jul 17 16:17:02 UTC '2022 + 5 minutes'\n++ date -d 'Sun Jul 17 16:17:02 UTC 2022 + 5 minutes' +%Y%m%d%H%M%S\n+ CUR_DATETIME=20220717162202\n+++ sed s/notAfter=//g\n++++ openssl x509 -noout -enddate\n+++ echo notAfter=Jul 17 15:21:00 2023 GMT\n++ date -d 'Jul 17 15:21:00 2023 GMT' +%Y%m%d%H%M%S\n+ CERT_DATETIME=20230717152100\n++ openssl x509 -text -noout -certopt no_subject,no_header,no_version,no_serial,no_signame,no_validity,no_issuer,no_pubkey,no_sigdump,no_aux\n+ ATTRS_CERT='        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature\n            X509v3 Basic Constraints: critical\n                CA:FALSE\n            X509v3 Subject Key Identifier: \n                C1:14:5B:7A:70:2A:60:DA:60:D5:68:EC:B9:78:0B:EF:86:A7:1D:1A\n            X509v3 Authority Key Identifier: \n                keyid:E2:7A:E4:8F:4E:63:DE:3B:5B:91:34:B1:CB:CF:3F:3F:EA:BC:CF:6B\n\n            X509v3 Subject Alternative Name: \n                DNS:ca-tools-865fc89ff5-8t8vx\n            1.2.3.4.5.6.7.8.1: \n                {\"attrs\":{\"hf.Affiliation\":\"manufacturer\",\"hf.EnrollmentID\":\"user1@manufacturer-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'\n+ ATTRS_CERT='\n                {\"attrs\":{\"hf.Affiliation\":\"manufacturer\",\"hf.EnrollmentID\":\"user1@manufacturer-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'\n+ CUR_ATTRS=0\n+ MATCH_FLAG=true\n+ '[' 0 -lt 1 ']'\n++ echo W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d\n++ base64 -d\n++ sed -e s/None/null/g\n++ sed -e 's/\"//g'\n++ tr \\' '\"'\n++ jq '.[0].attributes[0].key'\n+ CUR_KEY=hf.Revoker\n++ echo '{\"attrs\":{\"hf.Affiliation\":\"manufacturer\",\"hf.EnrollmentID\":\"user1@manufacturer-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'\n++ jq .attrs.hf.Revoker\n+ [[ null == \\n\\u\\l\\l ]]\n+ MATCH_FLAG=false\n+ CUR_ATTRS=1\n+ '[' 1 -lt 1 ']'\n+ '[' 20220717162202 -ge 20230717152100 ']'\n+ '[' false == false ']'\n++ echo '{\"attrs\":{\"hf.Affiliation\":\"manufacturer\",\"hf.EnrollmentID\":\"user1@manufacturer-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'\n++ jq '.attrs | length'\n+ TOTAL_CERT_ATTRS=4\n+ CUR_CERT_ATTRS=0\n+ '[' 0 -lt 4 ']'\n++ echo '{\"attrs\":{\"hf.Affiliation\":\"manufacturer\",\"hf.EnrollmentID\":\"user1@manufacturer-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'\n++ jq '.attrs | to_entries | .[0].key'\n++ sed -e 's/\"//g'\n+ '[' hf.Affiliation '!=' hf.Affiliation ']'\n+ CUR_CERT_ATTRS=1\n+ '[' 1 -lt 4 ']'\n++ echo '{\"attrs\":{\"hf.Affiliation\":\"manufacturer\",\"hf.EnrollmentID\":\"user1@manufacturer-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'\n++ jq '.attrs | to_entries | .[1].key'\n++ sed -e 's/\"//g'\n+ '[' hf.EnrollmentID '!=' hf.Affiliation ']'\n++ echo '{\"attrs\":{\"hf.Affiliation\":\"manufacturer\",\"hf.EnrollmentID\":\"user1@manufacturer-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'\n++ jq '.attrs | to_entries | .[1].key'\n++ sed -e 's/\"//g'\n+ '[' hf.EnrollmentID '!=' hf.Type ']'\n++ echo '{\"attrs\":{\"hf.Affiliation\":\"manufacturer\",\"hf.EnrollmentID\":\"user1@manufacturer-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'\n++ jq '.attrs | to_entries | .[1].key'\n++ sed -e 's/\"//g'\n+ '[' hf.EnrollmentID '!=' hf.EnrollmentID ']'\n+ CUR_CERT_ATTRS=2\n+ '[' 2 -lt 4 ']'\n++ echo '{\"attrs\":{\"hf.Affiliation\":\"manufacturer\",\"hf.EnrollmentID\":\"user1@manufacturer-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'\n++ jq '.attrs | to_entries | .[2].key'\n++ sed -e 's/\"//g'\n+ '[' hf.Revoker '!=' hf.Affiliation ']'\n++ echo '{\"attrs\":{\"hf.Affiliation\":\"manufacturer\",\"hf.EnrollmentID\":\"user1@manufacturer-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'\n++ jq '.attrs | to_entries | .[2].key'\n++ sed -e 's/\"//g'\n+ '[' hf.Revoker '!=' hf.Type ']'\n++ echo '{\"attrs\":{\"hf.Affiliation\":\"manufacturer\",\"hf.EnrollmentID\":\"user1@manufacturer-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'\n++ jq '.attrs | to_entries | .[2].key'\n++ sed -e 's/\"//g'\n+ '[' hf.Revoker '!=' hf.EnrollmentID ']'\n+ KEY_PRESENT=false\n+ CUR_ATTRS=0\n+ '[' 0 -lt 1 ']'\n++ sed -e 's/\"//g'\n++ jq '.attrs | to_entries | .[2].key'\n++ echo '{\"attrs\":{\"hf.Affiliation\":\"manufacturer\",\"hf.EnrollmentID\":\"user1@manufacturer-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'\n++ echo W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d\n++ jq '.[0].attributes[0].key'\n++ tr \\' '\"'\n++ sed -e s/None/null/g\n++ base64 -d\n++ sed -e 's/\"//g'\n+ '[' hf.Revoker == hf.Revoker ']'\n+ KEY_PRESENT=true\n+ CUR_ATTRS=1\n+ '[' 1 -lt 1 ']'\n+ '[' true == false ']'\n+ CUR_CERT_ATTRS=3\n+ '[' 3 -lt 4 ']'\n++ echo '{\"attrs\":{\"hf.Affiliation\":\"manufacturer\",\"hf.EnrollmentID\":\"user1@manufacturer-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'\n++ sed -e 's/\"//g'\n++ jq '.attrs | to_entries | .[3].key'\n+ '[' hf.Type '!=' hf.Affiliation ']'\n++ sed -e 's/\"//g'\n++ jq '.attrs | to_entries | .[3].key'\n++ echo '{\"attrs\":{\"hf.Affiliation\":\"manufacturer\",\"hf.EnrollmentID\":\"user1@manufacturer-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'\n+ '[' hf.Type '!=' hf.Type ']'\n+ CUR_CERT_ATTRS=4\n+ '[' 4 -lt 4 ']'\n+ fabric-ca-client identity modify user1@manufacturer-net -d --type user --affiliation manufacturer --attrs hf.Revoker=true,hf.Revoker=true:ecert --tls.certfiles /crypto-config/peerOrganizations/manufacturer-net/ca/ca.manufacturer-net-cert.pem --home /root/ca-tools/cas/ca-manufacturer\n2022/07/17 16:17:02 [DEBUG] Home directory: /root/ca-tools/cas/ca-manufacturer\n2022/07/17 16:17:02 [INFO] Configuration file location: /root/ca-tools/cas/ca-manufacturer/fabric-ca-client-config.yaml\n2022/07/17 16:17:02 [DEBUG] Checking for enrollment\n2022/07/17 16:17:02 [DEBUG] Initializing client with config: &{URL:https://ca.manufacturer-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/manufacturer-net/ca/ca.manufacturer-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:manufacturer-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-865fc89ff5-8t8vx] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200a8400}\n2022/07/17 16:17:02 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42047e600 PluginOpts:<nil>}\n2022/07/17 16:17:02 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200a5d20 DummyKeystore:<nil>}\n2022/07/17 16:17:02 [INFO] TLS Enabled\n2022/07/17 16:17:02 [DEBUG] CA Files: [/crypto-config/peerOrganizations/manufacturer-net/ca/ca.manufacturer-net-cert.pem]\n2022/07/17 16:17:02 [DEBUG] Client Cert File: \n2022/07/17 16:17:02 [DEBUG] Client Key File: \n2022/07/17 16:17:02 [DEBUG] Client TLS certificate and/or key file not provided\n2022/07/17 16:17:02 [DEBUG] Client configuration settings: &{URL:https://ca.manufacturer-net:7054 MSPDir:/root/ca-tools/cas/ca-manufacturer/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/manufacturer-net/ca/ca.manufacturer-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:manufacturer-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-865fc89ff5-8t8vx] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200a8400}\n2022/07/17 16:17:02 [DEBUG] Entered runModifyIdentity: {id: json: add:{ID: Type:user Affiliation: Attributes:[] MaxEnrollments:0 Secret: CAName:} modify:{ID: Type:user Affiliation:manufacturer Attributes:[] MaxEnrollments:0 Secret: CAName:} remove:{ID: Force:false CAName:}}\n2022/07/17 16:17:02 [DEBUG] Initializing client with config: &{URL:https://ca.manufacturer-net:7054 MSPDir:/root/ca-tools/cas/ca-manufacturer/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/manufacturer-net/ca/ca.manufacturer-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:manufacturer-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-865fc89ff5-8t8vx] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200a8400}\n2022/07/17 16:17:02 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42047e600 PluginOpts:<nil>}\n2022/07/17 16:17:02 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200a5d20 DummyKeystore:<nil>}\n2022/07/17 16:17:02 [INFO] TLS Enabled\n2022/07/17 16:17:02 [DEBUG] CA Files: [/crypto-config/peerOrganizations/manufacturer-net/ca/ca.manufacturer-net-cert.pem]\n2022/07/17 16:17:02 [DEBUG] Client Cert File: \n2022/07/17 16:17:02 [DEBUG] Client Key File: \n2022/07/17 16:17:02 [DEBUG] Client TLS certificate and/or key file not provided\n2022/07/17 16:17:02 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-manufacturer/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-manufacturer/msp/signcerts/cert.pem\n2022/07/17 16:17:02 [DEBUG] No credential found at /root/ca-tools/cas/ca-manufacturer/msp/user/SignerConfig: open /root/ca-tools/cas/ca-manufacturer/msp/user/SignerConfig: no such file or directory\n2022/07/17 16:17:02 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-manufacturer/msp/user/SignerConfig\n2022/07/17 16:17:02 [DEBUG] Entering identity.ModifyIdentity with request: &{ID:user1@manufacturer-net Type:user Affiliation:manufacturer Attributes:[{Name:hf.Revoker Value:true ECert:true}] MaxEnrollments:0 Secret: CAName:}\n2022/07/17 16:17:02 [DEBUG] Adding token-based authorization header\n2022/07/17 16:17:02 [DEBUG] Sending request\nPUT https://ca.manufacturer-net:7054/identities/user1@manufacturer-net\n{\"ID\":\"user1@manufacturer-net\",\"type\":\"user\",\"affiliation\":\"manufacturer\",\"attrs\":[{\"name\":\"hf.Revoker\",\"value\":\"true\",\"ecert\":true}],\"max_enrollments\":0}\n2022/07/17 16:17:02 [DEBUG] Received response\nstatusCode=200 (200 OK)\n2022/07/17 16:17:02 [DEBUG] Response body result: map[affiliation:manufacturer attrs:[map[name:hf.Revoker value:true ecert:true] map[value:user1@manufacturer-net ecert:true name:hf.EnrollmentID] map[value:user ecert:true name:hf.Type] map[name:hf.Affiliation value:manufacturer ecert:true]] max_enrollments:-1 caname:ca.manufacturer-net id:user1@manufacturer-net type:user]\n2022/07/17 16:17:02 [DEBUG] Successfully modified identity 'user1@manufacturer-net'\n+ fabric-ca-client enroll -d -u https://user1@manufacturer-net:user1@manufacturer-net-pw@ca.manufacturer-net:7054 --csr.names O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH --tls.certfiles /crypto-config/peerOrganizations/manufacturer-net/ca/ca.manufacturer-net-cert.pem --home /root/ca-tools/manufacturer/clientuser1\n2022/07/17 16:17:02 [DEBUG] Home directory: /root/ca-tools/manufacturer/clientuser1\n2022/07/17 16:17:02 [DEBUG] Client configuration settings: &{URL:https://user1@manufacturer-net:user1@manufacturer-net-pw@ca.manufacturer-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/manufacturer-net/ca/ca.manufacturer-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:user1@manufacturer-net Names:[{C: ST: L: O:Manufacturer OU: SerialNumber:} {C: ST: L: O: OU:Manufacturer SerialNumber:} {C: ST: L:47.38/8.54/Zurich O: OU: SerialNumber:} {C:CH ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-865fc89ff5-8t8vx] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420471de0}\n2022/07/17 16:17:02 [DEBUG] Entered runEnroll\n2022/07/17 16:17:02 [DEBUG] Enrolling { Name:user1@manufacturer-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{user1@manufacturer-net [{   Manufacturer  } {    Manufacturer } {  47.38/8.54/Zurich   } {CH     }] [ca-tools-865fc89ff5-8t8vx] <nil> <nil> } Type:x509  }\n2022/07/17 16:17:02 [DEBUG] Initializing client with config: &{URL:https://ca.manufacturer-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/manufacturer-net/ca/ca.manufacturer-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:user1@manufacturer-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{user1@manufacturer-net [{   Manufacturer  } {    Manufacturer } {  47.38/8.54/Zurich   } {CH     }] [ca-tools-865fc89ff5-8t8vx] <nil> <nil> } Type:x509  } CSR:{CN:user1@manufacturer-net Names:[{C: ST: L: O:Manufacturer OU: SerialNumber:} {C: ST: L: O: OU:Manufacturer SerialNumber:} {C: ST: L:47.38/8.54/Zurich O: OU: SerialNumber:} {C:CH ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-865fc89ff5-8t8vx] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420471de0}\n2022/07/17 16:17:02 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4201f5f20 PluginOpts:<nil>}\n2022/07/17 16:17:02 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4204623b0 DummyKeystore:<nil>}\n2022/07/17 16:17:02 [INFO] TLS Enabled\n2022/07/17 16:17:02 [DEBUG] CA Files: [/crypto-config/peerOrganizations/manufacturer-net/ca/ca.manufacturer-net-cert.pem]\n2022/07/17 16:17:02 [DEBUG] Client Cert File: \n2022/07/17 16:17:02 [DEBUG] Client Key File: \n2022/07/17 16:17:02 [DEBUG] Client TLS certificate and/or key file not provided\n2022/07/17 16:17:02 [DEBUG] GenCSR &{CN:user1@manufacturer-net Names:[{C: ST: L: O:Manufacturer OU: SerialNumber:} {C: ST: L: O: OU:Manufacturer SerialNumber:} {C: ST: L:47.38/8.54/Zurich O: OU: SerialNumber:} {C:CH ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-865fc89ff5-8t8vx] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2022/07/17 16:17:02 [INFO] generating key: &{A:ecdsa S:256}\n2022/07/17 16:17:02 [DEBUG] generate key from request: algo=ecdsa, size=256\n2022/07/17 16:17:02 [INFO] encoded CSR\n2022/07/17 16:17:02 [DEBUG] Sending request\nPOST https://ca.manufacturer-net:7054/enroll\n{\"hosts\":[\"ca-tools-865fc89ff5-8t8vx\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBajCCARECAQAweDELMAkGA1UEBhMCQ0gxGjAYBgNVBAcTETQ3LjM4LzguNTQv\\nWnVyaWNoMRUwEwYDVQQKEwxNYW51ZmFjdHVyZXIxFTATBgNVBAsTDE1hbnVmYWN0\\ndXJlcjEfMB0GA1UEAwwWdXNlcjFAbWFudWZhY3R1cmVyLW5ldDBZMBMGByqGSM49\\nAgEGCCqGSM49AwEHA0IABLk23d14JdNZQehqK2EqMH5aMZgR10CCKAWDW0cqSoOK\\nxkP/mpn+kWPtIzTin4AgohbmQtWe8+231kcHL8wGtiGgNzA1BgkqhkiG9w0BCQ4x\\nKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTg2NWZjODlmZjUtOHQ4dngwCgYIKoZI\\nzj0EAwIDRwAwRAIgWqa5yXP4F3a0C6O9Lc2vshA/q2kympQfLms1QMULZTsCIGFD\\nIYXAFjihEcHdPXe0rNQBzmEsn6fuebJggX01nZgC\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2022/07/17 16:17:02 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2022/07/17 16:17:02 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvekNDQXFhZ0F3SUJBZ0lVZE9zMnFMWGl0eHM2Nnc1RkdtejkxL0RGZlFNd0NnWUlLb1pJemowRUF3SXcKWkRFTE1Ba0dBMVVFQmhNQ1EwZ3hEekFOQmdOVkJBZ01CbHAxY21samFERVBNQTBHQTFVRUJ3d0dXblZ5YVdObwpNUlV3RXdZRFZRUUtEQXhOWVc1MVptRmpkSFZ5WlhJeEhEQWFCZ05WQkFNTUUyTmhMbTFoYm5WbVlXTjBkWEpsCmNpMXVaWFF3SGhjTk1qSXdOekUzTVRZeE1qQXdXaGNOTWpNd056RTNNVFl4TnpBd1dqQ0JoVEVMTUFrR0ExVUUKQmhNQ1EwZ3hHakFZQmdOVkJBY1RFVFEzTGpNNEx6Z3VOVFF2V25WeWFXTm9NUlV3RXdZRFZRUUtFd3hOWVc1MQpabUZqZEhWeVpYSXhJakFMQmdOVkJBc1RCSFZ6WlhJd0V3WURWUVFMRXd4dFlXNTFabUZqZEhWeVpYSXhIekFkCkJnTlZCQU1NRm5WelpYSXhRRzFoYm5WbVlXTjBkWEpsY2kxdVpYUXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak8KUFFNQkJ3TkNBQVM1TnQzZGVDWFRXVUhvYWl0aEtqQitXakdZRWRkQWdpZ0ZnMXRIS2txRGlzWkQvNXFaL3BGago3U00wNHArQUlLSVc1a0xWbnZQdHQ5WkhCeS9NQnJZaG80SUJFakNDQVE0d0RnWURWUjBQQVFIL0JBUURBZ2VBCk1Bd0dBMVVkRXdFQi93UUNNQUF3SFFZRFZSME9CQllFRk5aQUsrQUdpU1B3bGphZTkrdVR5VFF5dVlMak1COEcKQTFVZEl3UVlNQmFBRk9KNjVJOU9ZOTQ3VzVFMHNjdlBQei9xdk05ck1DUUdBMVVkRVFRZE1CdUNHV05oTFhSdgpiMnh6TFRnMk5XWmpPRGxtWmpVdE9IUTRkbmd3Z1ljR0NDb0RCQVVHQndnQkJIdDdJbUYwZEhKeklqcDdJbWhtCkxrRm1abWxzYVdGMGFXOXVJam9pYldGdWRXWmhZM1IxY21WeUlpd2lhR1l1Ulc1eWIyeHNiV1Z1ZEVsRUlqb2kKZFhObGNqRkFiV0Z1ZFdaaFkzUjFjbVZ5TFc1bGRDSXNJbWhtTGxKbGRtOXJaWElpT2lKMGNuVmxJaXdpYUdZdQpWSGx3WlNJNkluVnpaWElpZlgwd0NnWUlLb1pJemowRUF3SURSd0F3UkFJZ2ZTTlc4VVlwWGRmQlUrNjNlL2o3ClgvZ095cFQ2czhiRS9xOWEwTWRVcVYwQ0lBeVQydUNJaHFnM3ZhSnB6T2FVNmVJR08xOHB3QVpJVTZoNWFDVGYKaXF3MgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.manufacturer-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNERENDQWJLZ0F3SUJBZ0lVT3dGc0REL2tFMFdXbUJ3VWt5MkV1ZHJTSDQ4d0NnWUlLb1pJemowRUF3SXcKWkRFTE1Ba0dBMVVFQmhNQ1EwZ3hEekFOQmdOVkJBZ01CbHAxY21samFERVBNQTBHQTFVRUJ3d0dXblZ5YVdObwpNUlV3RXdZRFZRUUtEQXhOWVc1MVptRmpkSFZ5WlhJeEhEQWFCZ05WQkFNTUUyTmhMbTFoYm5WbVlXTjBkWEpsCmNpMXVaWFF3SGhjTk1qSXdOekUzTVRVeE16VXlXaGNOTWpVd05UQTJNVFV4TXpVeVdqQmtNUXN3Q1FZRFZRUUcKRXdKRFNERVBNQTBHQTFVRUNBd0dXblZ5YVdOb01ROHdEUVlEVlFRSERBWmFkWEpwWTJneEZUQVRCZ05WQkFvTQpERTFoYm5WbVlXTjBkWEpsY2pFY01Cb0dBMVVFQXd3VFkyRXViV0Z1ZFdaaFkzUjFjbVZ5TFc1bGREQlpNQk1HCkJ5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCRStJY09ydnJtSTJtdVdwQkhmRVhudVRmc0ZCN1N4WE9wdUMKYVhORmh1aDJwRmROTjdYTjNNYmgwNjM0Z2lXQS9WZWNCU05CeFlGV0piWEp1VVFnKzJLalFqQkFNQThHQTFVZApFd0VCL3dRRk1BTUJBZjh3RGdZRFZSMFBBUUgvQkFRREFnR21NQjBHQTFVZERnUVdCQlRpZXVTUFRtUGVPMXVSCk5MSEx6ejgvNnJ6UGF6QUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpQkhtY3dNMHhOalZVQXJRNFZjZXpLV0Rza1MKMzZETVNhT2dwTDhpa1hzRjR3SWhBSXVwSVpQYkNlTkVKZllITUlYMG0zelpjQWhCN21jSGgxK09TTlZ3Q3BDMQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIHD4XO1et/HkV9kxbfa7qQC/4AjDn8WCzbzPRh5ctMBVEiA6jkqxYwzdJHsXl5xK0LN9e7ntkVO/id/0ulJkO5jcnRpECiDhAJ/s+41/7wOt2WCbbDbE2sicTvcDZzbVUC2987BkIxIg41ms3kmh14rEbbi++/k19mZ5nl4f3evdo8vdamFvp64iRAogaAJn5BSfztHQsDXEaxXa5uV3tLG7KoxruzNOiNKJHKkSIAAKuiAgDlI02KfPXE0PE6XYpQL1UFCByzoSUIb6n/OhIkQKII20XsCghJsyw49chn/lLOTGUU3p7mE3aT8byCfqwddxEiDr1KnVIhgFIruJifBgAdN4AQNUp/fvbgA2005wxemKgSJECiBPXd7Z6pHL8hqjpctMRBpvuHtNWIWEWL7R2LGzA4O+fhIgqtUmczT/78fULw6BCTKaRI/f4uZx2cv5LiokC+v9G3siRAogrueYGBv+usuAt9ofSGOKqXc86xAsgYfhe3EMLgQOR6sSIIQ6eLaRE3ILBPuRXDam5qDvZw4EFNOU4SUaiKp1KORTKogBCiBHiNueMIoyteBWm5YHAYO20wrshz/93/d50RwQGBrD3hIgEZRxLGjxmacf0/F/QziomF9nL1QLnZ+wOuzjpr+zBZYaILPHo6lu18wKoNgTU/I98VE6MuDCTO0UBQWTSHc/ThJgIiDvOzjecIR2+CJOdnlzr2vuHZXMuHcztiP0L01wfpvauzJECiBYhK1FW4DCbXvwWUEBTYVzMtxF+N0UrUg6GpzdnDPqDRIg2qnz56VMPiGl15OvkgG1uHWiKvDf/eS1dXLdC291bcU6RAog85NnBnxHFQZ2Qm7Mzdfo0F0rhDt0c1tYmEErA4Ug2XsSIH/YTs5tyKArg27QT5IC04qQUlISmY3G60v5e4CqAMEAQiCgOAIjmstlTxY4zxoc/bVheoO/9ja3+34xhKRfLqelOkogVMsc+7X3mAbx4bYCbmSHHgVp+8obOSZaTyQaE8/DItNSIB4c1g1k9uKqK7Waf3aPhC1/zsRMuEY23zROj3/JQZR+ IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVqR0l3aUxmRDg0N3FpVXZvU3h6UWdRWTdacitGZnNZUAprcXVxakFxTjRPOU81NUNRbUVKOUVoQmZwQWZpbUlvNkErZU0vNFE4ZXk5WkplTm5jOHV6U3VqenlTdEIxaVI5CnNoblJGK2Z6dFNNWTNFRTJXWmsvT2ZrdW81WjdMekg2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2022/07/17 16:17:02 [DEBUG] newEnrollmentResponse user1@manufacturer-net\n2022/07/17 16:17:02 [INFO] Stored client certificate at /root/ca-tools/manufacturer/clientuser1/msp/signcerts/cert.pem\n2022/07/17 16:17:02 [INFO] Stored root CA certificate at /root/ca-tools/manufacturer/clientuser1/msp/cacerts/ca-manufacturer-net-7054.pem\n+ cp /root/ca-tools/manufacturer/clientuser1/msp/signcerts/cert.pem /root/ca-tools/manufacturer/clientuser1/msp/admincerts/user1@manufacturer-net-cert.pem\n+ cp -R /root/ca-tools/manufacturer/clientuser1/msp /crypto-config/peerOrganizations/manufacturer-net/users/user1@manufacturer-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://user1@manufacturer-net:user1@manufacturer-net-pw@ca.manufacturer-net:7054 -M /root/ca-tools/manufacturer/clientuser1/tls --tls.certfiles /crypto-config/peerOrganizations/manufacturer-net/ca/ca.manufacturer-net-cert.pem\n2022/07/17 16:17:02 [DEBUG] Home directory: /root/.fabric-ca-client\n2022/07/17 16:17:02 [DEBUG] Client configuration settings: &{URL:https://user1@manufacturer-net:user1@manufacturer-net-pw@ca.manufacturer-net:7054 MSPDir:/root/ca-tools/manufacturer/clientuser1/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/manufacturer-net/ca/ca.manufacturer-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@manufacturer-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-865fc89ff5-8t8vx] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42000c720}\n2022/07/17 16:17:02 [DEBUG] Entered runEnroll\n2022/07/17 16:17:02 [DEBUG] Enrolling { Name:user1@manufacturer-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@manufacturer-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-865fc89ff5-8t8vx] <nil> <nil> } Type:x509  }\n2022/07/17 16:17:02 [DEBUG] Initializing client with config: &{URL:https://ca.manufacturer-net:7054 MSPDir:/root/ca-tools/manufacturer/clientuser1/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/manufacturer-net/ca/ca.manufacturer-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:user1@manufacturer-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@manufacturer-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-865fc89ff5-8t8vx] <nil> <nil> } Type:x509  } CSR:{CN:Admin@manufacturer-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-865fc89ff5-8t8vx] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42000c720}\n2022/07/17 16:17:02 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42044c030 PluginOpts:<nil>}\n2022/07/17 16:17:02 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42043dc60 DummyKeystore:<nil>}\n2022/07/17 16:17:02 [INFO] TLS Enabled\n2022/07/17 16:17:02 [DEBUG] CA Files: [/crypto-config/peerOrganizations/manufacturer-net/ca/ca.manufacturer-net-cert.pem]\n2022/07/17 16:17:02 [DEBUG] Client Cert File: \n2022/07/17 16:17:02 [DEBUG] Client Key File: \n2022/07/17 16:17:02 [DEBUG] Client TLS certificate and/or key file not provided\n2022/07/17 16:17:02 [DEBUG] GenCSR &{CN:Admin@manufacturer-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-865fc89ff5-8t8vx] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2022/07/17 16:17:02 [INFO] generating key: &{A:ecdsa S:256}\n2022/07/17 16:17:02 [DEBUG] generate key from request: algo=ecdsa, size=256\n2022/07/17 16:17:02 [INFO] encoded CSR\n2022/07/17 16:17:02 [DEBUG] Sending request\nPOST https://ca.manufacturer-net:7054/enroll\n{\"hosts\":[\"ca-tools-865fc89ff5-8t8vx\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBYTCCAQcCAQAwbjELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMR8wHQYD\\nVQQDDBZ1c2VyMUBtYW51ZmFjdHVyZXItbmV0MFkwEwYHKoZIzj0CAQYIKoZIzj0D\\nAQcDQgAEqe+fo3Nw2p4tMO4kErN17f0Ah10ldVfUpkaAwPciGmKRsUVXTkckx94M\\nEfxb0HccsdeU9Igu+W29waqQYnTLYKA3MDUGCSqGSIb3DQEJDjEoMCYwJAYDVR0R\\nBB0wG4IZY2EtdG9vbHMtODY1ZmM4OWZmNS04dDh2eDAKBggqhkjOPQQDAgNIADBF\\nAiEAvvlgJz2rNEAP9aTbIfLYLcADyn5jH5uuD5uIcgxTyYYCIBTQuyPHtHpUBWxF\\nfRBLuysy+wO8pmZxpS8crMDxMPLB\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2022/07/17 16:17:02 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2022/07/17 16:17:02 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHekNDQXNHZ0F3SUJBZ0lVWWR2Ry9IWUE5QjY2b1VFQ3VXbyszY05ucHh3d0NnWUlLb1pJemowRUF3SXcKWkRFTE1Ba0dBMVVFQmhNQ1EwZ3hEekFOQmdOVkJBZ01CbHAxY21samFERVBNQTBHQTFVRUJ3d0dXblZ5YVdObwpNUlV3RXdZRFZRUUtEQXhOWVc1MVptRmpkSFZ5WlhJeEhEQWFCZ05WQkFNTUUyTmhMbTFoYm5WbVlXTjBkWEpsCmNpMXVaWFF3SGhjTk1qSXdOekUzTVRZeE1qQXdXaGNOTWpNd056RTNNVFl4TnpBd1dqQ0JnVEVMTUFrR0ExVUUKQmhNQ1ZWTXhGekFWQmdOVkJBZ1REazV2Y25Sb0lFTmhjbTlzYVc1aE1SUXdFZ1lEVlFRS0V3dEllWEJsY214bApaR2RsY2pFaU1Bc0dBMVVFQ3hNRWRYTmxjakFUQmdOVkJBc1RERzFoYm5WbVlXTjBkWEpsY2pFZk1CMEdBMVVFCkF3d1dkWE5sY2pGQWJXRnVkV1poWTNSMWNtVnlMVzVsZERCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUgKQTBJQUJLbnZuNk56Y05xZUxURHVKQkt6ZGUzOUFJZGRKWFZYMUtaR2dNRDNJaHBpa2JGRlYwNUhKTWZlREJIOApXOUIzSExIWGxQU0lMdmx0dmNHcWtHSjB5MkNqZ2dFeE1JSUJMVEFPQmdOVkhROEJBZjhFQkFNQ0E2Z3dIUVlEClZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SFFZRFZSME8KQkJZRUZJa2JaVUhXNkY1cWtNVnEyZDc4bk9JRHNNNVFNQjhHQTFVZEl3UVlNQmFBRk9KNjVJOU9ZOTQ3VzVFMApzY3ZQUHovcXZNOXJNQ1FHQTFVZEVRUWRNQnVDR1dOaExYUnZiMnh6TFRnMk5XWmpPRGxtWmpVdE9IUTRkbmd3CmdZY0dDQ29EQkFVR0J3Z0JCSHQ3SW1GMGRISnpJanA3SW1obUxrRm1abWxzYVdGMGFXOXVJam9pYldGdWRXWmgKWTNSMWNtVnlJaXdpYUdZdVJXNXliMnhzYldWdWRFbEVJam9pZFhObGNqRkFiV0Z1ZFdaaFkzUjFjbVZ5TFc1bApkQ0lzSW1obUxsSmxkbTlyWlhJaU9pSjBjblZsSWl3aWFHWXVWSGx3WlNJNkluVnpaWElpZlgwd0NnWUlLb1pJCnpqMEVBd0lEU0FBd1JRSWhBUEhtMUF4WS9LSDZ0bUdWT0RORnNhLzZ4S0FCaFZQQmtwVGx6Mk5hTWZEd0FpQnQKbEZqaFhvOTNCMHYvQUVXNnNkem1ieWpaaEF2UkZDaEVjRmd0dzRzTGpBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[Version: CAName:ca.manufacturer-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNERENDQWJLZ0F3SUJBZ0lVT3dGc0REL2tFMFdXbUJ3VWt5MkV1ZHJTSDQ4d0NnWUlLb1pJemowRUF3SXcKWkRFTE1Ba0dBMVVFQmhNQ1EwZ3hEekFOQmdOVkJBZ01CbHAxY21samFERVBNQTBHQTFVRUJ3d0dXblZ5YVdObwpNUlV3RXdZRFZRUUtEQXhOWVc1MVptRmpkSFZ5WlhJeEhEQWFCZ05WQkFNTUUyTmhMbTFoYm5WbVlXTjBkWEpsCmNpMXVaWFF3SGhjTk1qSXdOekUzTVRVeE16VXlXaGNOTWpVd05UQTJNVFV4TXpVeVdqQmtNUXN3Q1FZRFZRUUcKRXdKRFNERVBNQTBHQTFVRUNBd0dXblZ5YVdOb01ROHdEUVlEVlFRSERBWmFkWEpwWTJneEZUQVRCZ05WQkFvTQpERTFoYm5WbVlXTjBkWEpsY2pFY01Cb0dBMVVFQXd3VFkyRXViV0Z1ZFdaaFkzUjFjbVZ5TFc1bGREQlpNQk1HCkJ5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCRStJY09ydnJtSTJtdVdwQkhmRVhudVRmc0ZCN1N4WE9wdUMKYVhORmh1aDJwRmROTjdYTjNNYmgwNjM0Z2lXQS9WZWNCU05CeFlGV0piWEp1VVFnKzJLalFqQkFNQThHQTFVZApFd0VCL3dRRk1BTUJBZjh3RGdZRFZSMFBBUUgvQkFRREFnR21NQjBHQTFVZERnUVdCQlRpZXVTUFRtUGVPMXVSCk5MSEx6ejgvNnJ6UGF6QUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpQkhtY3dNMHhOalZVQXJRNFZjZXpLV0Rza1MKMzZETVNhT2dwTDhpa1hzRjR3SWhBSXVwSVpQYkNlTkVKZllITUlYMG0zelpjQWhCN21jSGgxK09TTlZ3Q3BDMQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIHD4XO1et/HkV9kxbfa7qQC/4AjDn8WCzbzPRh5ctMBVEiA6jkqxYwzdJHsXl5xK0LN9e7ntkVO/id/0ulJkO5jcnRpECiDhAJ/s+41/7wOt2WCbbDbE2sicTvcDZzbVUC2987BkIxIg41ms3kmh14rEbbi++/k19mZ5nl4f3evdo8vdamFvp64iRAogaAJn5BSfztHQsDXEaxXa5uV3tLG7KoxruzNOiNKJHKkSIAAKuiAgDlI02KfPXE0PE6XYpQL1UFCByzoSUIb6n/OhIkQKII20XsCghJsyw49chn/lLOTGUU3p7mE3aT8byCfqwddxEiDr1KnVIhgFIruJifBgAdN4AQNUp/fvbgA2005wxemKgSJECiBPXd7Z6pHL8hqjpctMRBpvuHtNWIWEWL7R2LGzA4O+fhIgqtUmczT/78fULw6BCTKaRI/f4uZx2cv5LiokC+v9G3siRAogrueYGBv+usuAt9ofSGOKqXc86xAsgYfhe3EMLgQOR6sSIIQ6eLaRE3ILBPuRXDam5qDvZw4EFNOU4SUaiKp1KORTKogBCiBHiNueMIoyteBWm5YHAYO20wrshz/93/d50RwQGBrD3hIgEZRxLGjxmacf0/F/QziomF9nL1QLnZ+wOuzjpr+zBZYaILPHo6lu18wKoNgTU/I98VE6MuDCTO0UBQWTSHc/ThJgIiDvOzjecIR2+CJOdnlzr2vuHZXMuHcztiP0L01wfpvauzJECiBYhK1FW4DCbXvwWUEBTYVzMtxF+N0UrUg6GpzdnDPqDRIg2qnz56VMPiGl15OvkgG1uHWiKvDf/eS1dXLdC291bcU6RAog85NnBnxHFQZ2Qm7Mzdfo0F0rhDt0c1tYmEErA4Ug2XsSIH/YTs5tyKArg27QT5IC04qQUlISmY3G60v5e4CqAMEAQiCgOAIjmstlTxY4zxoc/bVheoO/9ja3+34xhKRfLqelOkogVMsc+7X3mAbx4bYCbmSHHgVp+8obOSZaTyQaE8/DItNSIB4c1g1k9uKqK7Waf3aPhC1/zsRMuEY23zROj3/JQZR+ IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVqR0l3aUxmRDg0N3FpVXZvU3h6UWdRWTdacitGZnNZUAprcXVxakFxTjRPOU81NUNRbUVKOUVoQmZwQWZpbUlvNkErZU0vNFE4ZXk5WkplTm5jOHV6U3VqenlTdEIxaVI5CnNoblJGK2Z6dFNNWTNFRTJXWmsvT2ZrdW81WjdMekg2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo=]]\n2022/07/17 16:17:02 [DEBUG] newEnrollmentResponse user1@manufacturer-net\n2022/07/17 16:17:02 [INFO] Stored client certificate at /root/ca-tools/manufacturer/clientuser1/tls/signcerts/cert.pem\n2022/07/17 16:17:02 [INFO] Stored TLS root CA certificate at /root/ca-tools/manufacturer/clientuser1/tls/tlscacerts/tls-ca-manufacturer-net-7054.pem\n+ cp /root/ca-tools/manufacturer/clientuser1/tls/keystore/34b889890186cbfb3e3af5b4dd6ccb916f74a27f5b5ed285dda919ba82027d92_sk /root/ca-tools/manufacturer/clientuser1/tls/keystore/fcdace3a5b665446390412705960a56f8045b01c34d7909185fd57c65f52a9ca_sk /crypto-config/peerOrganizations/manufacturer-net/users/user1@manufacturer-net/tls/client.key\ncp: target '/crypto-config/peerOrganizations/manufacturer-net/users/user1@manufacturer-net/tls/client.key' is not a directory\n+ cp /root/ca-tools/manufacturer/clientuser1/tls/signcerts/cert.pem /crypto-config/peerOrganizations/manufacturer-net/users/user1@manufacturer-net/tls/client.crt\n+ cp /root/ca-tools/manufacturer/clientuser1/tls/tlscacerts/tls-ca-manufacturer-net-7054.pem /crypto-config/peerOrganizations/manufacturer-net/users/user1@manufacturer-net/tls/ca.crt\n+ CUR_USER=1\n+ '[' 1 -lt 1 ']'\n+ cd /", "stderr_lines": ["Defaulting container name to ca-tools.", "Use 'kubectl describe pod/ca-tools-865fc89ff5-8t8vx -n manufacturer-net' to see all of the containers in this pod.", "+ CURRENT_DIR=/", "+ FULLY_QUALIFIED_ORG_NAME=manufacturer-net", "+ ORG_NAME=manufacturer", "+ TYPE_FOLDER=peers", "+ USER_IDENTITIES=W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d", "+ AFFILIATION=manufacturer", "+ SUBJECT=O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH", "+ CA=ca.manufacturer-net:7054", "+ '[' peer '!=' peer ']'", "+ ORG_CYPTO_FOLDER=/crypto-config/peerOrganizations/manufacturer-net", "+ ROOT_TLS_CERT=/crypto-config/peerOrganizations/manufacturer-net/ca/ca.manufacturer-net-cert.pem", "+ CAS_FOLDER=/root/ca-tools/cas/ca-manufacturer", "+ ORG_HOME=/root/ca-tools/manufacturer", "+ CUR_USER=0", "++ echo W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d", "++ base64 -d", "++ sed -e s/None/null/g", "++ tr \\' '\"'", "++ jq '. | length'", "+ TOTAL_USERS=1", "+ '[' 0 -lt 1 ']'", "++ echo W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d", "++ base64 -d", "++ sed -e s/None/null/g", "++ tr \\' '\"'", "++ jq '.[0].identity'", "++ sed -e 's/\"//g'", "+ USER=user1", "+ ORG_USER=user1@manufacturer-net", "+ ORG_USERPASS=user1@manufacturer-net-pw", "+ ADMIN_USER=Admin@manufacturer-net", "+ ADMIN_USERPASS=Admin@manufacturer-net-pw", "+ CUR_ATTRS=0", "+ ATTRS=hf.Revoker=true", "++ echo W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d", "++ base64 -d", "++ sed -e s/None/null/g", "++ tr \\' '\"'", "++ jq '.[0].attributes | length'", "+ TOTAL_ATTRS=1", "+ '[' 0 -lt 1 ']'", "++ echo W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d", "++ base64 -d", "++ tr \\' '\"'", "++ jq '.[0].attributes[0].key'", "++ sed -e s/None/null/g", "++ sed -e 's/\"//g'", "++ echo W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d", "++ base64 -d", "++ sed -e s/None/null/g", "++ jq '.[0].attributes[0].value'", "++ tr \\' '\"'", "++ sed -e 's/\"//g'", "+ ATTRS=hf.Revoker=true,hf.Revoker=true:ecert", "+ CUR_ATTRS=1", "+ '[' 1 -lt 1 ']'", "+ '[' '!' -d /root/ca-tools/manufacturer/clientuser1 ']'", "++++ date", "+++ echo Sun Jul 17 16:17:02 UTC '2022 + 5 minutes'", "++ date -d 'Sun Jul 17 16:17:02 UTC 2022 + 5 minutes' +%Y%m%d%H%M%S", "+ CUR_DATETIME=20220717162202", "+++ sed s/notAfter=//g", "++++ openssl x509 -noout -enddate", "+++ echo notAfter=Jul 17 15:21:00 2023 GMT", "++ date -d 'Jul 17 15:21:00 2023 GMT' +%Y%m%d%H%M%S", "+ CERT_DATETIME=20230717152100", "++ openssl x509 -text -noout -certopt no_subject,no_header,no_version,no_serial,no_signame,no_validity,no_issuer,no_pubkey,no_sigdump,no_aux", "+ ATTRS_CERT='        X509v3 extensions:", "            X509v3 Key Usage: critical", "                Digital Signature", "            X509v3 Basic Constraints: critical", "                CA:FALSE", "            X509v3 Subject Key Identifier: ", "                C1:14:5B:7A:70:2A:60:DA:60:D5:68:EC:B9:78:0B:EF:86:A7:1D:1A", "            X509v3 Authority Key Identifier: ", "                keyid:E2:7A:E4:8F:4E:63:DE:3B:5B:91:34:B1:CB:CF:3F:3F:EA:BC:CF:6B", "", "            X509v3 Subject Alternative Name: ", "                DNS:ca-tools-865fc89ff5-8t8vx", "            1.2.3.4.5.6.7.8.1: ", "                {\"attrs\":{\"hf.Affiliation\":\"manufacturer\",\"hf.EnrollmentID\":\"user1@manufacturer-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'", "+ ATTRS_CERT='", "                {\"attrs\":{\"hf.Affiliation\":\"manufacturer\",\"hf.EnrollmentID\":\"user1@manufacturer-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'", "+ CUR_ATTRS=0", "+ MATCH_FLAG=true", "+ '[' 0 -lt 1 ']'", "++ echo W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d", "++ base64 -d", "++ sed -e s/None/null/g", "++ sed -e 's/\"//g'", "++ tr \\' '\"'", "++ jq '.[0].attributes[0].key'", "+ CUR_KEY=hf.Revoker", "++ echo '{\"attrs\":{\"hf.Affiliation\":\"manufacturer\",\"hf.EnrollmentID\":\"user1@manufacturer-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'", "++ jq .attrs.hf.Revoker", "+ [[ null == \\n\\u\\l\\l ]]", "+ MATCH_FLAG=false", "+ CUR_ATTRS=1", "+ '[' 1 -lt 1 ']'", "+ '[' 20220717162202 -ge 20230717152100 ']'", "+ '[' false == false ']'", "++ echo '{\"attrs\":{\"hf.Affiliation\":\"manufacturer\",\"hf.EnrollmentID\":\"user1@manufacturer-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'", "++ jq '.attrs | length'", "+ TOTAL_CERT_ATTRS=4", "+ CUR_CERT_ATTRS=0", "+ '[' 0 -lt 4 ']'", "++ echo '{\"attrs\":{\"hf.Affiliation\":\"manufacturer\",\"hf.EnrollmentID\":\"user1@manufacturer-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'", "++ jq '.attrs | to_entries | .[0].key'", "++ sed -e 's/\"//g'", "+ '[' hf.Affiliation '!=' hf.Affiliation ']'", "+ CUR_CERT_ATTRS=1", "+ '[' 1 -lt 4 ']'", "++ echo '{\"attrs\":{\"hf.Affiliation\":\"manufacturer\",\"hf.EnrollmentID\":\"user1@manufacturer-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'", "++ jq '.attrs | to_entries | .[1].key'", "++ sed -e 's/\"//g'", "+ '[' hf.EnrollmentID '!=' hf.Affiliation ']'", "++ echo '{\"attrs\":{\"hf.Affiliation\":\"manufacturer\",\"hf.EnrollmentID\":\"user1@manufacturer-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'", "++ jq '.attrs | to_entries | .[1].key'", "++ sed -e 's/\"//g'", "+ '[' hf.EnrollmentID '!=' hf.Type ']'", "++ echo '{\"attrs\":{\"hf.Affiliation\":\"manufacturer\",\"hf.EnrollmentID\":\"user1@manufacturer-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'", "++ jq '.attrs | to_entries | .[1].key'", "++ sed -e 's/\"//g'", "+ '[' hf.EnrollmentID '!=' hf.EnrollmentID ']'", "+ CUR_CERT_ATTRS=2", "+ '[' 2 -lt 4 ']'", "++ echo '{\"attrs\":{\"hf.Affiliation\":\"manufacturer\",\"hf.EnrollmentID\":\"user1@manufacturer-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'", "++ jq '.attrs | to_entries | .[2].key'", "++ sed -e 's/\"//g'", "+ '[' hf.Revoker '!=' hf.Affiliation ']'", "++ echo '{\"attrs\":{\"hf.Affiliation\":\"manufacturer\",\"hf.EnrollmentID\":\"user1@manufacturer-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'", "++ jq '.attrs | to_entries | .[2].key'", "++ sed -e 's/\"//g'", "+ '[' hf.Revoker '!=' hf.Type ']'", "++ echo '{\"attrs\":{\"hf.Affiliation\":\"manufacturer\",\"hf.EnrollmentID\":\"user1@manufacturer-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'", "++ jq '.attrs | to_entries | .[2].key'", "++ sed -e 's/\"//g'", "+ '[' hf.Revoker '!=' hf.EnrollmentID ']'", "+ KEY_PRESENT=false", "+ CUR_ATTRS=0", "+ '[' 0 -lt 1 ']'", "++ sed -e 's/\"//g'", "++ jq '.attrs | to_entries | .[2].key'", "++ echo '{\"attrs\":{\"hf.Affiliation\":\"manufacturer\",\"hf.EnrollmentID\":\"user1@manufacturer-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'", "++ echo W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d", "++ jq '.[0].attributes[0].key'", "++ tr \\' '\"'", "++ sed -e s/None/null/g", "++ base64 -d", "++ sed -e 's/\"//g'", "+ '[' hf.Revoker == hf.Revoker ']'", "+ KEY_PRESENT=true", "+ CUR_ATTRS=1", "+ '[' 1 -lt 1 ']'", "+ '[' true == false ']'", "+ CUR_CERT_ATTRS=3", "+ '[' 3 -lt 4 ']'", "++ echo '{\"attrs\":{\"hf.Affiliation\":\"manufacturer\",\"hf.EnrollmentID\":\"user1@manufacturer-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'", "++ sed -e 's/\"//g'", "++ jq '.attrs | to_entries | .[3].key'", "+ '[' hf.Type '!=' hf.Affiliation ']'", "++ sed -e 's/\"//g'", "++ jq '.attrs | to_entries | .[3].key'", "++ echo '{\"attrs\":{\"hf.Affiliation\":\"manufacturer\",\"hf.EnrollmentID\":\"user1@manufacturer-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'", "+ '[' hf.Type '!=' hf.Type ']'", "+ CUR_CERT_ATTRS=4", "+ '[' 4 -lt 4 ']'", "+ fabric-ca-client identity modify user1@manufacturer-net -d --type user --affiliation manufacturer --attrs hf.Revoker=true,hf.Revoker=true:ecert --tls.certfiles /crypto-config/peerOrganizations/manufacturer-net/ca/ca.manufacturer-net-cert.pem --home /root/ca-tools/cas/ca-manufacturer", "2022/07/17 16:17:02 [DEBUG] Home directory: /root/ca-tools/cas/ca-manufacturer", "2022/07/17 16:17:02 [INFO] Configuration file location: /root/ca-tools/cas/ca-manufacturer/fabric-ca-client-config.yaml", "2022/07/17 16:17:02 [DEBUG] Checking for enrollment", "2022/07/17 16:17:02 [DEBUG] Initializing client with config: &{URL:https://ca.manufacturer-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/manufacturer-net/ca/ca.manufacturer-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:manufacturer-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-865fc89ff5-8t8vx] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200a8400}", "2022/07/17 16:17:02 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42047e600 PluginOpts:<nil>}", "2022/07/17 16:17:02 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200a5d20 DummyKeystore:<nil>}", "2022/07/17 16:17:02 [INFO] TLS Enabled", "2022/07/17 16:17:02 [DEBUG] CA Files: [/crypto-config/peerOrganizations/manufacturer-net/ca/ca.manufacturer-net-cert.pem]", "2022/07/17 16:17:02 [DEBUG] Client Cert File: ", "2022/07/17 16:17:02 [DEBUG] Client Key File: ", "2022/07/17 16:17:02 [DEBUG] Client TLS certificate and/or key file not provided", "2022/07/17 16:17:02 [DEBUG] Client configuration settings: &{URL:https://ca.manufacturer-net:7054 MSPDir:/root/ca-tools/cas/ca-manufacturer/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/manufacturer-net/ca/ca.manufacturer-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:manufacturer-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-865fc89ff5-8t8vx] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200a8400}", "2022/07/17 16:17:02 [DEBUG] Entered runModifyIdentity: {id: json: add:{ID: Type:user Affiliation: Attributes:[] MaxEnrollments:0 Secret: CAName:} modify:{ID: Type:user Affiliation:manufacturer Attributes:[] MaxEnrollments:0 Secret: CAName:} remove:{ID: Force:false CAName:}}", "2022/07/17 16:17:02 [DEBUG] Initializing client with config: &{URL:https://ca.manufacturer-net:7054 MSPDir:/root/ca-tools/cas/ca-manufacturer/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/manufacturer-net/ca/ca.manufacturer-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:manufacturer-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-865fc89ff5-8t8vx] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200a8400}", "2022/07/17 16:17:02 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42047e600 PluginOpts:<nil>}", "2022/07/17 16:17:02 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4200a5d20 DummyKeystore:<nil>}", "2022/07/17 16:17:02 [INFO] TLS Enabled", "2022/07/17 16:17:02 [DEBUG] CA Files: [/crypto-config/peerOrganizations/manufacturer-net/ca/ca.manufacturer-net-cert.pem]", "2022/07/17 16:17:02 [DEBUG] Client Cert File: ", "2022/07/17 16:17:02 [DEBUG] Client Key File: ", "2022/07/17 16:17:02 [DEBUG] Client TLS certificate and/or key file not provided", "2022/07/17 16:17:02 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-manufacturer/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-manufacturer/msp/signcerts/cert.pem", "2022/07/17 16:17:02 [DEBUG] No credential found at /root/ca-tools/cas/ca-manufacturer/msp/user/SignerConfig: open /root/ca-tools/cas/ca-manufacturer/msp/user/SignerConfig: no such file or directory", "2022/07/17 16:17:02 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-manufacturer/msp/user/SignerConfig", "2022/07/17 16:17:02 [DEBUG] Entering identity.ModifyIdentity with request: &{ID:user1@manufacturer-net Type:user Affiliation:manufacturer Attributes:[{Name:hf.Revoker Value:true ECert:true}] MaxEnrollments:0 Secret: CAName:}", "2022/07/17 16:17:02 [DEBUG] Adding token-based authorization header", "2022/07/17 16:17:02 [DEBUG] Sending request", "PUT https://ca.manufacturer-net:7054/identities/user1@manufacturer-net", "{\"ID\":\"user1@manufacturer-net\",\"type\":\"user\",\"affiliation\":\"manufacturer\",\"attrs\":[{\"name\":\"hf.Revoker\",\"value\":\"true\",\"ecert\":true}],\"max_enrollments\":0}", "2022/07/17 16:17:02 [DEBUG] Received response", "statusCode=200 (200 OK)", "2022/07/17 16:17:02 [DEBUG] Response body result: map[affiliation:manufacturer attrs:[map[name:hf.Revoker value:true ecert:true] map[value:user1@manufacturer-net ecert:true name:hf.EnrollmentID] map[value:user ecert:true name:hf.Type] map[name:hf.Affiliation value:manufacturer ecert:true]] max_enrollments:-1 caname:ca.manufacturer-net id:user1@manufacturer-net type:user]", "2022/07/17 16:17:02 [DEBUG] Successfully modified identity 'user1@manufacturer-net'", "+ fabric-ca-client enroll -d -u https://user1@manufacturer-net:user1@manufacturer-net-pw@ca.manufacturer-net:7054 --csr.names O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH --tls.certfiles /crypto-config/peerOrganizations/manufacturer-net/ca/ca.manufacturer-net-cert.pem --home /root/ca-tools/manufacturer/clientuser1", "2022/07/17 16:17:02 [DEBUG] Home directory: /root/ca-tools/manufacturer/clientuser1", "2022/07/17 16:17:02 [DEBUG] Client configuration settings: &{URL:https://user1@manufacturer-net:user1@manufacturer-net-pw@ca.manufacturer-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/manufacturer-net/ca/ca.manufacturer-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:user1@manufacturer-net Names:[{C: ST: L: O:Manufacturer OU: SerialNumber:} {C: ST: L: O: OU:Manufacturer SerialNumber:} {C: ST: L:47.38/8.54/Zurich O: OU: SerialNumber:} {C:CH ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-865fc89ff5-8t8vx] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420471de0}", "2022/07/17 16:17:02 [DEBUG] Entered runEnroll", "2022/07/17 16:17:02 [DEBUG] Enrolling { Name:user1@manufacturer-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{user1@manufacturer-net [{   Manufacturer  } {    Manufacturer } {  47.38/8.54/Zurich   } {CH     }] [ca-tools-865fc89ff5-8t8vx] <nil> <nil> } Type:x509  }", "2022/07/17 16:17:02 [DEBUG] Initializing client with config: &{URL:https://ca.manufacturer-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/manufacturer-net/ca/ca.manufacturer-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:user1@manufacturer-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{user1@manufacturer-net [{   Manufacturer  } {    Manufacturer } {  47.38/8.54/Zurich   } {CH     }] [ca-tools-865fc89ff5-8t8vx] <nil> <nil> } Type:x509  } CSR:{CN:user1@manufacturer-net Names:[{C: ST: L: O:Manufacturer OU: SerialNumber:} {C: ST: L: O: OU:Manufacturer SerialNumber:} {C: ST: L:47.38/8.54/Zurich O: OU: SerialNumber:} {C:CH ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-865fc89ff5-8t8vx] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc420471de0}", "2022/07/17 16:17:02 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4201f5f20 PluginOpts:<nil>}", "2022/07/17 16:17:02 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc4204623b0 DummyKeystore:<nil>}", "2022/07/17 16:17:02 [INFO] TLS Enabled", "2022/07/17 16:17:02 [DEBUG] CA Files: [/crypto-config/peerOrganizations/manufacturer-net/ca/ca.manufacturer-net-cert.pem]", "2022/07/17 16:17:02 [DEBUG] Client Cert File: ", "2022/07/17 16:17:02 [DEBUG] Client Key File: ", "2022/07/17 16:17:02 [DEBUG] Client TLS certificate and/or key file not provided", "2022/07/17 16:17:02 [DEBUG] GenCSR &{CN:user1@manufacturer-net Names:[{C: ST: L: O:Manufacturer OU: SerialNumber:} {C: ST: L: O: OU:Manufacturer SerialNumber:} {C: ST: L:47.38/8.54/Zurich O: OU: SerialNumber:} {C:CH ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-865fc89ff5-8t8vx] KeyRequest:<nil> CA:<nil> SerialNumber:}", "2022/07/17 16:17:02 [INFO] generating key: &{A:ecdsa S:256}", "2022/07/17 16:17:02 [DEBUG] generate key from request: algo=ecdsa, size=256", "2022/07/17 16:17:02 [INFO] encoded CSR", "2022/07/17 16:17:02 [DEBUG] Sending request", "POST https://ca.manufacturer-net:7054/enroll", "{\"hosts\":[\"ca-tools-865fc89ff5-8t8vx\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBajCCARECAQAweDELMAkGA1UEBhMCQ0gxGjAYBgNVBAcTETQ3LjM4LzguNTQv\\nWnVyaWNoMRUwEwYDVQQKEwxNYW51ZmFjdHVyZXIxFTATBgNVBAsTDE1hbnVmYWN0\\ndXJlcjEfMB0GA1UEAwwWdXNlcjFAbWFudWZhY3R1cmVyLW5ldDBZMBMGByqGSM49\\nAgEGCCqGSM49AwEHA0IABLk23d14JdNZQehqK2EqMH5aMZgR10CCKAWDW0cqSoOK\\nxkP/mpn+kWPtIzTin4AgohbmQtWe8+231kcHL8wGtiGgNzA1BgkqhkiG9w0BCQ4x\\nKDAmMCQGA1UdEQQdMBuCGWNhLXRvb2xzLTg2NWZjODlmZjUtOHQ4dngwCgYIKoZI\\nzj0EAwIDRwAwRAIgWqa5yXP4F3a0C6O9Lc2vshA/q2kympQfLms1QMULZTsCIGFD\\nIYXAFjihEcHdPXe0rNQBzmEsn6fuebJggX01nZgC\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}", "2022/07/17 16:17:02 [DEBUG] Received response", "statusCode=201 (201 Created)", "2022/07/17 16:17:02 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvekNDQXFhZ0F3SUJBZ0lVZE9zMnFMWGl0eHM2Nnc1RkdtejkxL0RGZlFNd0NnWUlLb1pJemowRUF3SXcKWkRFTE1Ba0dBMVVFQmhNQ1EwZ3hEekFOQmdOVkJBZ01CbHAxY21samFERVBNQTBHQTFVRUJ3d0dXblZ5YVdObwpNUlV3RXdZRFZRUUtEQXhOWVc1MVptRmpkSFZ5WlhJeEhEQWFCZ05WQkFNTUUyTmhMbTFoYm5WbVlXTjBkWEpsCmNpMXVaWFF3SGhjTk1qSXdOekUzTVRZeE1qQXdXaGNOTWpNd056RTNNVFl4TnpBd1dqQ0JoVEVMTUFrR0ExVUUKQmhNQ1EwZ3hHakFZQmdOVkJBY1RFVFEzTGpNNEx6Z3VOVFF2V25WeWFXTm9NUlV3RXdZRFZRUUtFd3hOWVc1MQpabUZqZEhWeVpYSXhJakFMQmdOVkJBc1RCSFZ6WlhJd0V3WURWUVFMRXd4dFlXNTFabUZqZEhWeVpYSXhIekFkCkJnTlZCQU1NRm5WelpYSXhRRzFoYm5WbVlXTjBkWEpsY2kxdVpYUXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak8KUFFNQkJ3TkNBQVM1TnQzZGVDWFRXVUhvYWl0aEtqQitXakdZRWRkQWdpZ0ZnMXRIS2txRGlzWkQvNXFaL3BGago3U00wNHArQUlLSVc1a0xWbnZQdHQ5WkhCeS9NQnJZaG80SUJFakNDQVE0d0RnWURWUjBQQVFIL0JBUURBZ2VBCk1Bd0dBMVVkRXdFQi93UUNNQUF3SFFZRFZSME9CQllFRk5aQUsrQUdpU1B3bGphZTkrdVR5VFF5dVlMak1COEcKQTFVZEl3UVlNQmFBRk9KNjVJOU9ZOTQ3VzVFMHNjdlBQei9xdk05ck1DUUdBMVVkRVFRZE1CdUNHV05oTFhSdgpiMnh6TFRnMk5XWmpPRGxtWmpVdE9IUTRkbmd3Z1ljR0NDb0RCQVVHQndnQkJIdDdJbUYwZEhKeklqcDdJbWhtCkxrRm1abWxzYVdGMGFXOXVJam9pYldGdWRXWmhZM1IxY21WeUlpd2lhR1l1Ulc1eWIyeHNiV1Z1ZEVsRUlqb2kKZFhObGNqRkFiV0Z1ZFdaaFkzUjFjbVZ5TFc1bGRDSXNJbWhtTGxKbGRtOXJaWElpT2lKMGNuVmxJaXdpYUdZdQpWSGx3WlNJNkluVnpaWElpZlgwd0NnWUlLb1pJemowRUF3SURSd0F3UkFJZ2ZTTlc4VVlwWGRmQlUrNjNlL2o3ClgvZ095cFQ2czhiRS9xOWEwTWRVcVYwQ0lBeVQydUNJaHFnM3ZhSnB6T2FVNmVJR08xOHB3QVpJVTZoNWFDVGYKaXF3MgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.manufacturer-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNERENDQWJLZ0F3SUJBZ0lVT3dGc0REL2tFMFdXbUJ3VWt5MkV1ZHJTSDQ4d0NnWUlLb1pJemowRUF3SXcKWkRFTE1Ba0dBMVVFQmhNQ1EwZ3hEekFOQmdOVkJBZ01CbHAxY21samFERVBNQTBHQTFVRUJ3d0dXblZ5YVdObwpNUlV3RXdZRFZRUUtEQXhOWVc1MVptRmpkSFZ5WlhJeEhEQWFCZ05WQkFNTUUyTmhMbTFoYm5WbVlXTjBkWEpsCmNpMXVaWFF3SGhjTk1qSXdOekUzTVRVeE16VXlXaGNOTWpVd05UQTJNVFV4TXpVeVdqQmtNUXN3Q1FZRFZRUUcKRXdKRFNERVBNQTBHQTFVRUNBd0dXblZ5YVdOb01ROHdEUVlEVlFRSERBWmFkWEpwWTJneEZUQVRCZ05WQkFvTQpERTFoYm5WbVlXTjBkWEpsY2pFY01Cb0dBMVVFQXd3VFkyRXViV0Z1ZFdaaFkzUjFjbVZ5TFc1bGREQlpNQk1HCkJ5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCRStJY09ydnJtSTJtdVdwQkhmRVhudVRmc0ZCN1N4WE9wdUMKYVhORmh1aDJwRmROTjdYTjNNYmgwNjM0Z2lXQS9WZWNCU05CeFlGV0piWEp1VVFnKzJLalFqQkFNQThHQTFVZApFd0VCL3dRRk1BTUJBZjh3RGdZRFZSMFBBUUgvQkFRREFnR21NQjBHQTFVZERnUVdCQlRpZXVTUFRtUGVPMXVSCk5MSEx6ejgvNnJ6UGF6QUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpQkhtY3dNMHhOalZVQXJRNFZjZXpLV0Rza1MKMzZETVNhT2dwTDhpa1hzRjR3SWhBSXVwSVpQYkNlTkVKZllITUlYMG0zelpjQWhCN21jSGgxK09TTlZ3Q3BDMQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIHD4XO1et/HkV9kxbfa7qQC/4AjDn8WCzbzPRh5ctMBVEiA6jkqxYwzdJHsXl5xK0LN9e7ntkVO/id/0ulJkO5jcnRpECiDhAJ/s+41/7wOt2WCbbDbE2sicTvcDZzbVUC2987BkIxIg41ms3kmh14rEbbi++/k19mZ5nl4f3evdo8vdamFvp64iRAogaAJn5BSfztHQsDXEaxXa5uV3tLG7KoxruzNOiNKJHKkSIAAKuiAgDlI02KfPXE0PE6XYpQL1UFCByzoSUIb6n/OhIkQKII20XsCghJsyw49chn/lLOTGUU3p7mE3aT8byCfqwddxEiDr1KnVIhgFIruJifBgAdN4AQNUp/fvbgA2005wxemKgSJECiBPXd7Z6pHL8hqjpctMRBpvuHtNWIWEWL7R2LGzA4O+fhIgqtUmczT/78fULw6BCTKaRI/f4uZx2cv5LiokC+v9G3siRAogrueYGBv+usuAt9ofSGOKqXc86xAsgYfhe3EMLgQOR6sSIIQ6eLaRE3ILBPuRXDam5qDvZw4EFNOU4SUaiKp1KORTKogBCiBHiNueMIoyteBWm5YHAYO20wrshz/93/d50RwQGBrD3hIgEZRxLGjxmacf0/F/QziomF9nL1QLnZ+wOuzjpr+zBZYaILPHo6lu18wKoNgTU/I98VE6MuDCTO0UBQWTSHc/ThJgIiDvOzjecIR2+CJOdnlzr2vuHZXMuHcztiP0L01wfpvauzJECiBYhK1FW4DCbXvwWUEBTYVzMtxF+N0UrUg6GpzdnDPqDRIg2qnz56VMPiGl15OvkgG1uHWiKvDf/eS1dXLdC291bcU6RAog85NnBnxHFQZ2Qm7Mzdfo0F0rhDt0c1tYmEErA4Ug2XsSIH/YTs5tyKArg27QT5IC04qQUlISmY3G60v5e4CqAMEAQiCgOAIjmstlTxY4zxoc/bVheoO/9ja3+34xhKRfLqelOkogVMsc+7X3mAbx4bYCbmSHHgVp+8obOSZaTyQaE8/DItNSIB4c1g1k9uKqK7Waf3aPhC1/zsRMuEY23zROj3/JQZR+ IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVqR0l3aUxmRDg0N3FpVXZvU3h6UWdRWTdacitGZnNZUAprcXVxakFxTjRPOU81NUNRbUVKOUVoQmZwQWZpbUlvNkErZU0vNFE4ZXk5WkplTm5jOHV6U3VqenlTdEIxaVI5CnNoblJGK2Z6dFNNWTNFRTJXWmsvT2ZrdW81WjdMekg2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]", "2022/07/17 16:17:02 [DEBUG] newEnrollmentResponse user1@manufacturer-net", "2022/07/17 16:17:02 [INFO] Stored client certificate at /root/ca-tools/manufacturer/clientuser1/msp/signcerts/cert.pem", "2022/07/17 16:17:02 [INFO] Stored root CA certificate at /root/ca-tools/manufacturer/clientuser1/msp/cacerts/ca-manufacturer-net-7054.pem", "+ cp /root/ca-tools/manufacturer/clientuser1/msp/signcerts/cert.pem /root/ca-tools/manufacturer/clientuser1/msp/admincerts/user1@manufacturer-net-cert.pem", "+ cp -R /root/ca-tools/manufacturer/clientuser1/msp /crypto-config/peerOrganizations/manufacturer-net/users/user1@manufacturer-net", "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://user1@manufacturer-net:user1@manufacturer-net-pw@ca.manufacturer-net:7054 -M /root/ca-tools/manufacturer/clientuser1/tls --tls.certfiles /crypto-config/peerOrganizations/manufacturer-net/ca/ca.manufacturer-net-cert.pem", "2022/07/17 16:17:02 [DEBUG] Home directory: /root/.fabric-ca-client", "2022/07/17 16:17:02 [DEBUG] Client configuration settings: &{URL:https://user1@manufacturer-net:user1@manufacturer-net-pw@ca.manufacturer-net:7054 MSPDir:/root/ca-tools/manufacturer/clientuser1/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/manufacturer-net/ca/ca.manufacturer-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@manufacturer-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-865fc89ff5-8t8vx] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42000c720}", "2022/07/17 16:17:02 [DEBUG] Entered runEnroll", "2022/07/17 16:17:02 [DEBUG] Enrolling { Name:user1@manufacturer-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@manufacturer-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-865fc89ff5-8t8vx] <nil> <nil> } Type:x509  }", "2022/07/17 16:17:02 [DEBUG] Initializing client with config: &{URL:https://ca.manufacturer-net:7054 MSPDir:/root/ca-tools/manufacturer/clientuser1/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/manufacturer-net/ca/ca.manufacturer-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:user1@manufacturer-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@manufacturer-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-865fc89ff5-8t8vx] <nil> <nil> } Type:x509  } CSR:{CN:Admin@manufacturer-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-865fc89ff5-8t8vx] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc42000c720}", "2022/07/17 16:17:02 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42044c030 PluginOpts:<nil>}", "2022/07/17 16:17:02 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc42043dc60 DummyKeystore:<nil>}", "2022/07/17 16:17:02 [INFO] TLS Enabled", "2022/07/17 16:17:02 [DEBUG] CA Files: [/crypto-config/peerOrganizations/manufacturer-net/ca/ca.manufacturer-net-cert.pem]", "2022/07/17 16:17:02 [DEBUG] Client Cert File: ", "2022/07/17 16:17:02 [DEBUG] Client Key File: ", "2022/07/17 16:17:02 [DEBUG] Client TLS certificate and/or key file not provided", "2022/07/17 16:17:02 [DEBUG] GenCSR &{CN:Admin@manufacturer-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-865fc89ff5-8t8vx] KeyRequest:<nil> CA:<nil> SerialNumber:}", "2022/07/17 16:17:02 [INFO] generating key: &{A:ecdsa S:256}", "2022/07/17 16:17:02 [DEBUG] generate key from request: algo=ecdsa, size=256", "2022/07/17 16:17:02 [INFO] encoded CSR", "2022/07/17 16:17:02 [DEBUG] Sending request", "POST https://ca.manufacturer-net:7054/enroll", "{\"hosts\":[\"ca-tools-865fc89ff5-8t8vx\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBYTCCAQcCAQAwbjELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMR8wHQYD\\nVQQDDBZ1c2VyMUBtYW51ZmFjdHVyZXItbmV0MFkwEwYHKoZIzj0CAQYIKoZIzj0D\\nAQcDQgAEqe+fo3Nw2p4tMO4kErN17f0Ah10ldVfUpkaAwPciGmKRsUVXTkckx94M\\nEfxb0HccsdeU9Igu+W29waqQYnTLYKA3MDUGCSqGSIb3DQEJDjEoMCYwJAYDVR0R\\nBB0wG4IZY2EtdG9vbHMtODY1ZmM4OWZmNS04dDh2eDAKBggqhkjOPQQDAgNIADBF\\nAiEAvvlgJz2rNEAP9aTbIfLYLcADyn5jH5uuD5uIcgxTyYYCIBTQuyPHtHpUBWxF\\nfRBLuysy+wO8pmZxpS8crMDxMPLB\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}", "2022/07/17 16:17:02 [DEBUG] Received response", "statusCode=201 (201 Created)", "2022/07/17 16:17:02 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHekNDQXNHZ0F3SUJBZ0lVWWR2Ry9IWUE5QjY2b1VFQ3VXbyszY05ucHh3d0NnWUlLb1pJemowRUF3SXcKWkRFTE1Ba0dBMVVFQmhNQ1EwZ3hEekFOQmdOVkJBZ01CbHAxY21samFERVBNQTBHQTFVRUJ3d0dXblZ5YVdObwpNUlV3RXdZRFZRUUtEQXhOWVc1MVptRmpkSFZ5WlhJeEhEQWFCZ05WQkFNTUUyTmhMbTFoYm5WbVlXTjBkWEpsCmNpMXVaWFF3SGhjTk1qSXdOekUzTVRZeE1qQXdXaGNOTWpNd056RTNNVFl4TnpBd1dqQ0JnVEVMTUFrR0ExVUUKQmhNQ1ZWTXhGekFWQmdOVkJBZ1REazV2Y25Sb0lFTmhjbTlzYVc1aE1SUXdFZ1lEVlFRS0V3dEllWEJsY214bApaR2RsY2pFaU1Bc0dBMVVFQ3hNRWRYTmxjakFUQmdOVkJBc1RERzFoYm5WbVlXTjBkWEpsY2pFZk1CMEdBMVVFCkF3d1dkWE5sY2pGQWJXRnVkV1poWTNSMWNtVnlMVzVsZERCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUgKQTBJQUJLbnZuNk56Y05xZUxURHVKQkt6ZGUzOUFJZGRKWFZYMUtaR2dNRDNJaHBpa2JGRlYwNUhKTWZlREJIOApXOUIzSExIWGxQU0lMdmx0dmNHcWtHSjB5MkNqZ2dFeE1JSUJMVEFPQmdOVkhROEJBZjhFQkFNQ0E2Z3dIUVlEClZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SFFZRFZSME8KQkJZRUZJa2JaVUhXNkY1cWtNVnEyZDc4bk9JRHNNNVFNQjhHQTFVZEl3UVlNQmFBRk9KNjVJOU9ZOTQ3VzVFMApzY3ZQUHovcXZNOXJNQ1FHQTFVZEVRUWRNQnVDR1dOaExYUnZiMnh6TFRnMk5XWmpPRGxtWmpVdE9IUTRkbmd3CmdZY0dDQ29EQkFVR0J3Z0JCSHQ3SW1GMGRISnpJanA3SW1obUxrRm1abWxzYVdGMGFXOXVJam9pYldGdWRXWmgKWTNSMWNtVnlJaXdpYUdZdVJXNXliMnhzYldWdWRFbEVJam9pZFhObGNqRkFiV0Z1ZFdaaFkzUjFjbVZ5TFc1bApkQ0lzSW1obUxsSmxkbTlyWlhJaU9pSjBjblZsSWl3aWFHWXVWSGx3WlNJNkluVnpaWElpZlgwd0NnWUlLb1pJCnpqMEVBd0lEU0FBd1JRSWhBUEhtMUF4WS9LSDZ0bUdWT0RORnNhLzZ4S0FCaFZQQmtwVGx6Mk5hTWZEd0FpQnQKbEZqaFhvOTNCMHYvQUVXNnNkem1ieWpaaEF2UkZDaEVjRmd0dzRzTGpBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo= ServerInfo:map[Version: CAName:ca.manufacturer-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNERENDQWJLZ0F3SUJBZ0lVT3dGc0REL2tFMFdXbUJ3VWt5MkV1ZHJTSDQ4d0NnWUlLb1pJemowRUF3SXcKWkRFTE1Ba0dBMVVFQmhNQ1EwZ3hEekFOQmdOVkJBZ01CbHAxY21samFERVBNQTBHQTFVRUJ3d0dXblZ5YVdObwpNUlV3RXdZRFZRUUtEQXhOWVc1MVptRmpkSFZ5WlhJeEhEQWFCZ05WQkFNTUUyTmhMbTFoYm5WbVlXTjBkWEpsCmNpMXVaWFF3SGhjTk1qSXdOekUzTVRVeE16VXlXaGNOTWpVd05UQTJNVFV4TXpVeVdqQmtNUXN3Q1FZRFZRUUcKRXdKRFNERVBNQTBHQTFVRUNBd0dXblZ5YVdOb01ROHdEUVlEVlFRSERBWmFkWEpwWTJneEZUQVRCZ05WQkFvTQpERTFoYm5WbVlXTjBkWEpsY2pFY01Cb0dBMVVFQXd3VFkyRXViV0Z1ZFdaaFkzUjFjbVZ5TFc1bGREQlpNQk1HCkJ5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCRStJY09ydnJtSTJtdVdwQkhmRVhudVRmc0ZCN1N4WE9wdUMKYVhORmh1aDJwRmROTjdYTjNNYmgwNjM0Z2lXQS9WZWNCU05CeFlGV0piWEp1VVFnKzJLalFqQkFNQThHQTFVZApFd0VCL3dRRk1BTUJBZjh3RGdZRFZSMFBBUUgvQkFRREFnR21NQjBHQTFVZERnUVdCQlRpZXVTUFRtUGVPMXVSCk5MSEx6ejgvNnJ6UGF6QUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpQkhtY3dNMHhOalZVQXJRNFZjZXpLV0Rza1MKMzZETVNhT2dwTDhpa1hzRjR3SWhBSXVwSVpQYkNlTkVKZllITUlYMG0zelpjQWhCN21jSGgxK09TTlZ3Q3BDMQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIHD4XO1et/HkV9kxbfa7qQC/4AjDn8WCzbzPRh5ctMBVEiA6jkqxYwzdJHsXl5xK0LN9e7ntkVO/id/0ulJkO5jcnRpECiDhAJ/s+41/7wOt2WCbbDbE2sicTvcDZzbVUC2987BkIxIg41ms3kmh14rEbbi++/k19mZ5nl4f3evdo8vdamFvp64iRAogaAJn5BSfztHQsDXEaxXa5uV3tLG7KoxruzNOiNKJHKkSIAAKuiAgDlI02KfPXE0PE6XYpQL1UFCByzoSUIb6n/OhIkQKII20XsCghJsyw49chn/lLOTGUU3p7mE3aT8byCfqwddxEiDr1KnVIhgFIruJifBgAdN4AQNUp/fvbgA2005wxemKgSJECiBPXd7Z6pHL8hqjpctMRBpvuHtNWIWEWL7R2LGzA4O+fhIgqtUmczT/78fULw6BCTKaRI/f4uZx2cv5LiokC+v9G3siRAogrueYGBv+usuAt9ofSGOKqXc86xAsgYfhe3EMLgQOR6sSIIQ6eLaRE3ILBPuRXDam5qDvZw4EFNOU4SUaiKp1KORTKogBCiBHiNueMIoyteBWm5YHAYO20wrshz/93/d50RwQGBrD3hIgEZRxLGjxmacf0/F/QziomF9nL1QLnZ+wOuzjpr+zBZYaILPHo6lu18wKoNgTU/I98VE6MuDCTO0UBQWTSHc/ThJgIiDvOzjecIR2+CJOdnlzr2vuHZXMuHcztiP0L01wfpvauzJECiBYhK1FW4DCbXvwWUEBTYVzMtxF+N0UrUg6GpzdnDPqDRIg2qnz56VMPiGl15OvkgG1uHWiKvDf/eS1dXLdC291bcU6RAog85NnBnxHFQZ2Qm7Mzdfo0F0rhDt0c1tYmEErA4Ug2XsSIH/YTs5tyKArg27QT5IC04qQUlISmY3G60v5e4CqAMEAQiCgOAIjmstlTxY4zxoc/bVheoO/9ja3+34xhKRfLqelOkogVMsc+7X3mAbx4bYCbmSHHgVp+8obOSZaTyQaE8/DItNSIB4c1g1k9uKqK7Waf3aPhC1/zsRMuEY23zROj3/JQZR+ IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUVqR0l3aUxmRDg0N3FpVXZvU3h6UWdRWTdacitGZnNZUAprcXVxakFxTjRPOU81NUNRbUVKOUVoQmZwQWZpbUlvNkErZU0vNFE4ZXk5WkplTm5jOHV6U3VqenlTdEIxaVI5CnNoblJGK2Z6dFNNWTNFRTJXWmsvT2ZrdW81WjdMekg2Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo=]]", "2022/07/17 16:17:02 [DEBUG] newEnrollmentResponse user1@manufacturer-net", "2022/07/17 16:17:02 [INFO] Stored client certificate at /root/ca-tools/manufacturer/clientuser1/tls/signcerts/cert.pem", "2022/07/17 16:17:02 [INFO] Stored TLS root CA certificate at /root/ca-tools/manufacturer/clientuser1/tls/tlscacerts/tls-ca-manufacturer-net-7054.pem", "+ cp /root/ca-tools/manufacturer/clientuser1/tls/keystore/34b889890186cbfb3e3af5b4dd6ccb916f74a27f5b5ed285dda919ba82027d92_sk /root/ca-tools/manufacturer/clientuser1/tls/keystore/fcdace3a5b665446390412705960a56f8045b01c34d7909185fd57c65f52a9ca_sk /crypto-config/peerOrganizations/manufacturer-net/users/user1@manufacturer-net/tls/client.key", "cp: target '/crypto-config/peerOrganizations/manufacturer-net/users/user1@manufacturer-net/tls/client.key' is not a directory", "+ cp /root/ca-tools/manufacturer/clientuser1/tls/signcerts/cert.pem /crypto-config/peerOrganizations/manufacturer-net/users/user1@manufacturer-net/tls/client.crt", "+ cp /root/ca-tools/manufacturer/clientuser1/tls/tlscacerts/tls-ca-manufacturer-net-7054.pem /crypto-config/peerOrganizations/manufacturer-net/users/user1@manufacturer-net/tls/ca.crt", "+ CUR_USER=1", "+ '[' 1 -lt 1 ']'", "+ cd /"], "stdout": "Successfully modified identity - Name: user1@manufacturer-net, Type: user, Affiliation: manufacturer, Max Enrollments: -1, Secret: , Attributes: [{Name:hf.Revoker Value:true ECert:true} {Name:hf.EnrollmentID Value:user1@manufacturer-net ECert:true} {Name:hf.Type Value:user ECert:true} {Name:hf.Affiliation Value:manufacturer ECert:true}]\nDefaulting container name to ca-tools.", "stdout_lines": ["Successfully modified identity - Name: user1@manufacturer-net, Type: user, Affiliation: manufacturer, Max Enrollments: -1, Secret: , Attributes: [{Name:hf.Revoker Value:true ECert:true} {Name:hf.EnrollmentID Value:user1@manufacturer-net ECert:true} {Name:hf.Type Value:user ECert:true} {Name:hf.Affiliation Value:manufacturer ECert:true}]", "Defaulting container name to ca-tools."]}

TASK [create/users : Copy user certificates for orgs] **************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/users/tasks/main.yaml:50
included: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/users/tasks/save_to_vault.yaml for localhost => (item=(censored due to no_log))

TASK [create/users : Check if user msp already created] ************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/users/tasks/save_to_vault.yaml:8
ok: [localhost] => {"changed": false, "cmd": "vault kv get -field=admincerts secretv2/crypto/peerOrganizations/manufacturer-net/users/user1/msp\n", "delta": "0:00:00.225167", "end": "2022-07-17 16:17:04.236542", "msg": "", "rc": 0, "start": "2022-07-17 16:17:04.011375", "stderr": "", "stderr_lines": [], "stdout": "-----BEGIN CERTIFICATE-----\nMIIDBDCCAqqgAwIBAgIUOUm8GiFrW4UrLXT060nwH2z6hoEwCgYIKoZIzj0EAwIw\nZDELMAkGA1UEBhMCQ0gxDzANBgNVBAgMBlp1cmljaDEPMA0GA1UEBwwGWnVyaWNo\nMRUwEwYDVQQKDAxNYW51ZmFjdHVyZXIxHDAaBgNVBAMME2NhLm1hbnVmYWN0dXJl\nci1uZXQwHhcNMjIwNzE3MTUxNjAwWhcNMjMwNzE3MTUyMTAwWjCBhzELMAkGA1UE\nBhMCQ0gxGjAYBgNVBAcTETQ3LjM4LzguNTQvWnVyaWNoMRUwEwYDVQQKEwxNYW51\nZmFjdHVyZXIxJDANBgNVBAsTBmNsaWVudDATBgNVBAsTDG1hbnVmYWN0dXJlcjEf\nMB0GA1UEAwwWdXNlcjFAbWFudWZhY3R1cmVyLW5ldDBZMBMGByqGSM49AgEGCCqG\nSM49AwEHA0IABKtbFJBqMCBpV04xZcgrf1Fm6x0zcbwxaIzq5hxkGxxgZmLPCkmg\nqwgzxP0i01G0r3P1GdkKYdRUN065FH1RdlmjggEUMIIBEDAOBgNVHQ8BAf8EBAMC\nB4AwDAYDVR0TAQH/BAIwADAdBgNVHQ4EFgQUwRRbenAqYNpg1WjsuXgL74anHRow\nHwYDVR0jBBgwFoAU4nrkj05j3jtbkTSxy88/P+q8z2swJAYDVR0RBB0wG4IZY2Et\ndG9vbHMtODY1ZmM4OWZmNS04dDh2eDCBiQYIKgMEBQYHCAEEfXsiYXR0cnMiOnsi\naGYuQWZmaWxpYXRpb24iOiJtYW51ZmFjdHVyZXIiLCJoZi5FbnJvbGxtZW50SUQi\nOiJ1c2VyMUBtYW51ZmFjdHVyZXItbmV0IiwiaGYuUmV2b2tlciI6InRydWUiLCJo\nZi5UeXBlIjoiY2xpZW50In19MAoGCCqGSM49BAMCA0gAMEUCIQDpjzF1usF2iMoa\nh1ona6xmaxZQBD7ed74Vg9+ZEPHlkQIgNsxR3H2UvJiyior96QTzL9Bq7vb2JwLV\n7vM8PAvWJJE=\n-----END CERTIFICATE-----", "stdout_lines": ["-----BEGIN CERTIFICATE-----", "MIIDBDCCAqqgAwIBAgIUOUm8GiFrW4UrLXT060nwH2z6hoEwCgYIKoZIzj0EAwIw", "ZDELMAkGA1UEBhMCQ0gxDzANBgNVBAgMBlp1cmljaDEPMA0GA1UEBwwGWnVyaWNo", "MRUwEwYDVQQKDAxNYW51ZmFjdHVyZXIxHDAaBgNVBAMME2NhLm1hbnVmYWN0dXJl", "ci1uZXQwHhcNMjIwNzE3MTUxNjAwWhcNMjMwNzE3MTUyMTAwWjCBhzELMAkGA1UE", "BhMCQ0gxGjAYBgNVBAcTETQ3LjM4LzguNTQvWnVyaWNoMRUwEwYDVQQKEwxNYW51", "ZmFjdHVyZXIxJDANBgNVBAsTBmNsaWVudDATBgNVBAsTDG1hbnVmYWN0dXJlcjEf", "MB0GA1UEAwwWdXNlcjFAbWFudWZhY3R1cmVyLW5ldDBZMBMGByqGSM49AgEGCCqG", "SM49AwEHA0IABKtbFJBqMCBpV04xZcgrf1Fm6x0zcbwxaIzq5hxkGxxgZmLPCkmg", "qwgzxP0i01G0r3P1GdkKYdRUN065FH1RdlmjggEUMIIBEDAOBgNVHQ8BAf8EBAMC", "B4AwDAYDVR0TAQH/BAIwADAdBgNVHQ4EFgQUwRRbenAqYNpg1WjsuXgL74anHRow", "HwYDVR0jBBgwFoAU4nrkj05j3jtbkTSxy88/P+q8z2swJAYDVR0RBB0wG4IZY2Et", "dG9vbHMtODY1ZmM4OWZmNS04dDh2eDCBiQYIKgMEBQYHCAEEfXsiYXR0cnMiOnsi", "aGYuQWZmaWxpYXRpb24iOiJtYW51ZmFjdHVyZXIiLCJoZi5FbnJvbGxtZW50SUQi", "OiJ1c2VyMUBtYW51ZmFjdHVyZXItbmV0IiwiaGYuUmV2b2tlciI6InRydWUiLCJo", "Zi5UeXBlIjoiY2xpZW50In19MAoGCCqGSM49BAMCA0gAMEUCIQDpjzF1usF2iMoa", "h1ona6xmaxZQBD7ed74Vg9+ZEPHlkQIgNsxR3H2UvJiyior96QTzL9Bq7vb2JwLV", "7vM8PAvWJJE=", "-----END CERTIFICATE-----"]}

TASK [create/users : Copy user certificates for orgs] **************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/users/tasks/save_to_vault.yaml:19
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/users : Copy user certificates for orgs] **************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/users/tasks/save_to_vault.yaml:32
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Wait for users tls exists in vault.] *************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:216
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
changed: [localhost] => {"attempts": 1, "changed": true, "cmd": "vault kv get -field=client.key secretv2/crypto/peerOrganizations/manufacturer-net/users/user1/tls\n", "delta": "0:00:00.241422", "end": "2022-07-17 16:17:05.735729", "msg": "", "rc": 0, "start": "2022-07-17 16:17:05.494307", "stderr": "", "stderr_lines": [], "stdout": "-----BEGIN PRIVATE KEY-----\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg7FLUG+NZ1uKsms14\nu7cZZ6MWeph+pmOxeDyxAcMi/CahRANCAASvY+KbClNW5I9/s1QGQrIPAbSaI6qZ\ncRx/S67T/ua56vXTBRPSl8kq5whUDIjBQAYv3c3qTYRFYO2lCUR/RWvk\n-----END PRIVATE KEY-----", "stdout_lines": ["-----BEGIN PRIVATE KEY-----", "MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg7FLUG+NZ1uKsms14", "u7cZZ6MWeph+pmOxeDyxAcMi/CahRANCAASvY+KbClNW5I9/s1QGQrIPAbSaI6qZ", "cRx/S67T/ua56vXTBRPSl8kq5whUDIjBQAYv3c3qTYRFYO2lCUR/RWvk", "-----END PRIVATE KEY-----"]}
META: role_complete for localhost
META: role_complete for localhost

TASK [waiting for the CA server to be created in carrier-net] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:12

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in carrier-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:11
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:28
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod ca in carrier-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:42
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2022-07-17T15:17:51Z", "generateName": "ca-7df8cd57bd-", "labels": {"app.kubernetes.io/instance": "carrier-net-ca", "app.kubernetes.io/managed-by": "Helm", "app.kubernetes.io/name": "ca", "helm.sh/chart": "ca-0.2.0", "name": "ca", "pod-template-hash": "7df8cd57bd"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:app.kubernetes.io/instance": {}, "f:app.kubernetes.io/managed-by": {}, "f:app.kubernetes.io/name": {}, "f:helm.sh/chart": {}, "f:name": {}, "f:pod-template-hash": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"07e060ee-ea3d-4e0d-b1bb-24aa1c0a6008\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {"f:containers": {"k:{\"name\":\"ca\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"FABRIC_CA_HOME\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_CA_CERTFILE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_CA_KEYFILE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_CA_NAME\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_DB_DATASOURCE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_DEBUG\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_TLS_CERTFILE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_TLS_ENABLED\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"FABRIC_CA_SERVER_TLS_KEYFILE\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":7054,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:protocol": {}}, "k:{\"containerPort\":9443,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:protocol": {}}}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/custom-config/\"}": {".": {}, "f:mountPath": {}, "f:name": {}}, "k:{\"mountPath\":\"/etc/hyperledger/fabric-ca-server-config\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/var/hyperledger/fabric-ca-server/db/\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:imagePullSecrets": {".": {}, "k:{\"name\":\"regcred\"}": {".": {}, "f:name": {}}}, "f:initContainers": {".": {}, "k:{\"name\":\"ca-certs-init\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"KUBERNETES_AUTH_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"MOUNT_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ADDR\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_APP_ROLE\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/secret\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"ca-config-volume\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:items": {}, "f:name": {}}, "f:name": {}}, "k:{\"name\":\"ca-server-db\"}": {".": {}, "f:name": {}, "f:persistentVolumeClaim": {".": {}, "f:claimName": {}}}, "k:{\"name\":\"certificates\"}": {".": {}, "f:emptyDir": {".": {}, "f:medium": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T15:17:51Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {".": {}, "k:{\"type\":\"PodScheduled\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}}}, "manager": "kube-scheduler", "operation": "Update", "time": "2022-07-17T15:17:51Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:initContainerStatuses": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.32\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "time": "2022-07-17T15:18:29Z"}], "name": "ca-7df8cd57bd-ckwnv", "namespace": "carrier-net", "ownerReferences": [{"apiVersion": "apps/v1", "blockOwnerDeletion": true, "controller": true, "kind": "ReplicaSet", "name": "ca-7df8cd57bd", "uid": "07e060ee-ea3d-4e0d-b1bb-24aa1c0a6008"}], "resourceVersion": "73101", "uid": "8ee36e38-23a0-42dc-84e3-f6390a7062bf"}, "spec": {"containers": [{"args": ["#!/usr/bin/env sh\nif [[ -d /custom-config/ ]] && [[ -f /custom-config/fabric-ca-server-config.yaml ]]; then\n  cp /custom-config/fabric-ca-server-config.yaml $FABRIC_CA_HOME/fabric-ca-server-config.yaml\n  fabric-ca-server start --config $FABRIC_CA_HOME/fabric-ca-server-config.yaml -d\nelse\n  sleep 1 && fabric-ca-server start -b carrier-admin:`cat /etc/hyperledger/fabric-ca-server-config/user_cred` -d\nfi"], "command": ["sh", "-c"], "env": [{"name": "FABRIC_CA_HOME", "value": "/etc/hyperledger/fabric-ca-server"}, {"name": "FABRIC_CA_SERVER_CA_NAME", "value": "ca.carrier-net"}, {"name": "FABRIC_CA_SERVER_CA_CERTFILE", "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"}, {"name": "FABRIC_CA_SERVER_CA_KEYFILE", "value": "/etc/hyperledger/fabric-ca-server-config/server.key"}, {"name": "FABRIC_CA_SERVER_TLS_ENABLED", "value": "true"}, {"name": "FABRIC_CA_SERVER_DEBUG", "value": "true"}, {"name": "FABRIC_CA_SERVER_TLS_CERTFILE", "value": "/etc/hyperledger/fabric-ca-server-config/server.crt"}, {"name": "FABRIC_CA_SERVER_TLS_KEYFILE", "value": "/etc/hyperledger/fabric-ca-server-config/server.key"}, {"name": "FABRIC_CA_SERVER_DB_DATASOURCE", "value": "/var/hyperledger/fabric-ca-server/db/fabric-ca-server.db"}, {"name": "FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS", "value": "0.0.0.0:9443"}], "image": "hyperledger/fabric-ca:1.4.8", "imagePullPolicy": "IfNotPresent", "name": "ca", "ports": [{"containerPort": 7054, "protocol": "TCP"}, {"containerPort": 9443, "protocol": "TCP"}], "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/etc/hyperledger/fabric-ca-server-config", "name": "certificates", "readOnly": true}, {"mountPath": "/var/hyperledger/fabric-ca-server/db/", "name": "ca-server-db"}, {"mountPath": "/custom-config/", "name": "ca-config-volume"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-pl6f6", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "imagePullSecrets": [{"name": "regcred"}], "initContainers": [{"args": ["#!/usr/bin/env sh\nvalidateVaultResponse () {\n  if echo ${2} | grep \"errors\"; then\n    echo \"ERROR: unable to retrieve ${1}: ${2}\"\n    exit 1\n  fi\n  if  [ \"$3\" == \"LOOKUPSECRETRESPONSE\" ]\n  then\n    http_code=$(curl -sS -o /dev/null -w \"%{http_code}\" \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key})\n    curl_response=$?\n    if test \"$http_code\" != \"200\" ; then\n        echo \"Http response code from Vault - $http_code\"\n        if test \"$curl_response\" != \"0\"; then\n           echo \"Error: curl command failed with error code - $curl_response\"\n           exit 1\n        fi\n    fi\n  fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')\nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nSECRET_CERT=secretv2/data/crypto/peerOrganizations/carrier-net/ca?ca.carrier-net-cert.pem\nvault_secret_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_CERT} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data.data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.crt\n\nSECRET_KEY=secretv2/data/crypto/peerOrganizations/carrier-net/ca?carrier-net-CA.key\nvault_secret_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_KEY} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | \\\n    jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data.data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/server.key\n\n\nSECRET_ADMIN_PASS=secretv2/data/credentials/carrier-net/ca/carrier?user\nvault_secret_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $1}')\nvault_data_key=$(echo ${SECRET_ADMIN_PASS} |awk -F \"?\" '{print $2}')\nLOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\nVALUE_OF_SECRET=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data.data[\\\"${vault_data_key}\\\"]\")\necho \"${VALUE_OF_SECRET}\" >> ${MOUNT_PATH}/user_cred"], "command": ["sh", "-c"], "env": [{"name": "VAULT_ADDR", "value": "http://20.197.63.209:8200"}, {"name": "KUBERNETES_AUTH_PATH", "value": "devcarrier-net-auth"}, {"name": "VAULT_APP_ROLE", "value": "vault-role"}, {"name": "MOUNT_PATH", "value": "/secret"}], "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "imagePullPolicy": "IfNotPresent", "name": "ca-certs-init", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/secret", "name": "certificates"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-pl6f6", "readOnly": true}]}], "nodeName": "aks-agentpool-84293659-vmss000001", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "vault-auth", "serviceAccountName": "vault-auth", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"name": "ca-server-db", "persistentVolumeClaim": {"claimName": "ca-server-db-pvc"}}, {"emptyDir": {"medium": "Memory"}, "name": "certificates"}, {"configMap": {"defaultMode": 420, "items": [{"key": "fabric-ca-server-config.yaml", "path": "fabric-ca-server-config.yaml"}], "name": "ca-config"}, "name": "ca-config-volume"}, {"name": "kube-api-access-pl6f6", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:18:28Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:18:29Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:18:29Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:17:54Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://fdaae47b21cebaae8d2dd87f246271dd11d95bb5eb526993ec88cec3821caac6", "image": "docker.io/hyperledger/fabric-ca:1.4.8", "imageID": "docker.io/hyperledger/fabric-ca@sha256:51e5f7082530633dfd3512adf4dfd873cc8fa1675d7385003f213d1067c538d8", "lastState": {}, "name": "ca", "ready": true, "restartCount": 0, "started": true, "state": {"running": {"startedAt": "2022-07-17T15:18:28Z"}}}], "hostIP": "10.224.0.5", "initContainerStatuses": [{"containerID": "containerd://be1df0013f062d8a86409492d407ea095bb6300d0812c1564f9c57a84ba585ce", "image": "docker.io/hyperledgerlabs/alpine-utils:1.0", "imageID": "docker.io/hyperledgerlabs/alpine-utils@sha256:cab1d1566ddaa28e482b5eeda7426791bdf607cee41e2b752ccc566553810f74", "lastState": {}, "name": "ca-certs-init", "ready": true, "restartCount": 0, "state": {"terminated": {"containerID": "containerd://be1df0013f062d8a86409492d407ea095bb6300d0812c1564f9c57a84ba585ce", "exitCode": 0, "finishedAt": "2022-07-17T15:18:28Z", "reason": "Completed", "startedAt": "2022-07-17T15:18:27Z"}}}], "phase": "Running", "podIP": "10.244.0.32", "podIPs": [{"ip": "10.244.0.32"}], "qosClass": "BestEffort", "startTime": "2022-07-17T15:17:54Z"}}]}
META: role_complete for localhost

TASK [create/ca-tools/peer : Check that orderer-certificate file exists] *******
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:24
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'supplychain', 'uri': 'orderer1.supplychain-net:7050', 'certificate': '/home/bevel/build/orderer1.crt'}) => {"ansible_loop_var": "orderer", "changed": false, "failed_when_result": false, "orderer": {"certificate": "/home/bevel/build/orderer1.crt", "name": "orderer1", "orderer": null, "org_name": "supplychain", "type": "orderer", "uri": "orderer1.supplychain-net:7050"}, "stat": {"atime": 1658074593.1774454, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "checksum": "0a3ebd32607a5cbd837f55d7ed65cfb1f7fbf6c4", "ctime": 1658074591.5934525, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 2072908, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658074591.1134548, "nlink": 1, "path": "/home/bevel/build/orderer1.crt", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 756, "uid": 0, "version": "1610318021", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [create/ca-tools/peer : Check if Orderer certs exist in Vault] ************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:36
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'supplychain', 'uri': 'orderer1.supplychain-net:7050', 'certificate': '/home/bevel/build/orderer1.crt'}) => {"ansible_loop_var": "orderer", "changed": false, "cmd": "vault kv get -field=ca.crt secretv2/crypto/peerOrganizations/carrier-net/orderer/tls\n", "delta": "0:00:00.231158", "end": "2022-07-17 16:17:08.647390", "msg": "", "orderer": {"certificate": "/home/bevel/build/orderer1.crt", "name": "orderer1", "orderer": null, "org_name": "supplychain", "type": "orderer", "uri": "orderer1.supplychain-net:7050"}, "rc": 0, "start": "2022-07-17 16:17:08.416232", "stderr": "", "stderr_lines": [], "stdout": "-----BEGIN CERTIFICATE-----\nMIICATCCAaagAwIBAgIUOLdDsOd/KOnv7plbQLmfSD7mbu8wCgYIKoZIzj0EAwIw\nXjELMAkGA1UEBhMCR0IxDzANBgNVBAgMBkxvbmRvbjEPMA0GA1UEBwwGTG9uZG9u\nMRAwDgYDVQQKDAdPcmRlcmVyMRswGQYDVQQDDBJjYS5zdXBwbHljaGFpbi1uZXQw\nHhcNMjIwNzE3MTUxMTQ4WhcNMjUwNTA2MTUxMTQ4WjBeMQswCQYDVQQGEwJHQjEP\nMA0GA1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xEDAOBgNVBAoMB09yZGVy\nZXIxGzAZBgNVBAMMEmNhLnN1cHBseWNoYWluLW5ldDBZMBMGByqGSM49AgEGCCqG\nSM49AwEHA0IABADurLuY7VfIbzKnpXWCNDaHjZej0tqgjjI7tWx3tgTsMSBWMA9V\nZCGtG/7+Dn48lMais1p/9//50iJJcKrc4MWjQjBAMA8GA1UdEwEB/wQFMAMBAf8w\nDgYDVR0PAQH/BAQDAgGmMB0GA1UdDgQWBBTXQxbFyQYSidZ5SdZPfX6hActTtTAK\nBggqhkjOPQQDAgNJADBGAiEAlWEVqyE9YnsNjE8OGRSIcc3dkxxcSRwncMj989Sh\nQOgCIQCK6hBheX7X2QOu9yLbFB1ojPf1htqb++WXLFC8NNjAJA==\n-----END CERTIFICATE-----", "stdout_lines": ["-----BEGIN CERTIFICATE-----", "MIICATCCAaagAwIBAgIUOLdDsOd/KOnv7plbQLmfSD7mbu8wCgYIKoZIzj0EAwIw", "XjELMAkGA1UEBhMCR0IxDzANBgNVBAgMBkxvbmRvbjEPMA0GA1UEBwwGTG9uZG9u", "MRAwDgYDVQQKDAdPcmRlcmVyMRswGQYDVQQDDBJjYS5zdXBwbHljaGFpbi1uZXQw", "HhcNMjIwNzE3MTUxMTQ4WhcNMjUwNTA2MTUxMTQ4WjBeMQswCQYDVQQGEwJHQjEP", "MA0GA1UECAwGTG9uZG9uMQ8wDQYDVQQHDAZMb25kb24xEDAOBgNVBAoMB09yZGVy", "ZXIxGzAZBgNVBAMMEmNhLnN1cHBseWNoYWluLW5ldDBZMBMGByqGSM49AgEGCCqG", "SM49AwEHA0IABADurLuY7VfIbzKnpXWCNDaHjZej0tqgjjI7tWx3tgTsMSBWMA9V", "ZCGtG/7+Dn48lMais1p/9//50iJJcKrc4MWjQjBAMA8GA1UdEwEB/wQFMAMBAf8w", "DgYDVR0PAQH/BAQDAgGmMB0GA1UdDgQWBBTXQxbFyQYSidZ5SdZPfX6hActTtTAK", "BggqhkjOPQQDAgNJADBGAiEAlWEVqyE9YnsNjE8OGRSIcc3dkxxcSRwncMj989Sh", "QOgCIQCK6hBheX7X2QOu9yLbFB1ojPf1htqb++WXLFC8NNjAJA==", "-----END CERTIFICATE-----"]}

TASK [create/ca-tools/peer : Save Orderer certs if not in Vault] ***************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:51
ok: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'supplychain', 'uri': 'orderer1.supplychain-net:7050', 'certificate': '/home/bevel/build/orderer1.crt'}) => {"ansible_loop_var": "orderer", "changed": false, "checksum": "0a3ebd32607a5cbd837f55d7ed65cfb1f7fbf6c4", "dest": "/home/bevel/build/orderer1.crt", "gid": 0, "group": "root", "mode": "0644", "orderer": {"certificate": "/home/bevel/build/orderer1.crt", "name": "orderer1", "orderer": null, "org_name": "supplychain", "type": "orderer", "uri": "orderer1.supplychain-net:7050"}, "owner": "root", "path": "/home/bevel/build/orderer1.crt", "size": 756, "state": "file", "uid": 0}

TASK [create/ca-tools/peer : Create the certs directory if it does not exist] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:62
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../charts/catools/certs", "size": 4096, "state": "directory", "uid": 0}

TASK [create/ca-tools/peer : Copy the tls orderers certs to the chart catools directory] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:69
changed: [localhost] => (item={'orderer': None, 'type': 'orderer', 'name': 'orderer1', 'org_name': 'supplychain', 'uri': 'orderer1.supplychain-net:7050', 'certificate': '/home/bevel/build/orderer1.crt'}) => {"ansible_loop_var": "orderer", "changed": true, "cmd": "cp /home/bevel/build/orderer1.crt /home/bevel/platforms/hyperledger-fabric/configuration/../charts/catools/certs/orderer1-ca.crt\n", "delta": "0:00:00.008072", "end": "2022-07-17 16:17:10.187083", "msg": "", "orderer": {"certificate": "/home/bevel/build/orderer1.crt", "name": "orderer1", "orderer": null, "org_name": "supplychain", "type": "orderer", "uri": "orderer1.supplychain-net:7050"}, "rc": 0, "start": "2022-07-17 16:17:10.179011", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [Create CA-tools Values for peer] *****************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:78

TASK [helm_component : Ensures /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools dir exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:14
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools", "size": 4096, "state": "directory", "uid": 0}

TASK [helm_component : create value file for carrier-net] **********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:23
ok: [localhost] => {"changed": false, "checksum": "78ba3932d3c260229ae35e3323471ebb8ce80c07", "dest": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml", "size": 2463, "state": "file", "uid": 0}

TASK [Helm lint] ***************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:32

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
ok: [localhost] => {"changed": false, "stat": {"atime": 1658071286.1498487, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "checksum": "78ba3932d3c260229ae35e3323471ebb8ce80c07", "ctime": 1658071285.5938501, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 3883041, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658071285.329851, "nlink": 1, "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 2463, "uid": 0, "version": "540906464", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [Check or create test directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:22

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"atime": 1658074423.378228, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "ctime": 1658074599.1694183, "dev": 64513, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626754, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658074599.1694183, "nlink": 2, "path": "./build/test", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "version": "4197237393", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:31
ok: [localhost] => {"ansible_facts": {"apiVersion": "helm.fluxcd.io/v1", "kind": "HelmRelease", "metadata": {"annotations": {"fluxcd.io/automated": "false"}, "name": "carrier-net-ca-tools", "namespace": "carrier-net"}, "spec": {"chart": {"git": "ssh://git@github.com/adityajoshi12/bevel.git", "path": "platforms/hyperledger-fabric/charts/catools", "ref": "test"}, "releaseName": "carrier-net-ca-tools", "values": {"annotations": {"deployment": null, "pvc": null, "service": null}, "checks": {"refresh_cert_value": false}, "healthcheck": {"retries": 10, "sleepTimeAfterError": 2}, "image": {"alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "pullPolicy": "IfNotPresent", "repository": "hyperledger/fabric-ca-tools", "tag": "1.2.1"}, "metadata": {"component_type": "peer", "name": "ca-tools", "namespace": "carrier-net", "org_name": "carrier", "proxy": "none"}, "orderers": {"name": "orderer1-"}, "orderers_info": [{"name": "orderer1", "path": "certs/orderer1-ca.crt"}], "org_data": {"ca_url": "ca.carrier-net:7054", "cert_subject": "O=Carrier/OU=Carrier/L=51.50,-0.13,London/C=GB", "component_country": "GB", "component_location": "London", "component_state": "London", "component_subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB", "external_url_suffix": "develop.local.com"}, "peer_count": "1", "peers": {"name": "peer0,-"}, "replicaCount": 1, "storage": {"storageclassname": "carriersc", "storagesize": "512Mi"}, "vault": {"address": "http://20.197.63.209:8200", "authpath": "devcarrier-net-auth", "imagesecretname": "regcred", "role": "vault-role", "secretambassador": "secretv2/data/crypto/peerOrganizations/carrier-net/ambassador", "secretcert": "secretv2/data/crypto/peerOrganizations/carrier-net/ca?ca.carrier-net-cert.pem", "secretconfigfile": "secretv2/data/crypto/peerOrganizations/carrier-net/msp/config", "secretcouchdb": "secretv2/data/credentials/carrier-net/couchdb/carrier", "secretkey": "secretv2/data/crypto/peerOrganizations/carrier-net/ca?carrier-net-CA.key", "secretmsp": "secretv2/data/crypto/peerOrganizations/carrier-net/users/admin/msp", "secretorderer": "secretv2/data/crypto/peerOrganizations/carrier-net/orderers", "secretpeer": "secretv2/data/crypto/peerOrganizations/carrier-net/peers", "secretpeerorderertls": "secretv2/data/crypto/peerOrganizations/carrier-net/orderer/tls", "secrettls": "secretv2/data/crypto/peerOrganizations/carrier-net/users/admin/tls", "serviceaccountname": "vault-auth"}}}}, "ansible_included_var_files": ["/home/bevel/platforms/hyperledger-fabric/releases/dev/carrier/ca-tools/carrier-net.yaml"], "changed": false}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:36
ok: [localhost] => {"changed": false, "checksum": "f3e382ebea9c3b882fb29709e4f37a5bb35a4fb4", "dest": "./build/test/carrier-net-ca-tools.yaml", "gid": 0, "group": "root", "md5sum": "e0f7be0f27c40f53e04a6e1b361335cf", "mode": "0644", "owner": "root", "size": 1955, "src": "/root/.ansible/tmp/ansible-tmp-1658074633.2372365-37217-112841676242143/source", "state": "file", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:42
changed: [localhost] => {"changed": true, "cmd": "helm lint -f \"./build/test/carrier-net-ca-tools.yaml\" \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\"\n", "delta": "0:00:00.170719", "end": "2022-07-17 16:17:14.371693", "msg": "", "rc": 0, "start": "2022-07-17 16:17:14.200974", "stderr": "coalesce.go:200: warning: cannot overwrite table with non table for orderers_info (map[])", "stderr_lines": ["coalesce.go:200: warning: cannot overwrite table with non table for orderers_info (map[])"], "stdout": "==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, 0 chart(s) failed", "stdout_lines": ["==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/catools", "[INFO] Chart.yaml: icon is recommended", "", "1 chart(s) linted, 0 chart(s) failed"]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:105

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing CA-tools files\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.719350", "end": "2022-07-17 16:17:18.186081", "msg": "", "rc": 0, "start": "2022-07-17 16:17:15.466731", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   3feecad..2069f23  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   3feecad..2069f23  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main 2069f23] [ci skip] Pushing CA-tools files\n 1 file changed, 362 insertions(+)", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main 2069f23] [ci skip] Pushing CA-tools files", " 1 file changed, 362 insertions(+)"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main 2069f23] [ci skip] Pushing CA-tools files",
        " 1 file changed, 362 insertions(+)"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   3feecad..2069f23  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost

TASK [Wait for CA key exists in vault.] ****************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:116

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
changed: [localhost] => {"attempts": 1, "changed": true, "cmd": "vault kv get -field=carrier-net-CA.key secretv2/crypto/peerOrganizations/carrier-net/ca\n", "delta": "0:00:00.218484", "end": "2022-07-17 16:17:19.684058", "msg": "", "rc": 0, "start": "2022-07-17 16:17:19.465574", "stderr": "", "stderr_lines": [], "stdout": "-----BEGIN EC PRIVATE KEY-----\nMHcCAQEEIFCl5fAAXaA7UlxqIkRAxeyncIOSbB/qhYlX2cmdln+joAoGCCqGSM49\nAwEHoUQDQgAEe93gLxCgXsuTVH7LAVLvTZMLB1UUQbIyf5A6xVHltkTb1AY/Fodm\nJGV09XO4/k5chzNAnxlFaJ9gMZXWD2utlQ==\n-----END EC PRIVATE KEY-----", "stdout_lines": ["-----BEGIN EC PRIVATE KEY-----", "MHcCAQEEIFCl5fAAXaA7UlxqIkRAxeyncIOSbB/qhYlX2cmdln+joAoGCCqGSM49", "AwEHoUQDQgAEe93gLxCgXsuTVH7LAVLvTZMLB1UUQbIyf5A6xVHltkTb1AY/Fodm", "JGV09XO4/k5chzNAnxlFaJ9gMZXWD2utlQ==", "-----END EC PRIVATE KEY-----"]}
META: role_complete for localhost

TASK [Wait for admin tls exists in vault.] *************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:125

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
changed: [localhost] => {"attempts": 1, "changed": true, "cmd": "vault kv get -field=client.key secretv2/crypto/peerOrganizations/carrier-net/users/admin/tls\n", "delta": "0:00:00.247175", "end": "2022-07-17 16:17:20.848913", "msg": "", "rc": 0, "start": "2022-07-17 16:17:20.601738", "stderr": "", "stderr_lines": [], "stdout": "-----BEGIN PRIVATE KEY-----\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgoTabf39LAnul+ORT\n8titxuN0ltMfuU65qMI1BDJy1zGhRANCAARw8d6JMOwVMUD/5XxjmQ8j13d3Jyy7\nyeH48c2MO1wCc8OY+do3OZ99eokJ34VAGmnmF2xXe0w8w8gmptI5hmOl\n-----END PRIVATE KEY-----", "stdout_lines": ["-----BEGIN PRIVATE KEY-----", "MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgoTabf39LAnul+ORT", "8titxuN0ltMfuU65qMI1BDJy1zGhRANCAARw8d6JMOwVMUD/5XxjmQ8j13d3Jyy7", "yeH48c2MO1wCc8OY+do3OZ99eokJ34VAGmnmF2xXe0w8w8gmptI5hmOl", "-----END PRIVATE KEY-----"]}
META: role_complete for localhost

TASK [Wait for peers tls exists in vault.] *************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:134
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
changed: [localhost] => {"attempts": 1, "changed": true, "cmd": "vault kv get -field=server.key secretv2/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/tls\n", "delta": "0:00:00.187107", "end": "2022-07-17 16:17:22.114899", "msg": "", "rc": 0, "start": "2022-07-17 16:17:21.927792", "stderr": "", "stderr_lines": [], "stdout": "-----BEGIN PRIVATE KEY-----\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgQ2Kupgp518zr7U5W\nQvWKRJ16OLB/9kbmh7b++WAK3pyhRANCAATKiSyo63HcDB+lqausPy9++yJeRQBs\nZQwwZeeI6jdf65Tszx5SOQ2sD8xDF8XGJjvsce7fB0pbR8/EmufalJLr\n-----END PRIVATE KEY-----", "stdout_lines": ["-----BEGIN PRIVATE KEY-----", "MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgQ2Kupgp518zr7U5W", "QvWKRJ16OLB/9kbmh7b++WAK3pyhRANCAATKiSyo63HcDB+lqausPy9++yJeRQBs", "ZQwwZeeI6jdf65Tszx5SOQ2sD8xDF8XGJjvsce7fB0pbR8/EmufalJLr", "-----END PRIVATE KEY-----"]}
META: role_complete for localhost

TASK [Wait for ambassador key exists in vault.] ********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:146
skipping: [localhost] => (item={'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net:7051', 'certificate': '/home/bevel/build/carrier/peer0.crt', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}})  => {"ansible_loop_var": "peer", "changed": false, "peer": {"certificate": "/home/bevel/build/carrier/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "disabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.carrier-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.carrier-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}, "skip_reason": "Conditional result was False"}

TASK [Create the Ambassador credentials for peers] *****************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:160
skipping: [localhost] => (item={'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net:7051', 'certificate': '/home/bevel/build/carrier/peer0.crt', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}})  => {"ansible_loop_var": "peer", "changed": false, "peer": {"certificate": "/home/bevel/build/carrier/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "disabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.carrier-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.carrier-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}, "skip_reason": "Conditional result was False"}

TASK [create/ca-tools/peer : Copy msp cacerts to given path] *******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:175
included: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/nested_endorsers.yaml for localhost => (item=(censored due to no_log))

TASK [create/ca-tools/peer : Get endorsers data] *******************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/nested_endorsers.yaml:9
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'peers': [{'peer': None, 'name': 'peer0', 'corepeerAddress': 'peer0.manufacturer-net:7051', 'certificate': '/home/bevel/build/manufacturer/peer0.crt'}]})  => {"ansible_loop_var": "endorser", "changed": false, "endorser": {"name": "manufacturer", "organization": null, "peers": [{"certificate": "/home/bevel/build/manufacturer/peer0.crt", "corepeerAddress": "peer0.manufacturer-net:7051", "name": "peer0", "peer": null}]}, "skip_reason": "Conditional result was False"}
included: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/nested_peers.yaml for localhost => (item=(censored due to no_log))

TASK [create/ca-tools/peer : set_fact] *****************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/nested_peers.yaml:8
ok: [localhost] => {"ansible_facts": {"endorsers_peers_data": []}, "changed": false}

TASK [create/ca-tools/peer : get endorsers peers] ******************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/nested_peers.yaml:12
ok: [localhost] => (item={'peer': None, 'name': 'peer0', 'corepeerAddress': 'peer0.carrier-net:7051', 'certificate': '/home/bevel/build/carrier/peer0.crt'}) => {"ansible_facts": {"endorsers_peers_data": [{"certificate": "/home/bevel/build/carrier/peer0.crt", "name": "peer0"}]}, "ansible_loop_var": "peer", "changed": false, "peer": {"certificate": "/home/bevel/build/carrier/peer0.crt", "corepeerAddress": "peer0.carrier-net:7051", "name": "peer0", "peer": null}}

TASK [create/ca-tools/peer : Copy certificates] ********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/nested_peers.yaml:21
included: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/write.yaml for localhost => (item=(censored due to no_log))

TASK [create/ca-tools/peer : Create the certs directory if it does not exist] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/write.yaml:10
ok: [localhost] => (item={'name': 'peer0', 'certificate': '/home/bevel/build/carrier/peer0.crt'}) => {"ansible_loop_var": "peer", "changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/build/carrier", "peer": {"certificate": "/home/bevel/build/carrier/peer0.crt", "name": "peer0"}, "size": 4096, "state": "directory", "uid": 0}

TASK [create/ca-tools/peer : Get msp cacerts] **********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/write.yaml:22
changed: [localhost] => (item={'name': 'peer0', 'certificate': '/home/bevel/build/carrier/peer0.crt'}) => {"ansible_loop_var": "peer", "changed": true, "cmd": "vault kv get -field=cacerts secretv2/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net/msp > /home/bevel/build/carrier/peer0.crt\n", "delta": "0:00:00.229483", "end": "2022-07-17 16:17:23.948742", "msg": "", "peer": {"certificate": "/home/bevel/build/carrier/peer0.crt", "name": "peer0"}, "rc": 0, "start": "2022-07-17 16:17:23.719259", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [create/ca-tools/peer : Copy the msp folder from the ca tools] ************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:187
changed: [localhost] => {"changed": true, "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/home/bevel/build/config  kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/home/bevel/build/config kubectl cp carrier-net/${CA_TOOL_CLI}:crypto-config/peerOrganizations/carrier-net/msp ./build/crypto-config/peerOrganizations/carrier-net/msp\n", "delta": "0:00:00.850583", "end": "2022-07-17 16:17:25.281195", "msg": "", "rc": 0, "start": "2022-07-17 16:17:24.430612", "stderr": "", "stderr_lines": [], "stdout": "Defaulting container name to ca-tools.", "stdout_lines": ["Defaulting container name to ca-tools."]}

TASK [create/ca-tools/peer : Get msp config.yaml file] *************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:194
changed: [localhost] => {"changed": true, "cmd": "vault kv get -field=configfile secretv2/crypto/peerOrganizations/carrier-net/msp/config > config.yaml\nmv config.yaml ./build/crypto-config/peerOrganizations/carrier-net/msp/\n", "delta": "0:00:00.214889", "end": "2022-07-17 16:17:25.894195", "msg": "", "rc": 0, "start": "2022-07-17 16:17:25.679306", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [Create user crypto] ******************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:204

TASK [create/users : Copy generate-user-crypto.sh to destination directory] ****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/users/tasks/main.yaml:13
changed: [localhost] => (item=generate-user-crypto.sh) => {"ansible_loop_var": "files", "changed": true, "checksum": "257e2b3028d95a5a7509d8d5d2232ba3e103b260", "dest": "./build/generate-user-crypto.sh", "files": "generate-user-crypto.sh", "gid": 0, "group": "root", "md5sum": "daba10e7bff04b9a0905e85cb270fe76", "mode": "0755", "owner": "root", "size": 8583, "src": "/home/bevel/platforms/hyperledger-fabric/configuration/../scripts/generate-user-crypto.sh", "state": "file", "uid": 0}

TASK [create/users : Changing the permission of msp files] *********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/users/tasks/main.yaml:26
changed: [localhost] => (item=generate-user-crypto.sh) => {"ansible_loop_var": "files", "changed": true, "files": "generate-user-crypto.sh", "gid": 0, "group": "root", "mode": "0775", "owner": "root", "path": "./build/generate-user-crypto.sh", "size": 8583, "state": "file", "uid": 0}

TASK [create/users : Copy generate_crypto.sh file using the CA Tools] **********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/users/tasks/main.yaml:37
changed: [localhost] => {"changed": true, "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/home/bevel/build/config kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/home/bevel/build/config kubectl cp ./build/generate-user-crypto.sh carrier-net/${CA_TOOL_CLI}:/root/ca-tools/carrier/generate-user-crypto.sh  \n", "delta": "0:00:01.329369", "end": "2022-07-17 16:17:28.911481", "msg": "", "rc": 0, "start": "2022-07-17 16:17:27.582112", "stderr": "Defaulting container name to ca-tools.", "stderr_lines": ["Defaulting container name to ca-tools."], "stdout": "", "stdout_lines": []}

TASK [create/users : Execute generate-user-crypto.sh file using the CA Tools] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/users/tasks/main.yaml:43
changed: [localhost] => {"changed": true, "cmd": "export CA_TOOL_CLI=$(KUBECONFIG=/home/bevel/build/config kubectl get po -n carrier-net | grep \"ca-tools\" | awk '{print $1}')\nKUBECONFIG=/home/bevel/build/config kubectl exec -n carrier-net ${CA_TOOL_CLI} -- /root/ca-tools/carrier/./generate-user-crypto.sh peer carrier-net carrier W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d carrier \"O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\" \"ca.carrier-net:7054\"\nKUBECONFIG=/home/bevel/build/config kubectl cp carrier-net/${CA_TOOL_CLI}:crypto-config ./build/crypto-config\n", "delta": "0:00:01.934449", "end": "2022-07-17 16:17:31.276104", "msg": "", "rc": 0, "start": "2022-07-17 16:17:29.341655", "stderr": "Defaulting container name to ca-tools.\nUse 'kubectl describe pod/ca-tools-595c77d59b-f2fnf -n carrier-net' to see all of the containers in this pod.\n+ CURRENT_DIR=/\n+ FULLY_QUALIFIED_ORG_NAME=carrier-net\n+ ORG_NAME=carrier\n+ TYPE_FOLDER=peers\n+ USER_IDENTITIES=W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d\n+ AFFILIATION=carrier\n+ SUBJECT=O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB\n+ CA=ca.carrier-net:7054\n+ '[' peer '!=' peer ']'\n+ ORG_CYPTO_FOLDER=/crypto-config/peerOrganizations/carrier-net\n+ ROOT_TLS_CERT=/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem\n+ CAS_FOLDER=/root/ca-tools/cas/ca-carrier\n+ ORG_HOME=/root/ca-tools/carrier\n+ CUR_USER=0\n++ echo W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d\n++ sed -e s/None/null/g\n++ tr \\' '\"'\n++ base64 -d\n++ jq '. | length'\n+ TOTAL_USERS=1\n+ '[' 0 -lt 1 ']'\n++ echo W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d\n++ sed -e s/None/null/g\n++ tr \\' '\"'\n++ jq '.[0].identity'\n++ base64 -d\n++ sed -e 's/\"//g'\n+ USER=user1\n+ ORG_USER=user1@carrier-net\n+ ORG_USERPASS=user1@carrier-net-pw\n+ ADMIN_USER=Admin@carrier-net\n+ ADMIN_USERPASS=Admin@carrier-net-pw\n+ CUR_ATTRS=0\n+ ATTRS=hf.Revoker=true\n++ echo W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d\n++ base64 -d\n++ jq '.[0].attributes | length'\n++ tr \\' '\"'\n++ sed -e s/None/null/g\n+ TOTAL_ATTRS=1\n+ '[' 0 -lt 1 ']'\n++ echo W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d\n++ base64 -d\n++ sed -e 's/\"//g'\n++ jq '.[0].attributes[0].key'\n++ tr \\' '\"'\n++ sed -e s/None/null/g\n++ echo W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d\n++ tr \\' '\"'\n++ base64 -d\n++ jq '.[0].attributes[0].value'\n++ sed -e 's/\"//g'\n++ sed -e s/None/null/g\n+ ATTRS=hf.Revoker=true,hf.Revoker=true:ecert\n+ CUR_ATTRS=1\n+ '[' 1 -lt 1 ']'\n+ '[' '!' -d /root/ca-tools/carrier/clientuser1 ']'\n++++ date\n+++ echo Sun Jul 17 16:17:30 UTC '2022 + 5 minutes'\n++ date -d 'Sun Jul 17 16:17:30 UTC 2022 + 5 minutes' +%Y%m%d%H%M%S\n+ CUR_DATETIME=20220717162230\n+++ sed s/notAfter=//g\n++++ openssl x509 -noout -enddate\n+++ echo notAfter=Jul 17 15:26:00 2023 GMT\n++ date -d 'Jul 17 15:26:00 2023 GMT' +%Y%m%d%H%M%S\n+ CERT_DATETIME=20230717152600\n++ openssl x509 -text -noout -certopt no_subject,no_header,no_version,no_serial,no_signame,no_validity,no_issuer,no_pubkey,no_sigdump,no_aux\n+ ATTRS_CERT='        X509v3 extensions:\n            X509v3 Key Usage: critical\n                Digital Signature\n            X509v3 Basic Constraints: critical\n                CA:FALSE\n            X509v3 Subject Key Identifier: \n                F1:AD:29:93:80:08:5F:66:08:F6:2C:26:73:AD:21:A0:B9:1F:67:58\n            X509v3 Authority Key Identifier: \n                keyid:AA:F8:AE:80:1B:F1:27:A8:0D:74:AA:30:4A:CA:D3:60:E5:71:7F:85\n\n            X509v3 Subject Alternative Name: \n                DNS:ca-tools-595c77d59b-f2fnf\n            1.2.3.4.5.6.7.8.1: \n                {\"attrs\":{\"hf.Affiliation\":\"carrier\",\"hf.EnrollmentID\":\"user1@carrier-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'\n+ ATTRS_CERT='\n                {\"attrs\":{\"hf.Affiliation\":\"carrier\",\"hf.EnrollmentID\":\"user1@carrier-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'\n+ CUR_ATTRS=0\n+ MATCH_FLAG=true\n+ '[' 0 -lt 1 ']'\n++ echo W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d\n++ base64 -d\n++ jq '.[0].attributes[0].key'\n++ tr \\' '\"'\n++ sed -e 's/\"//g'\n++ sed -e s/None/null/g\n+ CUR_KEY=hf.Revoker\n++ echo '{\"attrs\":{\"hf.Affiliation\":\"carrier\",\"hf.EnrollmentID\":\"user1@carrier-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'\n++ jq .attrs.hf.Revoker\n+ [[ null == \\n\\u\\l\\l ]]\n+ MATCH_FLAG=false\n+ CUR_ATTRS=1\n+ '[' 1 -lt 1 ']'\n+ '[' 20220717162230 -ge 20230717152600 ']'\n+ '[' false == false ']'\n++ echo '{\"attrs\":{\"hf.Affiliation\":\"carrier\",\"hf.EnrollmentID\":\"user1@carrier-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'\n++ jq '.attrs | length'\n+ TOTAL_CERT_ATTRS=4\n+ CUR_CERT_ATTRS=0\n+ '[' 0 -lt 4 ']'\n++ echo '{\"attrs\":{\"hf.Affiliation\":\"carrier\",\"hf.EnrollmentID\":\"user1@carrier-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'\n++ jq '.attrs | to_entries | .[0].key'\n++ sed -e 's/\"//g'\n+ '[' hf.Affiliation '!=' hf.Affiliation ']'\n+ CUR_CERT_ATTRS=1\n+ '[' 1 -lt 4 ']'\n++ echo '{\"attrs\":{\"hf.Affiliation\":\"carrier\",\"hf.EnrollmentID\":\"user1@carrier-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'\n++ jq '.attrs | to_entries | .[1].key'\n++ sed -e 's/\"//g'\n+ '[' hf.EnrollmentID '!=' hf.Affiliation ']'\n++ echo '{\"attrs\":{\"hf.Affiliation\":\"carrier\",\"hf.EnrollmentID\":\"user1@carrier-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'\n++ jq '.attrs | to_entries | .[1].key'\n++ sed -e 's/\"//g'\n+ '[' hf.EnrollmentID '!=' hf.Type ']'\n++ echo '{\"attrs\":{\"hf.Affiliation\":\"carrier\",\"hf.EnrollmentID\":\"user1@carrier-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'\n++ jq '.attrs | to_entries | .[1].key'\n++ sed -e 's/\"//g'\n+ '[' hf.EnrollmentID '!=' hf.EnrollmentID ']'\n+ CUR_CERT_ATTRS=2\n+ '[' 2 -lt 4 ']'\n++ jq '.attrs | to_entries | .[2].key'\n++ sed -e 's/\"//g'\n++ echo '{\"attrs\":{\"hf.Affiliation\":\"carrier\",\"hf.EnrollmentID\":\"user1@carrier-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'\n+ '[' hf.Revoker '!=' hf.Affiliation ']'\n++ jq '.attrs | to_entries | .[2].key'\n++ echo '{\"attrs\":{\"hf.Affiliation\":\"carrier\",\"hf.EnrollmentID\":\"user1@carrier-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'\n++ sed -e 's/\"//g'\n+ '[' hf.Revoker '!=' hf.Type ']'\n++ echo '{\"attrs\":{\"hf.Affiliation\":\"carrier\",\"hf.EnrollmentID\":\"user1@carrier-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'\n++ jq '.attrs | to_entries | .[2].key'\n++ sed -e 's/\"//g'\n+ '[' hf.Revoker '!=' hf.EnrollmentID ']'\n+ KEY_PRESENT=false\n+ CUR_ATTRS=0\n+ '[' 0 -lt 1 ']'\n++ echo '{\"attrs\":{\"hf.Affiliation\":\"carrier\",\"hf.EnrollmentID\":\"user1@carrier-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'\n++ jq '.attrs | to_entries | .[2].key'\n++ sed -e 's/\"//g'\n++ base64 -d\n++ sed -e s/None/null/g\n++ jq '.[0].attributes[0].key'\n++ sed -e 's/\"//g'\n++ tr \\' '\"'\n++ echo W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d\n+ '[' hf.Revoker == hf.Revoker ']'\n+ KEY_PRESENT=true\n+ CUR_ATTRS=1\n+ '[' 1 -lt 1 ']'\n+ '[' true == false ']'\n+ CUR_CERT_ATTRS=3\n+ '[' 3 -lt 4 ']'\n++ echo '{\"attrs\":{\"hf.Affiliation\":\"carrier\",\"hf.EnrollmentID\":\"user1@carrier-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'\n++ sed -e 's/\"//g'\n++ jq '.attrs | to_entries | .[3].key'\n+ '[' hf.Type '!=' hf.Affiliation ']'\n++ echo '{\"attrs\":{\"hf.Affiliation\":\"carrier\",\"hf.EnrollmentID\":\"user1@carrier-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'\n++ jq '.attrs | to_entries | .[3].key'\n++ sed -e 's/\"//g'\n+ '[' hf.Type '!=' hf.Type ']'\n+ CUR_CERT_ATTRS=4\n+ '[' 4 -lt 4 ']'\n+ fabric-ca-client identity modify user1@carrier-net -d --type user --affiliation carrier --attrs hf.Revoker=true,hf.Revoker=true:ecert --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier\n2022/07/17 16:17:30 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier\n2022/07/17 16:17:30 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml\n2022/07/17 16:17:30 [DEBUG] Checking for enrollment\n2022/07/17 16:17:30 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-595c77d59b-f2fnf] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200aeb00}\n2022/07/17 16:17:30 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42044c1b0 PluginOpts:<nil>}\n2022/07/17 16:17:30 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420447fe0 DummyKeystore:<nil>}\n2022/07/17 16:17:30 [INFO] TLS Enabled\n2022/07/17 16:17:30 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2022/07/17 16:17:30 [DEBUG] Client Cert File: \n2022/07/17 16:17:30 [DEBUG] Client Key File: \n2022/07/17 16:17:30 [DEBUG] Client TLS certificate and/or key file not provided\n2022/07/17 16:17:30 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-595c77d59b-f2fnf] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200aeb00}\n2022/07/17 16:17:30 [DEBUG] Entered runModifyIdentity: {id: json: add:{ID: Type:user Affiliation: Attributes:[] MaxEnrollments:0 Secret: CAName:} modify:{ID: Type:user Affiliation:carrier Attributes:[] MaxEnrollments:0 Secret: CAName:} remove:{ID: Force:false CAName:}}\n2022/07/17 16:17:30 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-595c77d59b-f2fnf] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200aeb00}\n2022/07/17 16:17:30 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42044c1b0 PluginOpts:<nil>}\n2022/07/17 16:17:30 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420447fe0 DummyKeystore:<nil>}\n2022/07/17 16:17:30 [INFO] TLS Enabled\n2022/07/17 16:17:30 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2022/07/17 16:17:30 [DEBUG] Client Cert File: \n2022/07/17 16:17:30 [DEBUG] Client Key File: \n2022/07/17 16:17:30 [DEBUG] Client TLS certificate and/or key file not provided\n2022/07/17 16:17:30 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-carrier/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-carrier/msp/signcerts/cert.pem\n2022/07/17 16:17:30 [DEBUG] No credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: open /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: no such file or directory\n2022/07/17 16:17:30 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig\n2022/07/17 16:17:30 [DEBUG] Entering identity.ModifyIdentity with request: &{ID:user1@carrier-net Type:user Affiliation:carrier Attributes:[{Name:hf.Revoker Value:true ECert:true}] MaxEnrollments:0 Secret: CAName:}\n2022/07/17 16:17:30 [DEBUG] Adding token-based authorization header\n2022/07/17 16:17:30 [DEBUG] Sending request\nPUT https://ca.carrier-net:7054/identities/user1@carrier-net\n{\"ID\":\"user1@carrier-net\",\"type\":\"user\",\"affiliation\":\"carrier\",\"attrs\":[{\"name\":\"hf.Revoker\",\"value\":\"true\",\"ecert\":true}],\"max_enrollments\":0}\n2022/07/17 16:17:30 [DEBUG] Received response\nstatusCode=200 (200 OK)\n2022/07/17 16:17:30 [DEBUG] Response body result: map[max_enrollments:-1 caname:ca.carrier-net id:user1@carrier-net type:user affiliation:carrier attrs:[map[value:user1@carrier-net ecert:true name:hf.EnrollmentID] map[name:hf.Type value:user ecert:true] map[name:hf.Affiliation value:carrier ecert:true] map[name:hf.Revoker value:true ecert:true]]]\n2022/07/17 16:17:30 [DEBUG] Successfully modified identity 'user1@carrier-net'\n+ fabric-ca-client enroll -d -u https://user1@carrier-net:user1@carrier-net-pw@ca.carrier-net:7054 --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/carrier/clientuser1\n2022/07/17 16:17:30 [DEBUG] Home directory: /root/ca-tools/carrier/clientuser1\n2022/07/17 16:17:30 [DEBUG] Client configuration settings: &{URL:https://user1@carrier-net:user1@carrier-net-pw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:user1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-595c77d59b-f2fnf] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4204938c0}\n2022/07/17 16:17:30 [DEBUG] Entered runEnroll\n2022/07/17 16:17:30 [DEBUG] Enrolling { Name:user1@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{user1@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-595c77d59b-f2fnf] <nil> <nil> } Type:x509  }\n2022/07/17 16:17:30 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:user1@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{user1@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-595c77d59b-f2fnf] <nil> <nil> } Type:x509  } CSR:{CN:user1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-595c77d59b-f2fnf] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4204938c0}\n2022/07/17 16:17:30 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4204824b0 PluginOpts:<nil>}\n2022/07/17 16:17:30 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420485d30 DummyKeystore:<nil>}\n2022/07/17 16:17:30 [INFO] TLS Enabled\n2022/07/17 16:17:30 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2022/07/17 16:17:30 [DEBUG] Client Cert File: \n2022/07/17 16:17:30 [DEBUG] Client Key File: \n2022/07/17 16:17:30 [DEBUG] Client TLS certificate and/or key file not provided\n2022/07/17 16:17:30 [DEBUG] GenCSR &{CN:user1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-595c77d59b-f2fnf] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2022/07/17 16:17:30 [INFO] generating key: &{A:ecdsa S:256}\n2022/07/17 16:17:30 [DEBUG] generate key from request: algo=ecdsa, size=256\n2022/07/17 16:17:30 [INFO] encoded CSR\n2022/07/17 16:17:30 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-595c77d59b-f2fnf\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRdXNlcjFAY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAS6G12YoViicoNr/IIFsOIq4FlGykjWsuOcxdAveAXTmPG2x9fgpEZmmDWCY3qF\\nyon7hTEW1fo7CHFRTd8eobQzoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy01OTVjNzdkNTliLWYyZm5mMAoGCCqGSM49BAMCA0gAMEUCIQDi\\nhNr2fb4HguLioLKTsgiQwPHHli/Rcaw1HB+lRM6m2AIgPlL/Lz3Xp2E+puq4uEK0\\nByMwl0SqMKq24qtnkKeSDPk=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2022/07/17 16:17:30 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2022/07/17 16:17:30 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMzRENDQW9LZ0F3SUJBZ0lVWmxTb0xKeW9yY0cwRGJlWmx5RUZGTWlBYUVFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1qQTNNVGN4TmpFek1EQmFGdzB5TXpBM01UY3hOakU0TURCYU1IY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhIVEFMQmdOVgpCQXNUQkhWelpYSXdEZ1lEVlFRTEV3ZGpZWEp5YVdWeU1Sb3dHQVlEVlFRRERCRjFjMlZ5TVVCallYSnlhV1Z5CkxXNWxkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCTG9iWFppaFdLSnlnMnY4Z2dXdzRpcmcKV1ViS1NOYXk0NXpGMEM5NEJkT1k4YmJIMStDa1JtYVlOWUpqZW9YS2lmdUZNUmJWK2pzSWNWRk4zeDZodERPagpnZ0VITUlJQkF6QU9CZ05WSFE4QkFmOEVCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVCnZIZ3Bya01ZYURhb2xPWFQyUXlBSll5bDgwZ3dId1lEVlIwakJCZ3dGb0FVcXZpdWdCdnhKNmdOZEtvd1NzclQKWU9WeGY0VXdKQVlEVlIwUkJCMHdHNElaWTJFdGRHOXZiSE10TlRrMVl6YzNaRFU1WWkxbU1tWnVaakI5QmdncQpBd1FGQmdjSUFRUnhleUpoZEhSeWN5STZleUpvWmk1QlptWnBiR2xoZEdsdmJpSTZJbU5oY25KcFpYSWlMQ0pvClppNUZibkp2Ykd4dFpXNTBTVVFpT2lKMWMyVnlNVUJqWVhKeWFXVnlMVzVsZENJc0ltaG1MbEpsZG05clpYSWkKT2lKMGNuVmxJaXdpYUdZdVZIbHdaU0k2SW5WelpYSWlmWDB3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloQVBKWQpMRU9ENnRkWXJnTllYcWNONFhkc3prTy9zdUxXaldzbHplUUFUcmFhQWlCSGV2Y0pCK3NOSU1XV3c2Y2g2R2dvCjlIa3dBaVlGdklGeHNudXZ2Z1dIOHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTmVSZ2IyUUdvN05FdHEraWtLR3kvVEJQYkJrd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1qQTNNVGN4TlRFMU5UUmFGdzB5TlRBMU1EWXhOVEUxTlRSYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUjczZUF2RUtCZXk1TlVmc3NCVXU5Tmt3c0hWUlJCc2pKL2tEckZVZVcyUk52VUJqOFdoMllrWlhUMWM3aisKVGx5SE0wQ2ZHVVZvbjJBeGxkWVBhNjJWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVxdml1Z0J2eEo2Z05kS293U3NyVFlPVnhmNFV3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMV0g3TmZKYTlPY3BiRnJUNzZjbEdoYUlRaXNpZnhaTzY1c3J6d01uRmw4QWlBOGRDdmwKQ0FtMHNFTUEzbzBTREt1RDhwZTF5WTJBOXZhYVdKV3FtUzlXMmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEGK3qt0S2wm8P95gKJkzSLw2alCOnCdKjryYXKhQnXMEiCTOAkvagOMO3XpWXPe1q2xK6PF/W8YaecdRk2QbzwdjBpECiBWhDFVwoC19x3ymDvzv8TnjQeG/u2mXIy2zfH2bJFIKRIg+XUHklhqkpyu5iUy5qvuLcO6FFm0uEmc1rWi1xu6fYkiRAogoToxheJhsvHLu8ZWgbUvW/YUyF3zgf0lbSN0aJRHpyMSIHF78DO8tHTBijkSajZx5iY5FbErl7C5rEP7rap9EPivIkQKIIRXJ+7safo0VfiJkGXI9pbJCkJktk4pQ01JY0IYvxUMEiAv0zTsWLZdKF+xhOcLnD1TigqpVg1hF1RZE9MSMnXeayJECiD+Xdwz8BHwy0gAncCrD4VM2iJXMI4kR/+e4HmVBxv60xIgiUMQ9yu8J8iZt3oJYvWh/LhO3gtscsEHbfr56j3IXGsiRAogvlVh9+afbzxVYdFWeAqG4tS0wcaOS3BQYn3LECAYiZ8SIGnxTvjJ8LZNB5VC7S5cbvu/e9Rh8gXxQ407MxriqG8lKogBCiByDaRLYvgeDzUleExNhS+y/Go+kT2bhTI7DdpHBeY6NRIgSw1CXSjKtQ4UezOVx6ozZE/MwrUPIIUpC6Ty8PTHxpQaIMHUvMqwnXnrIgEiDwr65/dkFhaf6QzRc/Akq7gfIFFFIiBL2e1RUXp9Ea8Yj5ViLrI8CaRE5ldgjW3jvm32xTzTEjJECiAfC1CLAbW4qhMzhBUmx33W+rRD6rpzHg5795w+BZRu1BIgMjuTLxBlOxipt+xBFu9SfMMgKof8WmcwXsh7aKTgxPI6RAog2DuIl5Tjqk+bmuPyl3PDoG016lfov7xYuLwyK4Yo89cSIKa4bP8QleYEqQQp3OcCEpGk88tqKS+vrzVF5Gx4D6cyQiAlMWh/S2Gg9DSFzQJ/lUHDJPUhD2KAxJL0/VnPQrlQ5EogQsH5O5VSMJZyjayfD0UUHVwYjDJokMsfd5IApegrOKlSIA4TMJBawbF/tLaw3bqFJFz4VJLle7Ai1jScmTwSkirE IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUU1dklibWZ5YzcxeGlQd3diV1ZnT0l1SE9wanhoQ0ZLTQpvOFZxUFhVU1J3S2pZWHBCeEVmY1l4bmVnWkxLYmhpcmpZSG8zRTFWMk00aGtmT2dPTi9Yc1d6MDhzTk5JQit0ClRHNHlzQzU4UndxbGdkVGg2aU8yeVFndUVkVUwyUFhnCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]\n2022/07/17 16:17:30 [DEBUG] newEnrollmentResponse user1@carrier-net\n2022/07/17 16:17:30 [INFO] Stored client certificate at /root/ca-tools/carrier/clientuser1/msp/signcerts/cert.pem\n2022/07/17 16:17:30 [INFO] Stored root CA certificate at /root/ca-tools/carrier/clientuser1/msp/cacerts/ca-carrier-net-7054.pem\n+ cp /root/ca-tools/carrier/clientuser1/msp/signcerts/cert.pem /root/ca-tools/carrier/clientuser1/msp/admincerts/user1@carrier-net-cert.pem\n+ cp -R /root/ca-tools/carrier/clientuser1/msp /crypto-config/peerOrganizations/carrier-net/users/user1@carrier-net\n+ fabric-ca-client enroll -d --enrollment.profile tls -u https://user1@carrier-net:user1@carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/clientuser1/tls --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem\n2022/07/17 16:17:30 [DEBUG] Home directory: /root/.fabric-ca-client\n2022/07/17 16:17:30 [DEBUG] Client configuration settings: &{URL:https://user1@carrier-net:user1@carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/clientuser1/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-595c77d59b-f2fnf] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4204461a0}\n2022/07/17 16:17:30 [DEBUG] Entered runEnroll\n2022/07/17 16:17:30 [DEBUG] Enrolling { Name:user1@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-595c77d59b-f2fnf] <nil> <nil> } Type:x509  }\n2022/07/17 16:17:30 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/clientuser1/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:user1@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-595c77d59b-f2fnf] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-595c77d59b-f2fnf] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4204461a0}\n2022/07/17 16:17:30 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42016bda0 PluginOpts:<nil>}\n2022/07/17 16:17:30 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420448f60 DummyKeystore:<nil>}\n2022/07/17 16:17:30 [INFO] TLS Enabled\n2022/07/17 16:17:30 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]\n2022/07/17 16:17:30 [DEBUG] Client Cert File: \n2022/07/17 16:17:30 [DEBUG] Client Key File: \n2022/07/17 16:17:30 [DEBUG] Client TLS certificate and/or key file not provided\n2022/07/17 16:17:30 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-595c77d59b-f2fnf] KeyRequest:<nil> CA:<nil> SerialNumber:}\n2022/07/17 16:17:30 [INFO] generating key: &{A:ecdsa S:256}\n2022/07/17 16:17:30 [DEBUG] generate key from request: algo=ecdsa, size=256\n2022/07/17 16:17:30 [INFO] encoded CSR\n2022/07/17 16:17:30 [DEBUG] Sending request\nPOST https://ca.carrier-net:7054/enroll\n{\"hosts\":[\"ca-tools-595c77d59b-f2fnf\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBF1c2VyMUBjYXJyaWVyLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBKU8kQOm+hi7J/m42eQsRZue08geWxG6mToeZhwHU+bxxTpP/tiO5rZZ9bHEL3kT\\n2vG9BeXzjB0lK8OnpqNnUcCgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTU5NWM3N2Q1OWItZjJmbmYwCgYIKoZIzj0EAwIDSAAwRQIhAOHg\\n1m76vH2j476gxyGnG4bDjzSmpiAij01ZdiMI6U2mAiAAu1Af2id+Xf7bnWCDr6XE\\nmO7vbpObdYjAmj2nTAClaQ==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}\n2022/07/17 16:17:30 [DEBUG] Received response\nstatusCode=201 (201 Created)\n2022/07/17 16:17:30 [DEBUG] Response body result: map[ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTmVSZ2IyUUdvN05FdHEraWtLR3kvVEJQYkJrd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1qQTNNVGN4TlRFMU5UUmFGdzB5TlRBMU1EWXhOVEUxTlRSYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUjczZUF2RUtCZXk1TlVmc3NCVXU5Tmt3c0hWUlJCc2pKL2tEckZVZVcyUk52VUJqOFdoMllrWlhUMWM3aisKVGx5SE0wQ2ZHVVZvbjJBeGxkWVBhNjJWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVxdml1Z0J2eEo2Z05kS293U3NyVFlPVnhmNFV3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMV0g3TmZKYTlPY3BiRnJUNzZjbEdoYUlRaXNpZnhaTzY1c3J6d01uRmw4QWlBOGRDdmwKQ0FtMHNFTUEzbzBTREt1RDhwZTF5WTJBOXZhYVdKV3FtUzlXMmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEGK3qt0S2wm8P95gKJkzSLw2alCOnCdKjryYXKhQnXMEiCTOAkvagOMO3XpWXPe1q2xK6PF/W8YaecdRk2QbzwdjBpECiBWhDFVwoC19x3ymDvzv8TnjQeG/u2mXIy2zfH2bJFIKRIg+XUHklhqkpyu5iUy5qvuLcO6FFm0uEmc1rWi1xu6fYkiRAogoToxheJhsvHLu8ZWgbUvW/YUyF3zgf0lbSN0aJRHpyMSIHF78DO8tHTBijkSajZx5iY5FbErl7C5rEP7rap9EPivIkQKIIRXJ+7safo0VfiJkGXI9pbJCkJktk4pQ01JY0IYvxUMEiAv0zTsWLZdKF+xhOcLnD1TigqpVg1hF1RZE9MSMnXeayJECiD+Xdwz8BHwy0gAncCrD4VM2iJXMI4kR/+e4HmVBxv60xIgiUMQ9yu8J8iZt3oJYvWh/LhO3gtscsEHbfr56j3IXGsiRAogvlVh9+afbzxVYdFWeAqG4tS0wcaOS3BQYn3LECAYiZ8SIGnxTvjJ8LZNB5VC7S5cbvu/e9Rh8gXxQ407MxriqG8lKogBCiByDaRLYvgeDzUleExNhS+y/Go+kT2bhTI7DdpHBeY6NRIgSw1CXSjKtQ4UezOVx6ozZE/MwrUPIIUpC6Ty8PTHxpQaIMHUvMqwnXnrIgEiDwr65/dkFhaf6QzRc/Akq7gfIFFFIiBL2e1RUXp9Ea8Yj5ViLrI8CaRE5ldgjW3jvm32xTzTEjJECiAfC1CLAbW4qhMzhBUmx33W+rRD6rpzHg5795w+BZRu1BIgMjuTLxBlOxipt+xBFu9SfMMgKof8WmcwXsh7aKTgxPI6RAog2DuIl5Tjqk+bmuPyl3PDoG016lfov7xYuLwyK4Yo89cSIKa4bP8QleYEqQQp3OcCEpGk88tqKS+vrzVF5Gx4D6cyQiAlMWh/S2Gg9DSFzQJ/lUHDJPUhD2KAxJL0/VnPQrlQ5EogQsH5O5VSMJZyjayfD0UUHVwYjDJokMsfd5IApegrOKlSIA4TMJBawbF/tLaw3bqFJFz4VJLle7Ai1jScmTwSkirE IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUU1dklibWZ5YzcxeGlQd3diV1ZnT0l1SE9wanhoQ0ZLTQpvOFZxUFhVU1J3S2pZWHBCeEVmY1l4bmVnWkxLYmhpcmpZSG8zRTFWMk00aGtmT2dPTi9Yc1d6MDhzTk5JQit0ClRHNHlzQzU4UndxbGdkVGg2aU8yeVFndUVkVUwyUFhnCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:] Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMrakNDQXFHZ0F3SUJBZ0lVVTVkbzFwZm51VlkrRXdCSExncVJ3TUtSU09rd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1qQTNNVGN4TmpFek1EQmFGdzB5TXpBM01UY3hOakU0TURCYU1IY3hDekFKQmdOVkJBWVRBbFZUTVJjd0ZRWUQKVlFRSUV3NU9iM0owYUNCRFlYSnZiR2x1WVRFVU1CSUdBMVVFQ2hNTFNIbHdaWEpzWldSblpYSXhIVEFMQmdOVgpCQXNUQkhWelpYSXdEZ1lEVlFRTEV3ZGpZWEp5YVdWeU1Sb3dHQVlEVlFRRERCRjFjMlZ5TVVCallYSnlhV1Z5CkxXNWxkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCS1U4a1FPbStoaTdKL200MmVRc1JadWUKMDhnZVd4RzZtVG9lWmh3SFUrYnh4VHBQL3RpTzVyWlo5YkhFTDNrVDJ2RzlCZVh6akIwbEs4T25wcU5uVWNDagpnZ0VtTUlJQklqQU9CZ05WSFE4QkFmOEVCQU1DQTZnd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHCkFRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUVGUDFSQzJldjdZOTA0Wnl1UERHZXFYdGsKdGdXdk1COEdBMVVkSXdRWU1CYUFGS3I0cm9BYjhTZW9EWFNxTUVySzAyRGxjWCtGTUNRR0ExVWRFUVFkTUJ1QwpHV05oTFhSdmIyeHpMVFU1TldNM04yUTFPV0l0WmpKbWJtWXdmUVlJS2dNRUJRWUhDQUVFY1hzaVlYUjBjbk1pCk9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSmpZWEp5YVdWeUlpd2lhR1l1Ulc1eWIyeHNiV1Z1ZEVsRUlqb2kKZFhObGNqRkFZMkZ5Y21sbGNpMXVaWFFpTENKb1ppNVNaWFp2YTJWeUlqb2lkSEoxWlNJc0ltaG1MbFI1Y0dVaQpPaUoxYzJWeUluMTlNQW9HQ0NxR1NNNDlCQU1DQTBjQU1FUUNJSGF6SjhYWmd5TXlkU0psbHJTaklTdG4zU3ZWCkRCNElpMkVqM1hFUUxPb2xBaUJkVTFjWXl2dWl0VSt5dklleUNKT255WmxBWWsxRkNKLzFPQkVlTjZRUWdBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=]\n2022/07/17 16:17:30 [DEBUG] newEnrollmentResponse user1@carrier-net\n2022/07/17 16:17:30 [INFO] Stored client certificate at /root/ca-tools/carrier/clientuser1/tls/signcerts/cert.pem\n2022/07/17 16:17:30 [INFO] Stored TLS root CA certificate at /root/ca-tools/carrier/clientuser1/tls/tlscacerts/tls-ca-carrier-net-7054.pem\n+ cp /root/ca-tools/carrier/clientuser1/tls/keystore/4e3576c8b7c1a3c48942174e6a7f99922c36acf16b82ceb06292e0985fe26ac8_sk /root/ca-tools/carrier/clientuser1/tls/keystore/a59517a8ce11bf572083df5151702fcd89a333f53bb92c41801bc4cc34ca0555_sk /crypto-config/peerOrganizations/carrier-net/users/user1@carrier-net/tls/client.key\ncp: target '/crypto-config/peerOrganizations/carrier-net/users/user1@carrier-net/tls/client.key' is not a directory\n+ cp /root/ca-tools/carrier/clientuser1/tls/signcerts/cert.pem /crypto-config/peerOrganizations/carrier-net/users/user1@carrier-net/tls/client.crt\n+ cp /root/ca-tools/carrier/clientuser1/tls/tlscacerts/tls-ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/users/user1@carrier-net/tls/ca.crt\n+ CUR_USER=1\n+ '[' 1 -lt 1 ']'\n+ cd /", "stderr_lines": ["Defaulting container name to ca-tools.", "Use 'kubectl describe pod/ca-tools-595c77d59b-f2fnf -n carrier-net' to see all of the containers in this pod.", "+ CURRENT_DIR=/", "+ FULLY_QUALIFIED_ORG_NAME=carrier-net", "+ ORG_NAME=carrier", "+ TYPE_FOLDER=peers", "+ USER_IDENTITIES=W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d", "+ AFFILIATION=carrier", "+ SUBJECT=O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB", "+ CA=ca.carrier-net:7054", "+ '[' peer '!=' peer ']'", "+ ORG_CYPTO_FOLDER=/crypto-config/peerOrganizations/carrier-net", "+ ROOT_TLS_CERT=/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem", "+ CAS_FOLDER=/root/ca-tools/cas/ca-carrier", "+ ORG_HOME=/root/ca-tools/carrier", "+ CUR_USER=0", "++ echo W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d", "++ sed -e s/None/null/g", "++ tr \\' '\"'", "++ base64 -d", "++ jq '. | length'", "+ TOTAL_USERS=1", "+ '[' 0 -lt 1 ']'", "++ echo W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d", "++ sed -e s/None/null/g", "++ tr \\' '\"'", "++ jq '.[0].identity'", "++ base64 -d", "++ sed -e 's/\"//g'", "+ USER=user1", "+ ORG_USER=user1@carrier-net", "+ ORG_USERPASS=user1@carrier-net-pw", "+ ADMIN_USER=Admin@carrier-net", "+ ADMIN_USERPASS=Admin@carrier-net-pw", "+ CUR_ATTRS=0", "+ ATTRS=hf.Revoker=true", "++ echo W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d", "++ base64 -d", "++ jq '.[0].attributes | length'", "++ tr \\' '\"'", "++ sed -e s/None/null/g", "+ TOTAL_ATTRS=1", "+ '[' 0 -lt 1 ']'", "++ echo W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d", "++ base64 -d", "++ sed -e 's/\"//g'", "++ jq '.[0].attributes[0].key'", "++ tr \\' '\"'", "++ sed -e s/None/null/g", "++ echo W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d", "++ tr \\' '\"'", "++ base64 -d", "++ jq '.[0].attributes[0].value'", "++ sed -e 's/\"//g'", "++ sed -e s/None/null/g", "+ ATTRS=hf.Revoker=true,hf.Revoker=true:ecert", "+ CUR_ATTRS=1", "+ '[' 1 -lt 1 ']'", "+ '[' '!' -d /root/ca-tools/carrier/clientuser1 ']'", "++++ date", "+++ echo Sun Jul 17 16:17:30 UTC '2022 + 5 minutes'", "++ date -d 'Sun Jul 17 16:17:30 UTC 2022 + 5 minutes' +%Y%m%d%H%M%S", "+ CUR_DATETIME=20220717162230", "+++ sed s/notAfter=//g", "++++ openssl x509 -noout -enddate", "+++ echo notAfter=Jul 17 15:26:00 2023 GMT", "++ date -d 'Jul 17 15:26:00 2023 GMT' +%Y%m%d%H%M%S", "+ CERT_DATETIME=20230717152600", "++ openssl x509 -text -noout -certopt no_subject,no_header,no_version,no_serial,no_signame,no_validity,no_issuer,no_pubkey,no_sigdump,no_aux", "+ ATTRS_CERT='        X509v3 extensions:", "            X509v3 Key Usage: critical", "                Digital Signature", "            X509v3 Basic Constraints: critical", "                CA:FALSE", "            X509v3 Subject Key Identifier: ", "                F1:AD:29:93:80:08:5F:66:08:F6:2C:26:73:AD:21:A0:B9:1F:67:58", "            X509v3 Authority Key Identifier: ", "                keyid:AA:F8:AE:80:1B:F1:27:A8:0D:74:AA:30:4A:CA:D3:60:E5:71:7F:85", "", "            X509v3 Subject Alternative Name: ", "                DNS:ca-tools-595c77d59b-f2fnf", "            1.2.3.4.5.6.7.8.1: ", "                {\"attrs\":{\"hf.Affiliation\":\"carrier\",\"hf.EnrollmentID\":\"user1@carrier-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'", "+ ATTRS_CERT='", "                {\"attrs\":{\"hf.Affiliation\":\"carrier\",\"hf.EnrollmentID\":\"user1@carrier-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'", "+ CUR_ATTRS=0", "+ MATCH_FLAG=true", "+ '[' 0 -lt 1 ']'", "++ echo W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d", "++ base64 -d", "++ jq '.[0].attributes[0].key'", "++ tr \\' '\"'", "++ sed -e 's/\"//g'", "++ sed -e s/None/null/g", "+ CUR_KEY=hf.Revoker", "++ echo '{\"attrs\":{\"hf.Affiliation\":\"carrier\",\"hf.EnrollmentID\":\"user1@carrier-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'", "++ jq .attrs.hf.Revoker", "+ [[ null == \\n\\u\\l\\l ]]", "+ MATCH_FLAG=false", "+ CUR_ATTRS=1", "+ '[' 1 -lt 1 ']'", "+ '[' 20220717162230 -ge 20230717152600 ']'", "+ '[' false == false ']'", "++ echo '{\"attrs\":{\"hf.Affiliation\":\"carrier\",\"hf.EnrollmentID\":\"user1@carrier-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'", "++ jq '.attrs | length'", "+ TOTAL_CERT_ATTRS=4", "+ CUR_CERT_ATTRS=0", "+ '[' 0 -lt 4 ']'", "++ echo '{\"attrs\":{\"hf.Affiliation\":\"carrier\",\"hf.EnrollmentID\":\"user1@carrier-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'", "++ jq '.attrs | to_entries | .[0].key'", "++ sed -e 's/\"//g'", "+ '[' hf.Affiliation '!=' hf.Affiliation ']'", "+ CUR_CERT_ATTRS=1", "+ '[' 1 -lt 4 ']'", "++ echo '{\"attrs\":{\"hf.Affiliation\":\"carrier\",\"hf.EnrollmentID\":\"user1@carrier-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'", "++ jq '.attrs | to_entries | .[1].key'", "++ sed -e 's/\"//g'", "+ '[' hf.EnrollmentID '!=' hf.Affiliation ']'", "++ echo '{\"attrs\":{\"hf.Affiliation\":\"carrier\",\"hf.EnrollmentID\":\"user1@carrier-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'", "++ jq '.attrs | to_entries | .[1].key'", "++ sed -e 's/\"//g'", "+ '[' hf.EnrollmentID '!=' hf.Type ']'", "++ echo '{\"attrs\":{\"hf.Affiliation\":\"carrier\",\"hf.EnrollmentID\":\"user1@carrier-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'", "++ jq '.attrs | to_entries | .[1].key'", "++ sed -e 's/\"//g'", "+ '[' hf.EnrollmentID '!=' hf.EnrollmentID ']'", "+ CUR_CERT_ATTRS=2", "+ '[' 2 -lt 4 ']'", "++ jq '.attrs | to_entries | .[2].key'", "++ sed -e 's/\"//g'", "++ echo '{\"attrs\":{\"hf.Affiliation\":\"carrier\",\"hf.EnrollmentID\":\"user1@carrier-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'", "+ '[' hf.Revoker '!=' hf.Affiliation ']'", "++ jq '.attrs | to_entries | .[2].key'", "++ echo '{\"attrs\":{\"hf.Affiliation\":\"carrier\",\"hf.EnrollmentID\":\"user1@carrier-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'", "++ sed -e 's/\"//g'", "+ '[' hf.Revoker '!=' hf.Type ']'", "++ echo '{\"attrs\":{\"hf.Affiliation\":\"carrier\",\"hf.EnrollmentID\":\"user1@carrier-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'", "++ jq '.attrs | to_entries | .[2].key'", "++ sed -e 's/\"//g'", "+ '[' hf.Revoker '!=' hf.EnrollmentID ']'", "+ KEY_PRESENT=false", "+ CUR_ATTRS=0", "+ '[' 0 -lt 1 ']'", "++ echo '{\"attrs\":{\"hf.Affiliation\":\"carrier\",\"hf.EnrollmentID\":\"user1@carrier-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'", "++ jq '.attrs | to_entries | .[2].key'", "++ sed -e 's/\"//g'", "++ base64 -d", "++ sed -e s/None/null/g", "++ jq '.[0].attributes[0].key'", "++ sed -e 's/\"//g'", "++ tr \\' '\"'", "++ echo W3sndXNlcic6IE5vbmUsICdpZGVudGl0eSc6ICd1c2VyMScsICdhdHRyaWJ1dGVzJzogW3sna2V5JzogJ2hmLlJldm9rZXInLCAndmFsdWUnOiAndHJ1ZSd9XX1d", "+ '[' hf.Revoker == hf.Revoker ']'", "+ KEY_PRESENT=true", "+ CUR_ATTRS=1", "+ '[' 1 -lt 1 ']'", "+ '[' true == false ']'", "+ CUR_CERT_ATTRS=3", "+ '[' 3 -lt 4 ']'", "++ echo '{\"attrs\":{\"hf.Affiliation\":\"carrier\",\"hf.EnrollmentID\":\"user1@carrier-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'", "++ sed -e 's/\"//g'", "++ jq '.attrs | to_entries | .[3].key'", "+ '[' hf.Type '!=' hf.Affiliation ']'", "++ echo '{\"attrs\":{\"hf.Affiliation\":\"carrier\",\"hf.EnrollmentID\":\"user1@carrier-net\",\"hf.Revoker\":\"true\",\"hf.Type\":\"client\"}}'", "++ jq '.attrs | to_entries | .[3].key'", "++ sed -e 's/\"//g'", "+ '[' hf.Type '!=' hf.Type ']'", "+ CUR_CERT_ATTRS=4", "+ '[' 4 -lt 4 ']'", "+ fabric-ca-client identity modify user1@carrier-net -d --type user --affiliation carrier --attrs hf.Revoker=true,hf.Revoker=true:ecert --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/cas/ca-carrier", "2022/07/17 16:17:30 [DEBUG] Home directory: /root/ca-tools/cas/ca-carrier", "2022/07/17 16:17:30 [INFO] Configuration file location: /root/ca-tools/cas/ca-carrier/fabric-ca-client-config.yaml", "2022/07/17 16:17:30 [DEBUG] Checking for enrollment", "2022/07/17 16:17:30 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-595c77d59b-f2fnf] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200aeb00}", "2022/07/17 16:17:30 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42044c1b0 PluginOpts:<nil>}", "2022/07/17 16:17:30 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420447fe0 DummyKeystore:<nil>}", "2022/07/17 16:17:30 [INFO] TLS Enabled", "2022/07/17 16:17:30 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]", "2022/07/17 16:17:30 [DEBUG] Client Cert File: ", "2022/07/17 16:17:30 [DEBUG] Client Key File: ", "2022/07/17 16:17:30 [DEBUG] Client TLS certificate and/or key file not provided", "2022/07/17 16:17:30 [DEBUG] Client configuration settings: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-595c77d59b-f2fnf] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200aeb00}", "2022/07/17 16:17:30 [DEBUG] Entered runModifyIdentity: {id: json: add:{ID: Type:user Affiliation: Attributes:[] MaxEnrollments:0 Secret: CAName:} modify:{ID: Type:user Affiliation:carrier Attributes:[] MaxEnrollments:0 Secret: CAName:} remove:{ID: Force:false CAName:}}", "2022/07/17 16:17:30 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/cas/ca-carrier/msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:carrier-admin Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-595c77d59b-f2fnf] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[{Name:hf.Revoker Value:true ECert:true}] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4200aeb00}", "2022/07/17 16:17:30 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42044c1b0 PluginOpts:<nil>}", "2022/07/17 16:17:30 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420447fe0 DummyKeystore:<nil>}", "2022/07/17 16:17:30 [INFO] TLS Enabled", "2022/07/17 16:17:30 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]", "2022/07/17 16:17:30 [DEBUG] Client Cert File: ", "2022/07/17 16:17:30 [DEBUG] Client Key File: ", "2022/07/17 16:17:30 [DEBUG] Client TLS certificate and/or key file not provided", "2022/07/17 16:17:30 [DEBUG] Loading identity: keyFile=/root/ca-tools/cas/ca-carrier/msp/keystore/key.pem, certFile=/root/ca-tools/cas/ca-carrier/msp/signcerts/cert.pem", "2022/07/17 16:17:30 [DEBUG] No credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: open /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig: no such file or directory", "2022/07/17 16:17:30 [DEBUG] No Idemix credential found at /root/ca-tools/cas/ca-carrier/msp/user/SignerConfig", "2022/07/17 16:17:30 [DEBUG] Entering identity.ModifyIdentity with request: &{ID:user1@carrier-net Type:user Affiliation:carrier Attributes:[{Name:hf.Revoker Value:true ECert:true}] MaxEnrollments:0 Secret: CAName:}", "2022/07/17 16:17:30 [DEBUG] Adding token-based authorization header", "2022/07/17 16:17:30 [DEBUG] Sending request", "PUT https://ca.carrier-net:7054/identities/user1@carrier-net", "{\"ID\":\"user1@carrier-net\",\"type\":\"user\",\"affiliation\":\"carrier\",\"attrs\":[{\"name\":\"hf.Revoker\",\"value\":\"true\",\"ecert\":true}],\"max_enrollments\":0}", "2022/07/17 16:17:30 [DEBUG] Received response", "statusCode=200 (200 OK)", "2022/07/17 16:17:30 [DEBUG] Response body result: map[max_enrollments:-1 caname:ca.carrier-net id:user1@carrier-net type:user affiliation:carrier attrs:[map[value:user1@carrier-net ecert:true name:hf.EnrollmentID] map[name:hf.Type value:user ecert:true] map[name:hf.Affiliation value:carrier ecert:true] map[name:hf.Revoker value:true ecert:true]]]", "2022/07/17 16:17:30 [DEBUG] Successfully modified identity 'user1@carrier-net'", "+ fabric-ca-client enroll -d -u https://user1@carrier-net:user1@carrier-net-pw@ca.carrier-net:7054 --csr.names O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem --home /root/ca-tools/carrier/clientuser1", "2022/07/17 16:17:30 [DEBUG] Home directory: /root/ca-tools/carrier/clientuser1", "2022/07/17 16:17:30 [DEBUG] Client configuration settings: &{URL:https://user1@carrier-net:user1@carrier-net-pw@ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:<nil> Type:x509  } CSR:{CN:user1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-595c77d59b-f2fnf] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4204938c0}", "2022/07/17 16:17:30 [DEBUG] Entered runEnroll", "2022/07/17 16:17:30 [DEBUG] Enrolling { Name:user1@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{user1@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-595c77d59b-f2fnf] <nil> <nil> } Type:x509  }", "2022/07/17 16:17:30 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:msp TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:user1@carrier-net Secret:**** CAName: AttrReqs:[] Profile: Label: CSR:&{user1@carrier-net [{   Carrier  } {    Carrier } {  51.50/-0.13/London   } {GB     }] [ca-tools-595c77d59b-f2fnf] <nil> <nil> } Type:x509  } CSR:{CN:user1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-595c77d59b-f2fnf] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4204938c0}", "2022/07/17 16:17:30 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc4204824b0 PluginOpts:<nil>}", "2022/07/17 16:17:30 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420485d30 DummyKeystore:<nil>}", "2022/07/17 16:17:30 [INFO] TLS Enabled", "2022/07/17 16:17:30 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]", "2022/07/17 16:17:30 [DEBUG] Client Cert File: ", "2022/07/17 16:17:30 [DEBUG] Client Key File: ", "2022/07/17 16:17:30 [DEBUG] Client TLS certificate and/or key file not provided", "2022/07/17 16:17:30 [DEBUG] GenCSR &{CN:user1@carrier-net Names:[{C: ST: L: O:Carrier OU: SerialNumber:} {C: ST: L: O: OU:Carrier SerialNumber:} {C: ST: L:51.50/-0.13/London O: OU: SerialNumber:} {C:GB ST: L: O: OU: SerialNumber:}] Hosts:[ca-tools-595c77d59b-f2fnf] KeyRequest:<nil> CA:<nil> SerialNumber:}", "2022/07/17 16:17:30 [INFO] generating key: &{A:ecdsa S:256}", "2022/07/17 16:17:30 [DEBUG] generate key from request: algo=ecdsa, size=256", "2022/07/17 16:17:30 [INFO] encoded CSR", "2022/07/17 16:17:30 [DEBUG] Sending request", "POST https://ca.carrier-net:7054/enroll", "{\"hosts\":[\"ca-tools-595c77d59b-f2fnf\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXTCCAQMCAQAwajELMAkGA1UEBhMCR0IxGzAZBgNVBAcTEjUxLjUwLy0wLjEz\\nL0xvbmRvbjEQMA4GA1UEChMHQ2FycmllcjEQMA4GA1UECxMHQ2FycmllcjEaMBgG\\nA1UEAwwRdXNlcjFAY2Fycmllci1uZXQwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNC\\nAAS6G12YoViicoNr/IIFsOIq4FlGykjWsuOcxdAveAXTmPG2x9fgpEZmmDWCY3qF\\nyon7hTEW1fo7CHFRTd8eobQzoDcwNQYJKoZIhvcNAQkOMSgwJjAkBgNVHREEHTAb\\nghljYS10b29scy01OTVjNzdkNTliLWYyZm5mMAoGCCqGSM49BAMCA0gAMEUCIQDi\\nhNr2fb4HguLioLKTsgiQwPHHli/Rcaw1HB+lRM6m2AIgPlL/Lz3Xp2E+puq4uEK0\\nByMwl0SqMKq24qtnkKeSDPk=\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}", "2022/07/17 16:17:30 [DEBUG] Received response", "statusCode=201 (201 Created)", "2022/07/17 16:17:30 [DEBUG] Response body result: map[Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMzRENDQW9LZ0F3SUJBZ0lVWmxTb0xKeW9yY0cwRGJlWmx5RUZGTWlBYUVFd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1qQTNNVGN4TmpFek1EQmFGdzB5TXpBM01UY3hOakU0TURCYU1IY3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhIVEFMQmdOVgpCQXNUQkhWelpYSXdEZ1lEVlFRTEV3ZGpZWEp5YVdWeU1Sb3dHQVlEVlFRRERCRjFjMlZ5TVVCallYSnlhV1Z5CkxXNWxkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCTG9iWFppaFdLSnlnMnY4Z2dXdzRpcmcKV1ViS1NOYXk0NXpGMEM5NEJkT1k4YmJIMStDa1JtYVlOWUpqZW9YS2lmdUZNUmJWK2pzSWNWRk4zeDZodERPagpnZ0VITUlJQkF6QU9CZ05WSFE4QkFmOEVCQU1DQjRBd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVCnZIZ3Bya01ZYURhb2xPWFQyUXlBSll5bDgwZ3dId1lEVlIwakJCZ3dGb0FVcXZpdWdCdnhKNmdOZEtvd1NzclQKWU9WeGY0VXdKQVlEVlIwUkJCMHdHNElaWTJFdGRHOXZiSE10TlRrMVl6YzNaRFU1WWkxbU1tWnVaakI5QmdncQpBd1FGQmdjSUFRUnhleUpoZEhSeWN5STZleUpvWmk1QlptWnBiR2xoZEdsdmJpSTZJbU5oY25KcFpYSWlMQ0pvClppNUZibkp2Ykd4dFpXNTBTVVFpT2lKMWMyVnlNVUJqWVhKeWFXVnlMVzVsZENJc0ltaG1MbEpsZG05clpYSWkKT2lKMGNuVmxJaXdpYUdZdVZIbHdaU0k2SW5WelpYSWlmWDB3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloQVBKWQpMRU9ENnRkWXJnTllYcWNONFhkc3prTy9zdUxXaldzbHplUUFUcmFhQWlCSGV2Y0pCK3NOSU1XV3c2Y2g2R2dvCjlIa3dBaVlGdklGeHNudXZ2Z1dIOHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTmVSZ2IyUUdvN05FdHEraWtLR3kvVEJQYkJrd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1qQTNNVGN4TlRFMU5UUmFGdzB5TlRBMU1EWXhOVEUxTlRSYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUjczZUF2RUtCZXk1TlVmc3NCVXU5Tmt3c0hWUlJCc2pKL2tEckZVZVcyUk52VUJqOFdoMllrWlhUMWM3aisKVGx5SE0wQ2ZHVVZvbjJBeGxkWVBhNjJWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVxdml1Z0J2eEo2Z05kS293U3NyVFlPVnhmNFV3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMV0g3TmZKYTlPY3BiRnJUNzZjbEdoYUlRaXNpZnhaTzY1c3J6d01uRmw4QWlBOGRDdmwKQ0FtMHNFTUEzbzBTREt1RDhwZTF5WTJBOXZhYVdKV3FtUzlXMmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEGK3qt0S2wm8P95gKJkzSLw2alCOnCdKjryYXKhQnXMEiCTOAkvagOMO3XpWXPe1q2xK6PF/W8YaecdRk2QbzwdjBpECiBWhDFVwoC19x3ymDvzv8TnjQeG/u2mXIy2zfH2bJFIKRIg+XUHklhqkpyu5iUy5qvuLcO6FFm0uEmc1rWi1xu6fYkiRAogoToxheJhsvHLu8ZWgbUvW/YUyF3zgf0lbSN0aJRHpyMSIHF78DO8tHTBijkSajZx5iY5FbErl7C5rEP7rap9EPivIkQKIIRXJ+7safo0VfiJkGXI9pbJCkJktk4pQ01JY0IYvxUMEiAv0zTsWLZdKF+xhOcLnD1TigqpVg1hF1RZE9MSMnXeayJECiD+Xdwz8BHwy0gAncCrD4VM2iJXMI4kR/+e4HmVBxv60xIgiUMQ9yu8J8iZt3oJYvWh/LhO3gtscsEHbfr56j3IXGsiRAogvlVh9+afbzxVYdFWeAqG4tS0wcaOS3BQYn3LECAYiZ8SIGnxTvjJ8LZNB5VC7S5cbvu/e9Rh8gXxQ407MxriqG8lKogBCiByDaRLYvgeDzUleExNhS+y/Go+kT2bhTI7DdpHBeY6NRIgSw1CXSjKtQ4UezOVx6ozZE/MwrUPIIUpC6Ty8PTHxpQaIMHUvMqwnXnrIgEiDwr65/dkFhaf6QzRc/Akq7gfIFFFIiBL2e1RUXp9Ea8Yj5ViLrI8CaRE5ldgjW3jvm32xTzTEjJECiAfC1CLAbW4qhMzhBUmx33W+rRD6rpzHg5795w+BZRu1BIgMjuTLxBlOxipt+xBFu9SfMMgKof8WmcwXsh7aKTgxPI6RAog2DuIl5Tjqk+bmuPyl3PDoG016lfov7xYuLwyK4Yo89cSIKa4bP8QleYEqQQp3OcCEpGk88tqKS+vrzVF5Gx4D6cyQiAlMWh/S2Gg9DSFzQJ/lUHDJPUhD2KAxJL0/VnPQrlQ5EogQsH5O5VSMJZyjayfD0UUHVwYjDJokMsfd5IApegrOKlSIA4TMJBawbF/tLaw3bqFJFz4VJLle7Ai1jScmTwSkirE IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUU1dklibWZ5YzcxeGlQd3diV1ZnT0l1SE9wanhoQ0ZLTQpvOFZxUFhVU1J3S2pZWHBCeEVmY1l4bmVnWkxLYmhpcmpZSG8zRTFWMk00aGtmT2dPTi9Yc1d6MDhzTk5JQit0ClRHNHlzQzU4UndxbGdkVGg2aU8yeVFndUVkVUwyUFhnCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:]]", "2022/07/17 16:17:30 [DEBUG] newEnrollmentResponse user1@carrier-net", "2022/07/17 16:17:30 [INFO] Stored client certificate at /root/ca-tools/carrier/clientuser1/msp/signcerts/cert.pem", "2022/07/17 16:17:30 [INFO] Stored root CA certificate at /root/ca-tools/carrier/clientuser1/msp/cacerts/ca-carrier-net-7054.pem", "+ cp /root/ca-tools/carrier/clientuser1/msp/signcerts/cert.pem /root/ca-tools/carrier/clientuser1/msp/admincerts/user1@carrier-net-cert.pem", "+ cp -R /root/ca-tools/carrier/clientuser1/msp /crypto-config/peerOrganizations/carrier-net/users/user1@carrier-net", "+ fabric-ca-client enroll -d --enrollment.profile tls -u https://user1@carrier-net:user1@carrier-net-pw@ca.carrier-net:7054 -M /root/ca-tools/carrier/clientuser1/tls --tls.certfiles /crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem", "2022/07/17 16:17:30 [DEBUG] Home directory: /root/.fabric-ca-client", "2022/07/17 16:17:30 [DEBUG] Client configuration settings: &{URL:https://user1@carrier-net:user1@carrier-net-pw@ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/clientuser1/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name: Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:<nil> Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-595c77d59b-f2fnf] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4204461a0}", "2022/07/17 16:17:30 [DEBUG] Entered runEnroll", "2022/07/17 16:17:30 [DEBUG] Enrolling { Name:user1@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-595c77d59b-f2fnf] <nil> <nil> } Type:x509  }", "2022/07/17 16:17:30 [DEBUG] Initializing client with config: &{URL:https://ca.carrier-net:7054 MSPDir:/root/ca-tools/carrier/clientuser1/tls TLS:{Enabled:true CertFiles:[/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem] Client:{KeyFile: CertFile:}} Enrollment:{ Name:user1@carrier-net Secret:**** CAName: AttrReqs:[] Profile:tls Label: CSR:&{Admin@carrier-net [{US North Carolina  Hyperledger Fabric }] [ca-tools-595c77d59b-f2fnf] <nil> <nil> } Type:x509  } CSR:{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-595c77d59b-f2fnf] KeyRequest:<nil> CA:<nil> SerialNumber:} ID:{Name: Type:client Secret: MaxEnrollments:0 Affiliation: Attributes:[] CAName:} Revoke:{Name: Serial: AKI: Reason: CAName: GenCRL:false} CAInfo:{CAName:} CAName: CSP:0xc4204461a0}", "2022/07/17 16:17:30 [DEBUG] Initializing BCCSP: &{ProviderName:SW SwOpts:0xc42016bda0 PluginOpts:<nil>}", "2022/07/17 16:17:30 [DEBUG] Initializing BCCSP with software options &{SecLevel:256 HashFamily:SHA2 Ephemeral:false FileKeystore:0xc420448f60 DummyKeystore:<nil>}", "2022/07/17 16:17:30 [INFO] TLS Enabled", "2022/07/17 16:17:30 [DEBUG] CA Files: [/crypto-config/peerOrganizations/carrier-net/ca/ca.carrier-net-cert.pem]", "2022/07/17 16:17:30 [DEBUG] Client Cert File: ", "2022/07/17 16:17:30 [DEBUG] Client Key File: ", "2022/07/17 16:17:30 [DEBUG] Client TLS certificate and/or key file not provided", "2022/07/17 16:17:30 [DEBUG] GenCSR &{CN:Admin@carrier-net Names:[{C:US ST:North Carolina L: O:Hyperledger OU:Fabric SerialNumber:}] Hosts:[ca-tools-595c77d59b-f2fnf] KeyRequest:<nil> CA:<nil> SerialNumber:}", "2022/07/17 16:17:30 [INFO] generating key: &{A:ecdsa S:256}", "2022/07/17 16:17:30 [DEBUG] generate key from request: algo=ecdsa, size=256", "2022/07/17 16:17:30 [INFO] encoded CSR", "2022/07/17 16:17:30 [DEBUG] Sending request", "POST https://ca.carrier-net:7054/enroll", "{\"hosts\":[\"ca-tools-595c77d59b-f2fnf\"],\"certificate_request\":\"-----BEGIN CERTIFICATE REQUEST-----\\nMIIBXDCCAQICAQAwaTELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9s\\naW5hMRQwEgYDVQQKEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRowGAYD\\nVQQDDBF1c2VyMUBjYXJyaWVyLW5ldDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IA\\nBKU8kQOm+hi7J/m42eQsRZue08geWxG6mToeZhwHU+bxxTpP/tiO5rZZ9bHEL3kT\\n2vG9BeXzjB0lK8OnpqNnUcCgNzA1BgkqhkiG9w0BCQ4xKDAmMCQGA1UdEQQdMBuC\\nGWNhLXRvb2xzLTU5NWM3N2Q1OWItZjJmbmYwCgYIKoZIzj0EAwIDSAAwRQIhAOHg\\n1m76vH2j476gxyGnG4bDjzSmpiAij01ZdiMI6U2mAiAAu1Af2id+Xf7bnWCDr6XE\\nmO7vbpObdYjAmj2nTAClaQ==\\n-----END CERTIFICATE REQUEST-----\\n\",\"profile\":\"tls\",\"crl_override\":\"\",\"label\":\"\",\"NotBefore\":\"0001-01-01T00:00:00Z\",\"NotAfter\":\"0001-01-01T00:00:00Z\",\"CAName\":\"\"}", "2022/07/17 16:17:30 [DEBUG] Received response", "statusCode=201 (201 Created)", "2022/07/17 16:17:30 [DEBUG] Response body result: map[ServerInfo:map[CAName:ca.carrier-net CAChain:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVTmVSZ2IyUUdvN05FdHEraWtLR3kvVEJQYkJrd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1qQTNNVGN4TlRFMU5UUmFGdzB5TlRBMU1EWXhOVEUxTlRSYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUjczZUF2RUtCZXk1TlVmc3NCVXU5Tmt3c0hWUlJCc2pKL2tEckZVZVcyUk52VUJqOFdoMllrWlhUMWM3aisKVGx5SE0wQ2ZHVVZvbjJBeGxkWVBhNjJWbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVxdml1Z0J2eEo2Z05kS293U3NyVFlPVnhmNFV3Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFMV0g3TmZKYTlPY3BiRnJUNzZjbEdoYUlRaXNpZnhaTzY1c3J6d01uRmw4QWlBOGRDdmwKQ0FtMHNFTUEzbzBTREt1RDhwZTF5WTJBOXZhYVdKV3FtUzlXMmc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg== IssuerPublicKey:CgJPVQoEUm9sZQoMRW5yb2xsbWVudElEChBSZXZvY2F0aW9uSGFuZGxlEkQKIEGK3qt0S2wm8P95gKJkzSLw2alCOnCdKjryYXKhQnXMEiCTOAkvagOMO3XpWXPe1q2xK6PF/W8YaecdRk2QbzwdjBpECiBWhDFVwoC19x3ymDvzv8TnjQeG/u2mXIy2zfH2bJFIKRIg+XUHklhqkpyu5iUy5qvuLcO6FFm0uEmc1rWi1xu6fYkiRAogoToxheJhsvHLu8ZWgbUvW/YUyF3zgf0lbSN0aJRHpyMSIHF78DO8tHTBijkSajZx5iY5FbErl7C5rEP7rap9EPivIkQKIIRXJ+7safo0VfiJkGXI9pbJCkJktk4pQ01JY0IYvxUMEiAv0zTsWLZdKF+xhOcLnD1TigqpVg1hF1RZE9MSMnXeayJECiD+Xdwz8BHwy0gAncCrD4VM2iJXMI4kR/+e4HmVBxv60xIgiUMQ9yu8J8iZt3oJYvWh/LhO3gtscsEHbfr56j3IXGsiRAogvlVh9+afbzxVYdFWeAqG4tS0wcaOS3BQYn3LECAYiZ8SIGnxTvjJ8LZNB5VC7S5cbvu/e9Rh8gXxQ407MxriqG8lKogBCiByDaRLYvgeDzUleExNhS+y/Go+kT2bhTI7DdpHBeY6NRIgSw1CXSjKtQ4UezOVx6ozZE/MwrUPIIUpC6Ty8PTHxpQaIMHUvMqwnXnrIgEiDwr65/dkFhaf6QzRc/Akq7gfIFFFIiBL2e1RUXp9Ea8Yj5ViLrI8CaRE5ldgjW3jvm32xTzTEjJECiAfC1CLAbW4qhMzhBUmx33W+rRD6rpzHg5795w+BZRu1BIgMjuTLxBlOxipt+xBFu9SfMMgKof8WmcwXsh7aKTgxPI6RAog2DuIl5Tjqk+bmuPyl3PDoG016lfov7xYuLwyK4Yo89cSIKa4bP8QleYEqQQp3OcCEpGk88tqKS+vrzVF5Gx4D6cyQiAlMWh/S2Gg9DSFzQJ/lUHDJPUhD2KAxJL0/VnPQrlQ5EogQsH5O5VSMJZyjayfD0UUHVwYjDJokMsfd5IApegrOKlSIA4TMJBawbF/tLaw3bqFJFz4VJLle7Ai1jScmTwSkirE IssuerRevocationPublicKey:LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUhZd0VBWUhLb1pJemowQ0FRWUZLNEVFQUNJRFlnQUU1dklibWZ5YzcxeGlQd3diV1ZnT0l1SE9wanhoQ0ZLTQpvOFZxUFhVU1J3S2pZWHBCeEVmY1l4bmVnWkxLYmhpcmpZSG8zRTFWMk00aGtmT2dPTi9Yc1d6MDhzTk5JQit0ClRHNHlzQzU4UndxbGdkVGg2aU8yeVFndUVkVUwyUFhnCi0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo= Version:] Cert:LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMrakNDQXFHZ0F3SUJBZ0lVVTVkbzFwZm51VlkrRXdCSExncVJ3TUtSU09rd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1qQTNNVGN4TmpFek1EQmFGdzB5TXpBM01UY3hOakU0TURCYU1IY3hDekFKQmdOVkJBWVRBbFZUTVJjd0ZRWUQKVlFRSUV3NU9iM0owYUNCRFlYSnZiR2x1WVRFVU1CSUdBMVVFQ2hNTFNIbHdaWEpzWldSblpYSXhIVEFMQmdOVgpCQXNUQkhWelpYSXdEZ1lEVlFRTEV3ZGpZWEp5YVdWeU1Sb3dHQVlEVlFRRERCRjFjMlZ5TVVCallYSnlhV1Z5CkxXNWxkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCS1U4a1FPbStoaTdKL200MmVRc1JadWUKMDhnZVd4RzZtVG9lWmh3SFUrYnh4VHBQL3RpTzVyWlo5YkhFTDNrVDJ2RzlCZVh6akIwbEs4T25wcU5uVWNDagpnZ0VtTUlJQklqQU9CZ05WSFE4QkFmOEVCQU1DQTZnd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHCkFRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUVGUDFSQzJldjdZOTA0Wnl1UERHZXFYdGsKdGdXdk1COEdBMVVkSXdRWU1CYUFGS3I0cm9BYjhTZW9EWFNxTUVySzAyRGxjWCtGTUNRR0ExVWRFUVFkTUJ1QwpHV05oTFhSdmIyeHpMVFU1TldNM04yUTFPV0l0WmpKbWJtWXdmUVlJS2dNRUJRWUhDQUVFY1hzaVlYUjBjbk1pCk9uc2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSmpZWEp5YVdWeUlpd2lhR1l1Ulc1eWIyeHNiV1Z1ZEVsRUlqb2kKZFhObGNqRkFZMkZ5Y21sbGNpMXVaWFFpTENKb1ppNVNaWFp2YTJWeUlqb2lkSEoxWlNJc0ltaG1MbFI1Y0dVaQpPaUoxYzJWeUluMTlNQW9HQ0NxR1NNNDlCQU1DQTBjQU1FUUNJSGF6SjhYWmd5TXlkU0psbHJTaklTdG4zU3ZWCkRCNElpMkVqM1hFUUxPb2xBaUJkVTFjWXl2dWl0VSt5dklleUNKT255WmxBWWsxRkNKLzFPQkVlTjZRUWdBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=]", "2022/07/17 16:17:30 [DEBUG] newEnrollmentResponse user1@carrier-net", "2022/07/17 16:17:30 [INFO] Stored client certificate at /root/ca-tools/carrier/clientuser1/tls/signcerts/cert.pem", "2022/07/17 16:17:30 [INFO] Stored TLS root CA certificate at /root/ca-tools/carrier/clientuser1/tls/tlscacerts/tls-ca-carrier-net-7054.pem", "+ cp /root/ca-tools/carrier/clientuser1/tls/keystore/4e3576c8b7c1a3c48942174e6a7f99922c36acf16b82ceb06292e0985fe26ac8_sk /root/ca-tools/carrier/clientuser1/tls/keystore/a59517a8ce11bf572083df5151702fcd89a333f53bb92c41801bc4cc34ca0555_sk /crypto-config/peerOrganizations/carrier-net/users/user1@carrier-net/tls/client.key", "cp: target '/crypto-config/peerOrganizations/carrier-net/users/user1@carrier-net/tls/client.key' is not a directory", "+ cp /root/ca-tools/carrier/clientuser1/tls/signcerts/cert.pem /crypto-config/peerOrganizations/carrier-net/users/user1@carrier-net/tls/client.crt", "+ cp /root/ca-tools/carrier/clientuser1/tls/tlscacerts/tls-ca-carrier-net-7054.pem /crypto-config/peerOrganizations/carrier-net/users/user1@carrier-net/tls/ca.crt", "+ CUR_USER=1", "+ '[' 1 -lt 1 ']'", "+ cd /"], "stdout": "Successfully modified identity - Name: user1@carrier-net, Type: user, Affiliation: carrier, Max Enrollments: -1, Secret: , Attributes: [{Name:hf.EnrollmentID Value:user1@carrier-net ECert:true} {Name:hf.Type Value:user ECert:true} {Name:hf.Affiliation Value:carrier ECert:true} {Name:hf.Revoker Value:true ECert:true}]\nDefaulting container name to ca-tools.", "stdout_lines": ["Successfully modified identity - Name: user1@carrier-net, Type: user, Affiliation: carrier, Max Enrollments: -1, Secret: , Attributes: [{Name:hf.EnrollmentID Value:user1@carrier-net ECert:true} {Name:hf.Type Value:user ECert:true} {Name:hf.Affiliation Value:carrier ECert:true} {Name:hf.Revoker Value:true ECert:true}]", "Defaulting container name to ca-tools."]}

TASK [create/users : Copy user certificates for orgs] **************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/users/tasks/main.yaml:50
included: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/users/tasks/save_to_vault.yaml for localhost => (item=(censored due to no_log))

TASK [create/users : Check if user msp already created] ************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/users/tasks/save_to_vault.yaml:8
ok: [localhost] => {"changed": false, "cmd": "vault kv get -field=admincerts secretv2/crypto/peerOrganizations/carrier-net/users/user1/msp\n", "delta": "0:00:00.231449", "end": "2022-07-17 16:17:32.059204", "msg": "", "rc": 0, "start": "2022-07-17 16:17:31.827755", "stderr": "", "stderr_lines": [], "stdout": "-----BEGIN CERTIFICATE-----\nMIIC3zCCAoagAwIBAgIUTf2hOGN2dioJ+2g0K1pH3vUd5qEwCgYIKoZIzj0EAwIw\nWjELMAkGA1UEBhMCR0IxDzANBgNVBAgMBkxvbmRvbjEPMA0GA1UEBwwGTG9uZG9u\nMRAwDgYDVQQKDAdDYXJyaWVyMRcwFQYDVQQDDA5jYS5jYXJyaWVyLW5ldDAeFw0y\nMjA3MTcxNTIxMDBaFw0yMzA3MTcxNTI2MDBaMHkxCzAJBgNVBAYTAkdCMRswGQYD\nVQQHExI1MS41MC8tMC4xMy9Mb25kb24xEDAOBgNVBAoTB0NhcnJpZXIxHzANBgNV\nBAsTBmNsaWVudDAOBgNVBAsTB2NhcnJpZXIxGjAYBgNVBAMMEXVzZXIxQGNhcnJp\nZXItbmV0MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE2oNyjE5BN1aUAVlGCxuC\ndmW4uk/13W69Mllef8Ag41FtQ01vVaEsOpcdAsGkBkkNPk2U1AuY6B/iD6aI/K6W\nXqOCAQkwggEFMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8EAjAAMB0GA1UdDgQW\nBBTxrSmTgAhfZgj2LCZzrSGguR9nWDAfBgNVHSMEGDAWgBSq+K6AG/EnqA10qjBK\nytNg5XF/hTAkBgNVHREEHTAbghljYS10b29scy01OTVjNzdkNTliLWYyZm5mMH8G\nCCoDBAUGBwgBBHN7ImF0dHJzIjp7ImhmLkFmZmlsaWF0aW9uIjoiY2FycmllciIs\nImhmLkVucm9sbG1lbnRJRCI6InVzZXIxQGNhcnJpZXItbmV0IiwiaGYuUmV2b2tl\nciI6InRydWUiLCJoZi5UeXBlIjoiY2xpZW50In19MAoGCCqGSM49BAMCA0cAMEQC\nIDVvWfAEOp9MH9osFPYPlFW0CtTOKs63o5Us6A/DgbaQAiBjtKy4l2ML8Oxp3dqr\n2j0g0wWdbBUNVTQ9r2Cgqw3Y8Q==\n-----END CERTIFICATE-----", "stdout_lines": ["-----BEGIN CERTIFICATE-----", "MIIC3zCCAoagAwIBAgIUTf2hOGN2dioJ+2g0K1pH3vUd5qEwCgYIKoZIzj0EAwIw", "WjELMAkGA1UEBhMCR0IxDzANBgNVBAgMBkxvbmRvbjEPMA0GA1UEBwwGTG9uZG9u", "MRAwDgYDVQQKDAdDYXJyaWVyMRcwFQYDVQQDDA5jYS5jYXJyaWVyLW5ldDAeFw0y", "MjA3MTcxNTIxMDBaFw0yMzA3MTcxNTI2MDBaMHkxCzAJBgNVBAYTAkdCMRswGQYD", "VQQHExI1MS41MC8tMC4xMy9Mb25kb24xEDAOBgNVBAoTB0NhcnJpZXIxHzANBgNV", "BAsTBmNsaWVudDAOBgNVBAsTB2NhcnJpZXIxGjAYBgNVBAMMEXVzZXIxQGNhcnJp", "ZXItbmV0MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE2oNyjE5BN1aUAVlGCxuC", "dmW4uk/13W69Mllef8Ag41FtQ01vVaEsOpcdAsGkBkkNPk2U1AuY6B/iD6aI/K6W", "XqOCAQkwggEFMA4GA1UdDwEB/wQEAwIHgDAMBgNVHRMBAf8EAjAAMB0GA1UdDgQW", "BBTxrSmTgAhfZgj2LCZzrSGguR9nWDAfBgNVHSMEGDAWgBSq+K6AG/EnqA10qjBK", "ytNg5XF/hTAkBgNVHREEHTAbghljYS10b29scy01OTVjNzdkNTliLWYyZm5mMH8G", "CCoDBAUGBwgBBHN7ImF0dHJzIjp7ImhmLkFmZmlsaWF0aW9uIjoiY2FycmllciIs", "ImhmLkVucm9sbG1lbnRJRCI6InVzZXIxQGNhcnJpZXItbmV0IiwiaGYuUmV2b2tl", "ciI6InRydWUiLCJoZi5UeXBlIjoiY2xpZW50In19MAoGCCqGSM49BAMCA0cAMEQC", "IDVvWfAEOp9MH9osFPYPlFW0CtTOKs63o5Us6A/DgbaQAiBjtKy4l2ML8Oxp3dqr", "2j0g0wWdbBUNVTQ9r2Cgqw3Y8Q==", "-----END CERTIFICATE-----"]}

TASK [create/users : Copy user certificates for orgs] **************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/users/tasks/save_to_vault.yaml:19
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/users : Copy user certificates for orgs] **************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/users/tasks/save_to_vault.yaml:32
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Wait for users tls exists in vault.] *************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/ca-tools/peer/tasks/main.yaml:216

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Ensures dir exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
changed: [localhost] => {"attempts": 1, "changed": true, "cmd": "vault kv get -field=client.key secretv2/crypto/peerOrganizations/carrier-net/users/user1/tls\n", "delta": "0:00:00.208386", "end": "2022-07-17 16:17:33.450002", "msg": "", "rc": 0, "start": "2022-07-17 16:17:33.241616", "stderr": "", "stderr_lines": [], "stdout": "-----BEGIN PRIVATE KEY-----\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQguhUmuvUDTljwePw+\nhPUtkxvCQcukhLe8/JfuidbkuIihRANCAAQ5QX2OB2Jsj7azLmWfE4Q/fw5LBHjp\ndiMTqZL76cUa137Y9noZPV+yFJ9F3tzb9dYLA8hR1ECFoFC1pasRxmu0\n-----END PRIVATE KEY-----", "stdout_lines": ["-----BEGIN PRIVATE KEY-----", "MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQguhUmuvUDTljwePw+", "hPUtkxvCQcukhLe8/JfuidbkuIihRANCAAQ5QX2OB2Jsj7azLmWfE4Q/fw5LBHjp", "diMTqZL76cUa137Y9noZPV+yFJ9F3tzb9dYLA8hR1ECFoFC1pasRxmu0", "-----END PRIVATE KEY-----"]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Create configtx.yaml] ****************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:132

TASK [create/configtx : Create build directory if it does not exist] ***********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:18
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "./build", "size": 4096, "state": "directory", "uid": 0}

TASK [create/configtx : Remove old configtx file] ******************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:23
ok: [localhost] => {"changed": false, "path": "./build/configtx.yaml", "state": "absent"}

TASK [create/configtx : create configtx.yaml file] *****************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:31
changed: [localhost] => {"changed": true, "dest": "./build/configtx.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "size": 0, "state": "file", "uid": 0}

TASK [create/configtx : Copy custom files if present] **************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:38
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/configtx : Checking if custom init patch to configtx.yaml exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:44
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/configtx : Adding init patch to configtx.yaml] ********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:50
changed: [localhost] => {"changed": true, "msg": "Block inserted"}

TASK [create/configtx : Checking if custom init patch to configtx.yaml exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:63
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/configtx : Adding organization patch to configtx.yaml] ************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:69
changed: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.supplychain-net:7054', 'certificate': '/home/bevel/build/supplychain/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft'}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}}) => {"ansible_loop_var": "item", "changed": true, "item": {"ca_data": {"certificate": "/home/bevel/build/supplychain/server.crt", "url": "ca.supplychain-net:7054"}, "cloud_provider": "azure", "country": "UK", "external_url_suffix": "develop.local.com", "fabric_console": "enabled", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "supplychain", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net", "type": "ca"}, "consensus": {"name": "raft"}, "orderers": [{"consensus": "raft", "grpc": {"port": 7050}, "name": "orderer1", "orderer": null, "type": "orderer"}]}, "state": "London", "subject": "O=Orderer,L=51.50/-0.13/London,C=GB", "type": "orderer", "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "msg": "Block inserted"}
changed: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.manufacturer-net:7054', 'certificate': '/home/bevel/build/manufacturer/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net:7051', 'certificate': '/home/bevel/build/manufacturer/peer0.crt', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain1', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}}) => {"ansible_loop_var": "item", "changed": true, "item": {"ca_data": {"certificate": "/home/bevel/build/manufacturer/server.crt", "url": "ca.manufacturer-net:7054"}, "cloud_provider": "azure", "country": "CH", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "Zurich", "name": "manufacturer", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/manufacturer/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain1", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "enabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.manufacturer-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.manufacturer-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "Zurich", "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "msg": "Block inserted"}
changed: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': '/home/bevel/build/carrier/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net:7051', 'certificate': '/home/bevel/build/carrier/peer0.crt', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}}) => {"ansible_loop_var": "item", "changed": true, "item": {"ca_data": {"certificate": "/home/bevel/build/carrier/server.crt", "url": "ca.carrier-net:7054"}, "cloud_provider": "azure", "country": "GB", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "carrier", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/carrier/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "disabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.carrier-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.carrier-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "London", "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "msg": "Block inserted"}

TASK [create/configtx : Checking if custom init patch to configtx.yaml exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:84
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/configtx : Adding orderer patch to configtx.yaml] *****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:90
changed: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.supplychain-net:7054', 'certificate': '/home/bevel/build/supplychain/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft'}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}}) => {"ansible_loop_var": "item", "changed": true, "item": {"ca_data": {"certificate": "/home/bevel/build/supplychain/server.crt", "url": "ca.supplychain-net:7054"}, "cloud_provider": "azure", "country": "UK", "external_url_suffix": "develop.local.com", "fabric_console": "enabled", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "supplychain", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net", "type": "ca"}, "consensus": {"name": "raft"}, "orderers": [{"consensus": "raft", "grpc": {"port": 7050}, "name": "orderer1", "orderer": null, "type": "orderer"}]}, "state": "London", "subject": "O=Orderer,L=51.50/-0.13/London,C=GB", "type": "orderer", "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "msg": "Block inserted"}
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.manufacturer-net:7054', 'certificate': '/home/bevel/build/manufacturer/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net:7051', 'certificate': '/home/bevel/build/manufacturer/peer0.crt', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain1', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/manufacturer/server.crt", "url": "ca.manufacturer-net:7054"}, "cloud_provider": "azure", "country": "CH", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "Zurich", "name": "manufacturer", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/manufacturer/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain1", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "enabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.manufacturer-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.manufacturer-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "Zurich", "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': '/home/bevel/build/carrier/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net:7051', 'certificate': '/home/bevel/build/carrier/peer0.crt', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/carrier/server.crt", "url": "ca.carrier-net:7054"}, "cloud_provider": "azure", "country": "GB", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "carrier", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/carrier/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "disabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.carrier-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.carrier-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "London", "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}

TASK [create/configtx : Checking if custom init patch to configtx.yaml exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:106
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create/configtx : Adding profile patch to configtx.yaml] *****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:112
changed: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.supplychain-net:7054', 'certificate': '/home/bevel/build/supplychain/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft'}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}}) => {"ansible_loop_var": "item", "changed": true, "item": {"ca_data": {"certificate": "/home/bevel/build/supplychain/server.crt", "url": "ca.supplychain-net:7054"}, "cloud_provider": "azure", "country": "UK", "external_url_suffix": "develop.local.com", "fabric_console": "enabled", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "supplychain", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net", "type": "ca"}, "consensus": {"name": "raft"}, "orderers": [{"consensus": "raft", "grpc": {"port": 7050}, "name": "orderer1", "orderer": null, "type": "orderer"}]}, "state": "London", "subject": "O=Orderer,L=51.50/-0.13/London,C=GB", "type": "orderer", "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "msg": "Block inserted"}
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.manufacturer-net:7054', 'certificate': '/home/bevel/build/manufacturer/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net:7051', 'certificate': '/home/bevel/build/manufacturer/peer0.crt', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain1', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/manufacturer/server.crt", "url": "ca.manufacturer-net:7054"}, "cloud_provider": "azure", "country": "CH", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "Zurich", "name": "manufacturer", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/manufacturer/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain1", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "enabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.manufacturer-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.manufacturer-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "Zurich", "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': '/home/bevel/build/carrier/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net:7051', 'certificate': '/home/bevel/build/carrier/peer0.crt', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/carrier/server.crt", "url": "ca.carrier-net:7054"}, "cloud_provider": "azure", "country": "GB", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "carrier", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/carrier/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "disabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.carrier-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.carrier-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "London", "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}

TASK [create/configtx : Display configtx file contents] ************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/configtx/tasks/main.yaml:128
ok: [localhost] => {
    "msg": "The configtx file is: #\n---\nCapabilities:\n  Channel: &ChannelCapabilities\n    V2_0: true\n  Orderer: &OrdererCapabilities\n    V2_0: true\n  Application: &ApplicationCapabilities\n    V2_0: true\n\nApplication: &ApplicationDefaults\n  Organizations:\n  Policies: &ApplicationDefaultPolicies\n    LifecycleEndorsement:\n        Type: ImplicitMeta\n        Rule: \"MAJORITY Endorsement\"\n    Endorsement:\n        Type: ImplicitMeta\n        Rule: \"MAJORITY Endorsement\"\n    Readers:\n        Type: ImplicitMeta\n        Rule: \"ANY Readers\"\n    Writers:\n        Type: ImplicitMeta\n        Rule: \"ANY Writers\"\n    Admins:\n        Type: ImplicitMeta\n        Rule: \"MAJORITY Admins\"\n  Capabilities:\n    <<: *ApplicationCapabilities\n\nChannel: &ChannelDefaults\n  Policies:\n    Readers:\n      Type: ImplicitMeta\n      Rule: \"ANY Readers\"\n    Writers:\n      Type: ImplicitMeta\n      Rule: \"ANY Writers\"\n    Admins:\n      Type: ImplicitMeta\n      Rule: \"MAJORITY Admins\"\n  Capabilities:\n    <<: *ChannelCapabilities\n\nOrganizations:\n#\n  - &supplychainOrg\n    Name: supplychainMSP\n    ID: supplychainMSP\n    MSPDir: ./crypto-config/ordererOrganizations/supplychain-net/msp\n    Policies:\n      Readers:\n        Type: Signature\n        Rule: \"OR('supplychainMSP.member')\"\n      Writers:\n        Type: Signature\n        Rule: \"OR('supplychainMSP.member')\"\n      Admins:\n        Type: Signature\n        Rule: \"OR('supplychainMSP.admin')\"\n      Endorsement:\n        Type: Signature\n        Rule: \"OR('supplychainMSP.member')\"\n    \n#\n  - &manufacturerOrg\n    Name: manufacturerMSP\n    ID: manufacturerMSP\n    MSPDir: ./crypto-config/peerOrganizations/manufacturer-net/msp\n    Policies:\n      Readers:\n        Type: Signature\n        Rule: \"OR('manufacturerMSP.member')\"\n      Writers:\n        Type: Signature\n        Rule: \"OR('manufacturerMSP.member')\"\n      Admins:\n        Type: Signature\n        Rule: \"OR('manufacturerMSP.admin')\"\n      Endorsement:\n        Type: Signature\n        Rule: \"OR('manufacturerMSP.member')\"\n          \n    AnchorPeers:\n      # AnchorPeers defines the location of peers which can be used\n      # for cross org gossip communication.  Note, this value is only\n      # encoded in the genesis block in the Application section context\n      - Host: peer0.manufacturer-net\n        Port: 7051\n#\n  - &carrierOrg\n    Name: carrierMSP\n    ID: carrierMSP\n    MSPDir: ./crypto-config/peerOrganizations/carrier-net/msp\n    Policies:\n      Readers:\n        Type: Signature\n        Rule: \"OR('carrierMSP.member')\"\n      Writers:\n        Type: Signature\n        Rule: \"OR('carrierMSP.member')\"\n      Admins:\n        Type: Signature\n        Rule: \"OR('carrierMSP.admin')\"\n      Endorsement:\n        Type: Signature\n        Rule: \"OR('carrierMSP.member')\"\n          \n    AnchorPeers:\n      # AnchorPeers defines the location of peers which can be used\n      # for cross org gossip communication.  Note, this value is only\n      # encoded in the genesis block in the Application section context\n      - Host: peer0.carrier-net\n        Port: 7051\n#\nOrderer: &OrdererDefaults\n  OrdererType: etcdraft\n  Addresses:\n    - orderer1.supplychain-net:7050\n\n  BatchTimeout: 2s\n  BatchSize:\n    MaxMessageCount: 10\n    AbsoluteMaxBytes: 98 MB\n    PreferredMaxBytes: 1024 KB\n  EtcdRaft:\n    Consenters:\n      - Host: orderer1.supplychain-net\n        Port: 7050\n        ClientTLSCert: ./crypto-config/ordererOrganizations/supplychain-net/orderers/orderer1.supplychain-net/tls/server.crt\n        ServerTLSCert: ./crypto-config/ordererOrganizations/supplychain-net/orderers/orderer1.supplychain-net/tls/server.crt\n  Organizations:\n  Policies:\n    Readers:\n      Type: ImplicitMeta\n      Rule: \"ANY Readers\"\n    Writers:\n      Type: ImplicitMeta\n      Rule: \"ANY Writers\"\n    Admins:\n      Type: ImplicitMeta\n      Rule: \"MAJORITY Admins\"\n    BlockValidation:\n      Type: ImplicitMeta\n      Rule: \"ANY Writers\"\n  Capabilities:\n    <<: *OrdererCapabilities\n#\nProfiles:\n  OrdererGenesis:\n    <<: *ChannelDefaults\n    Orderer:\n      <<: *OrdererDefaults\n      OrdererType: etcdraft\n      EtcdRaft:\n        Consenters:\n        - Host: orderer1.supplychain-net\n          Port: 7050\n          ClientTLSCert: ./crypto-config/ordererOrganizations/supplychain-net/orderers/orderer1.supplychain-net/tls/server.crt\n          ServerTLSCert: ./crypto-config/ordererOrganizations/supplychain-net/orderers/orderer1.supplychain-net/tls/server.crt\n      Organizations:\n        - *supplychainOrg\n    Consortiums:\n      SupplyChainConsortium:\n        Organizations:\n          \n          - *manufacturerOrg\n          \n          - *carrierOrg\n          \n  AllChannel:\n    <<: *ChannelDefaults\n    Consortium: SupplyChainConsortium\n    Application:\n      <<: *ApplicationDefaults\n      Organizations:\n        - *carrierOrg\n        - *manufacturerOrg\n#"
}
META: role_complete for localhost

TASK [Create channel artifacts for all channels] *******************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:139

TASK [create/channel_artifacts : Create build directory if it does not exist] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:11
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "./build", "size": 4096, "state": "directory", "uid": 0}

TASK [create/channel_artifacts : check configtxgen] ****************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:16
ok: [localhost] => {"changed": false, "stat": {"exists": false}}

TASK [create/channel_artifacts : register temporary directory] *****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:21
changed: [localhost] => {"changed": true, "gid": 0, "group": "root", "mode": "0700", "owner": "root", "path": "/tmp/ansible.6ymd6yr2", "size": 4096, "state": "directory", "uid": 0}

TASK [create/channel_artifacts : Check if msp admincerts already created] ******
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:29
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'type': 'creator', 'org_status': 'new', 'peers': [{'peer': None, 'name': 'peer0', 'gossipAddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net:7051'}], 'ordererAddress': 'orderer1.supplychain-net:7050'})  => {"ansible_loop_var": "organization", "changed": false, "organization": {"name": "carrier", "ordererAddress": "orderer1.supplychain-net:7050", "org_status": "new", "organization": null, "peers": [{"gossipAddress": "peer0.carrier-net:7051", "name": "peer0", "peer": null, "peerAddress": "peer0.carrier-net:7051"}], "type": "creator"}, "skip_reason": "Conditional result was False"}
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'type': 'joiner', 'org_status': 'new', 'peers': [{'peer': None, 'name': 'peer0', 'gossipAddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net:7051'}], 'ordererAddress': 'orderer1.supplychain-net:7050'})  => {"ansible_loop_var": "organization", "changed": false, "organization": {"name": "manufacturer", "ordererAddress": "orderer1.supplychain-net:7050", "org_status": "new", "organization": null, "peers": [{"gossipAddress": "peer0.manufacturer-net:7051", "name": "peer0", "peer": null, "peerAddress": "peer0.manufacturer-net:7051"}], "type": "joiner"}, "skip_reason": "Conditional result was False"}

TASK [create/channel_artifacts : Check if msp cacerts already created] *********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:49
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'type': 'creator', 'org_status': 'new', 'peers': [{'peer': None, 'name': 'peer0', 'gossipAddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net:7051'}], 'ordererAddress': 'orderer1.supplychain-net:7050'})  => {"ansible_loop_var": "organization", "changed": false, "organization": {"name": "carrier", "ordererAddress": "orderer1.supplychain-net:7050", "org_status": "new", "organization": null, "peers": [{"gossipAddress": "peer0.carrier-net:7051", "name": "peer0", "peer": null, "peerAddress": "peer0.carrier-net:7051"}], "type": "creator"}, "skip_reason": "Conditional result was False"}
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'type': 'joiner', 'org_status': 'new', 'peers': [{'peer': None, 'name': 'peer0', 'gossipAddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net:7051'}], 'ordererAddress': 'orderer1.supplychain-net:7050'})  => {"ansible_loop_var": "organization", "changed": false, "organization": {"name": "manufacturer", "ordererAddress": "orderer1.supplychain-net:7050", "org_status": "new", "organization": null, "peers": [{"gossipAddress": "peer0.manufacturer-net:7051", "name": "peer0", "peer": null, "peerAddress": "peer0.manufacturer-net:7051"}], "type": "joiner"}, "skip_reason": "Conditional result was False"}

TASK [create/channel_artifacts : Check if msp tlscacerts already created] ******
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:68
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'type': 'creator', 'org_status': 'new', 'peers': [{'peer': None, 'name': 'peer0', 'gossipAddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net:7051'}], 'ordererAddress': 'orderer1.supplychain-net:7050'})  => {"ansible_loop_var": "organization", "changed": false, "organization": {"name": "carrier", "ordererAddress": "orderer1.supplychain-net:7050", "org_status": "new", "organization": null, "peers": [{"gossipAddress": "peer0.carrier-net:7051", "name": "peer0", "peer": null, "peerAddress": "peer0.carrier-net:7051"}], "type": "creator"}, "skip_reason": "Conditional result was False"}
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'type': 'joiner', 'org_status': 'new', 'peers': [{'peer': None, 'name': 'peer0', 'gossipAddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net:7051'}], 'ordererAddress': 'orderer1.supplychain-net:7050'})  => {"ansible_loop_var": "organization", "changed": false, "organization": {"name": "manufacturer", "ordererAddress": "orderer1.supplychain-net:7050", "org_status": "new", "organization": null, "peers": [{"gossipAddress": "peer0.manufacturer-net:7051", "name": "peer0", "peer": null, "peerAddress": "peer0.manufacturer-net:7051"}], "type": "joiner"}, "skip_reason": "Conditional result was False"}

TASK [create/channel_artifacts : Getting the configtxgen binary tar] ***********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:88
changed: [localhost] => {"changed": true, "checksum_dest": null, "checksum_src": "aba2f068f6770547d3ec4790c50534609d1757e6", "dest": "/tmp/ansible.6ymd6yr2/hyperledger-fabric-linux-amd64-2.2.2.tar.gz", "elapsed": 31, "gid": 0, "group": "root", "md5sum": "cf25f7fb2793dfbb3f8b00e2f5957bd7", "mode": "0644", "msg": "OK (76439607 bytes)", "owner": "root", "size": 76439607, "src": "/root/.ansible/tmp/ansible-tmp-1658074661.0373285-38242-276126842222762/tmpwz0n111y", "state": "file", "status_code": 200, "uid": 0, "url": "https://github.com/hyperledger/fabric/releases/download/v2.2.2/hyperledger-fabric-linux-amd64-2.2.2.tar.gz"}

TASK [create/channel_artifacts : Unziping the downloaded file] *****************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:97
changed: [localhost] => {"changed": true, "dest": "/tmp/ansible.6ymd6yr2", "extract_results": {"cmd": ["/usr/bin/tar", "--extract", "-C", "/tmp/ansible.6ymd6yr2", "-z", "-f", "/root/.ansible/tmp/ansible-tmp-1658074693.9782538-38269-167660607626039/source"], "err": "", "out": "", "rc": 0}, "gid": 0, "group": "root", "handler": "TgzArchive", "mode": "0700", "owner": "root", "size": 4096, "src": "/root/.ansible/tmp/ansible-tmp-1658074693.9782538-38269-167660607626039/source", "state": "directory", "uid": 0}

TASK [create/channel_artifacts : Moving the configtxgen from the extracted folder and place in it path] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:105
changed: [localhost] => {"changed": true, "checksum": "c3da47a6799257a2f8953bada06beb92128817ae", "dest": "./build/configtxgen", "gid": 0, "group": "root", "md5sum": "2c183cf31fc27df7d57bb56ddc8467ed", "mode": "0755", "owner": "root", "size": 20547152, "src": "/root/.ansible/tmp/ansible-tmp-1658074700.6235447-38319-109274567971049/source", "state": "file", "uid": 0}

TASK [create/channel_artifacts : Creating channel-artifacts folder] ************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:114
changed: [localhost] => {"changed": true, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "./build/channel-artifacts", "size": 4096, "state": "directory", "uid": 0}

TASK [create/channel_artifacts : remove old channel block] *********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:119
ok: [localhost] => {"changed": false, "path": "./build/channel-artifacts/allchannel.tx", "state": "absent"}

TASK [create/channel_artifacts : Creating channels] ****************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:127
changed: [localhost] => {"changed": true, "cmd": "cd ./build\n./configtxgen -profile AllChannel -outputCreateChannelTx ./channel-artifacts/allchannel.tx -channelID allchannel\ncat ./channel-artifacts/allchannel.tx | base64 > ./channel-artifacts/allchannel.tx.base64\n", "delta": "0:00:00.069923", "end": "2022-07-17 16:18:22.719433", "msg": "", "rc": 0, "start": "2022-07-17 16:18:22.649510", "stderr": "\u001b[34m2022-07-17 16:18:22.687 UTC [common.tools.configtxgen] main -> INFO 001\u001b[0m Loading configuration\n\u001b[34m2022-07-17 16:18:22.712 UTC [common.tools.configtxgen.localconfig] Load -> INFO 002\u001b[0m Loaded configuration: /home/bevel/platforms/hyperledger-fabric/configuration/build/configtx.yaml\n\u001b[34m2022-07-17 16:18:22.712 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 003\u001b[0m Generating new channel configtx\n\u001b[34m2022-07-17 16:18:22.714 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 004\u001b[0m Writing new channel tx", "stderr_lines": ["\u001b[34m2022-07-17 16:18:22.687 UTC [common.tools.configtxgen] main -> INFO 001\u001b[0m Loading configuration", "\u001b[34m2022-07-17 16:18:22.712 UTC [common.tools.configtxgen.localconfig] Load -> INFO 002\u001b[0m Loaded configuration: /home/bevel/platforms/hyperledger-fabric/configuration/build/configtx.yaml", "\u001b[34m2022-07-17 16:18:22.712 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 003\u001b[0m Generating new channel configtx", "\u001b[34m2022-07-17 16:18:22.714 UTC [common.tools.configtxgen] doOutputChannelCreateTx -> INFO 004\u001b[0m Writing new channel tx"], "stdout": "", "stdout_lines": []}

TASK [create/channel_artifacts : Creating Anchor artifacts] ********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:138
changed: [localhost] => (item={'organization': None, 'name': 'carrier', 'type': 'creator', 'org_status': 'new', 'peers': [{'peer': None, 'name': 'peer0', 'gossipAddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net:7051'}], 'ordererAddress': 'orderer1.supplychain-net:7050'}) => {"ansible_loop_var": "participant", "changed": true, "cmd": "cd ./build\n./configtxgen -profile AllChannel -outputAnchorPeersUpdate ./channel-artifacts/allchannelcarrierMSPAnchor.tx -channelID allchannel -asOrg carrierMSP -configPath ./\ncat ./channel-artifacts/allchannelcarrierMSPAnchor.tx | base64 > ./channel-artifacts/allchannelcarrierMSPAnchor.tx.base64\n", "delta": "0:00:00.097562", "end": "2022-07-17 16:18:23.220563", "msg": "", "participant": {"name": "carrier", "ordererAddress": "orderer1.supplychain-net:7050", "org_status": "new", "organization": null, "peers": [{"gossipAddress": "peer0.carrier-net:7051", "name": "peer0", "peer": null, "peerAddress": "peer0.carrier-net:7051"}], "type": "creator"}, "rc": 0, "start": "2022-07-17 16:18:23.123001", "stderr": "\u001b[34m2022-07-17 16:18:23.166 UTC [common.tools.configtxgen] main -> INFO 001\u001b[0m Loading configuration\n\u001b[34m2022-07-17 16:18:23.213 UTC [common.tools.configtxgen.localconfig] Load -> INFO 002\u001b[0m Loaded configuration: /home/bevel/platforms/hyperledger-fabric/configuration/build/configtx.yaml\n\u001b[34m2022-07-17 16:18:23.213 UTC [common.tools.configtxgen] doOutputAnchorPeersUpdate -> INFO 003\u001b[0m Generating anchor peer update\n\u001b[34m2022-07-17 16:18:23.215 UTC [common.tools.configtxgen] doOutputAnchorPeersUpdate -> INFO 004\u001b[0m Writing anchor peer update", "stderr_lines": ["\u001b[34m2022-07-17 16:18:23.166 UTC [common.tools.configtxgen] main -> INFO 001\u001b[0m Loading configuration", "\u001b[34m2022-07-17 16:18:23.213 UTC [common.tools.configtxgen.localconfig] Load -> INFO 002\u001b[0m Loaded configuration: /home/bevel/platforms/hyperledger-fabric/configuration/build/configtx.yaml", "\u001b[34m2022-07-17 16:18:23.213 UTC [common.tools.configtxgen] doOutputAnchorPeersUpdate -> INFO 003\u001b[0m Generating anchor peer update", "\u001b[34m2022-07-17 16:18:23.215 UTC [common.tools.configtxgen] doOutputAnchorPeersUpdate -> INFO 004\u001b[0m Writing anchor peer update"], "stdout": "", "stdout_lines": []}
changed: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'type': 'joiner', 'org_status': 'new', 'peers': [{'peer': None, 'name': 'peer0', 'gossipAddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net:7051'}], 'ordererAddress': 'orderer1.supplychain-net:7050'}) => {"ansible_loop_var": "participant", "changed": true, "cmd": "cd ./build\n./configtxgen -profile AllChannel -outputAnchorPeersUpdate ./channel-artifacts/allchannelmanufacturerMSPAnchor.tx -channelID allchannel -asOrg manufacturerMSP -configPath ./\ncat ./channel-artifacts/allchannelmanufacturerMSPAnchor.tx | base64 > ./channel-artifacts/allchannelmanufacturerMSPAnchor.tx.base64\n", "delta": "0:00:00.088757", "end": "2022-07-17 16:18:23.606592", "msg": "", "participant": {"name": "manufacturer", "ordererAddress": "orderer1.supplychain-net:7050", "org_status": "new", "organization": null, "peers": [{"gossipAddress": "peer0.manufacturer-net:7051", "name": "peer0", "peer": null, "peerAddress": "peer0.manufacturer-net:7051"}], "type": "joiner"}, "rc": 0, "start": "2022-07-17 16:18:23.517835", "stderr": "\u001b[34m2022-07-17 16:18:23.565 UTC [common.tools.configtxgen] main -> INFO 001\u001b[0m Loading configuration\n\u001b[34m2022-07-17 16:18:23.600 UTC [common.tools.configtxgen.localconfig] Load -> INFO 002\u001b[0m Loaded configuration: /home/bevel/platforms/hyperledger-fabric/configuration/build/configtx.yaml\n\u001b[34m2022-07-17 16:18:23.600 UTC [common.tools.configtxgen] doOutputAnchorPeersUpdate -> INFO 003\u001b[0m Generating anchor peer update\n\u001b[34m2022-07-17 16:18:23.602 UTC [common.tools.configtxgen] doOutputAnchorPeersUpdate -> INFO 004\u001b[0m Writing anchor peer update", "stderr_lines": ["\u001b[34m2022-07-17 16:18:23.565 UTC [common.tools.configtxgen] main -> INFO 001\u001b[0m Loading configuration", "\u001b[34m2022-07-17 16:18:23.600 UTC [common.tools.configtxgen.localconfig] Load -> INFO 002\u001b[0m Loaded configuration: /home/bevel/platforms/hyperledger-fabric/configuration/build/configtx.yaml", "\u001b[34m2022-07-17 16:18:23.600 UTC [common.tools.configtxgen] doOutputAnchorPeersUpdate -> INFO 003\u001b[0m Generating anchor peer update", "\u001b[34m2022-07-17 16:18:23.602 UTC [common.tools.configtxgen] doOutputAnchorPeersUpdate -> INFO 004\u001b[0m Writing anchor peer update"], "stdout": "", "stdout_lines": []}

TASK [create/channel_artifacts : Creating JSON configuration for new organization] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channel_artifacts/tasks/main.yaml:151
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'type': 'creator', 'org_status': 'new', 'peers': [{'peer': None, 'name': 'peer0', 'gossipAddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net:7051'}], 'ordererAddress': 'orderer1.supplychain-net:7050'})  => {"ansible_loop_var": "participant", "changed": false, "participant": {"name": "carrier", "ordererAddress": "orderer1.supplychain-net:7050", "org_status": "new", "organization": null, "peers": [{"gossipAddress": "peer0.carrier-net:7051", "name": "peer0", "peer": null, "peerAddress": "peer0.carrier-net:7051"}], "type": "creator"}, "skip_reason": "Conditional result was False"}
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'type': 'joiner', 'org_status': 'new', 'peers': [{'peer': None, 'name': 'peer0', 'gossipAddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net:7051'}], 'ordererAddress': 'orderer1.supplychain-net:7050'})  => {"ansible_loop_var": "participant", "changed": false, "participant": {"name": "manufacturer", "ordererAddress": "orderer1.supplychain-net:7050", "org_status": "new", "organization": null, "peers": [{"gossipAddress": "peer0.manufacturer-net:7051", "name": "peer0", "peer": null, "peerAddress": "peer0.manufacturer-net:7051"}], "type": "joiner"}, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Create genesis block] ****************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:149

TASK [create/genesis : Remove old genesis block] *******************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/genesis/tasks/main.yaml:8
ok: [localhost] => {"changed": false, "path": "./build/channel-artifacts/genesis.block", "state": "absent"}

TASK [create/genesis : Create genesis block] ***********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/genesis/tasks/main.yaml:14
changed: [localhost] => {"changed": true, "cmd": "cd ./build\n./configtxgen -profile OrdererGenesis -channelID syschannel  -outputBlock ./channel-artifacts/genesis.block\ncat ./channel-artifacts/genesis.block | base64 > ./channel-artifacts/genesis.block.base64\n", "delta": "0:00:00.102428", "end": "2022-07-17 16:18:25.039688", "msg": "", "rc": 0, "start": "2022-07-17 16:18:24.937260", "stderr": "\u001b[34m2022-07-17 16:18:24.983 UTC [common.tools.configtxgen] main -> INFO 001\u001b[0m Loading configuration\n\u001b[34m2022-07-17 16:18:25.022 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002\u001b[0m orderer type: etcdraft\n\u001b[34m2022-07-17 16:18:25.023 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003\u001b[0m Orderer.EtcdRaft.Options unset, setting to tick_interval:\"500ms\" election_tick:10 heartbeat_tick:1 max_inflight_blocks:5 snapshot_interval_size:16777216 \n\u001b[34m2022-07-17 16:18:25.023 UTC [common.tools.configtxgen.localconfig] Load -> INFO 004\u001b[0m Loaded configuration: /home/bevel/platforms/hyperledger-fabric/configuration/build/configtx.yaml\n\u001b[34m2022-07-17 16:18:25.028 UTC [common.tools.configtxgen] doOutputBlock -> INFO 005\u001b[0m Generating genesis block\n\u001b[34m2022-07-17 16:18:25.034 UTC [common.tools.configtxgen] doOutputBlock -> INFO 006\u001b[0m Writing genesis block", "stderr_lines": ["\u001b[34m2022-07-17 16:18:24.983 UTC [common.tools.configtxgen] main -> INFO 001\u001b[0m Loading configuration", "\u001b[34m2022-07-17 16:18:25.022 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 002\u001b[0m orderer type: etcdraft", "\u001b[34m2022-07-17 16:18:25.023 UTC [common.tools.configtxgen.localconfig] completeInitialization -> INFO 003\u001b[0m Orderer.EtcdRaft.Options unset, setting to tick_interval:\"500ms\" election_tick:10 heartbeat_tick:1 max_inflight_blocks:5 snapshot_interval_size:16777216 ", "\u001b[34m2022-07-17 16:18:25.023 UTC [common.tools.configtxgen.localconfig] Load -> INFO 004\u001b[0m Loaded configuration: /home/bevel/platforms/hyperledger-fabric/configuration/build/configtx.yaml", "\u001b[34m2022-07-17 16:18:25.028 UTC [common.tools.configtxgen] doOutputBlock -> INFO 005\u001b[0m Generating genesis block", "\u001b[34m2022-07-17 16:18:25.034 UTC [common.tools.configtxgen] doOutputBlock -> INFO 006\u001b[0m Writing genesis block"], "stdout": "", "stdout_lines": []}

TASK [create/genesis : Write genesis block to Vault] ***************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/genesis/tasks/main.yaml:27
changed: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.supplychain-net:7054', 'certificate': '/home/bevel/build/supplychain/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft'}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}}) => {"ansible_loop_var": "org", "changed": true, "cmd": "vault kv put secretv2/crypto/ordererOrganizations/supplychain-net devGenesisBlock=@./build/channel-artifacts/genesis.block.base64\n", "delta": "0:00:00.251447", "end": "2022-07-17 16:18:25.795461", "msg": "", "org": {"ca_data": {"certificate": "/home/bevel/build/supplychain/server.crt", "url": "ca.supplychain-net:7054"}, "cloud_provider": "azure", "country": "UK", "external_url_suffix": "develop.local.com", "fabric_console": "enabled", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "supplychain", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net", "type": "ca"}, "consensus": {"name": "raft"}, "orderers": [{"consensus": "raft", "grpc": {"port": 7050}, "name": "orderer1", "orderer": null, "type": "orderer"}]}, "state": "London", "subject": "O=Orderer,L=51.50/-0.13/London,C=GB", "type": "orderer", "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "rc": 0, "start": "2022-07-17 16:18:25.544014", "stderr": "", "stderr_lines": [], "stdout": "Key                Value\n---                -----\ncreated_time       2022-07-17T16:18:25.781688464Z\ncustom_metadata    <nil>\ndeletion_time      n/a\ndestroyed          false\nversion            2", "stdout_lines": ["Key                Value", "---                -----", "created_time       2022-07-17T16:18:25.781688464Z", "custom_metadata    <nil>", "deletion_time      n/a", "destroyed          false", "version            2"]}
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.manufacturer-net:7054', 'certificate': '/home/bevel/build/manufacturer/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net:7051', 'certificate': '/home/bevel/build/manufacturer/peer0.crt', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain1', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "org", "changed": false, "org": {"ca_data": {"certificate": "/home/bevel/build/manufacturer/server.crt", "url": "ca.manufacturer-net:7054"}, "cloud_provider": "azure", "country": "CH", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "Zurich", "name": "manufacturer", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/manufacturer/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain1", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "enabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.manufacturer-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.manufacturer-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "Zurich", "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': '/home/bevel/build/carrier/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net:7051', 'certificate': '/home/bevel/build/carrier/peer0.crt', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "org", "changed": false, "org": {"ca_data": {"certificate": "/home/bevel/build/carrier/server.crt", "url": "ca.carrier-net:7054"}, "cloud_provider": "azure", "country": "GB", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "carrier", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/carrier/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "disabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.carrier-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.carrier-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "London", "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Create all orderers] *****************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:158
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.manufacturer-net:7054', 'certificate': '/home/bevel/build/manufacturer/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net:7051', 'certificate': '/home/bevel/build/manufacturer/peer0.crt', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain1', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/manufacturer/server.crt", "url": "ca.manufacturer-net:7054"}, "cloud_provider": "azure", "country": "CH", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "Zurich", "name": "manufacturer", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/manufacturer/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain1", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "enabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.manufacturer-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.manufacturer-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "Zurich", "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': '/home/bevel/build/carrier/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net:7051', 'certificate': '/home/bevel/build/carrier/peer0.crt', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/carrier/server.crt", "url": "ca.carrier-net:7054"}, "cloud_provider": "azure", "country": "GB", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "carrier", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/carrier/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "disabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.carrier-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.carrier-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "London", "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}

TASK [create kafka clusters] ***************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/orderers/tasks/main.yaml:15
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [create orderers] *********************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/orderers/tasks/main.yaml:31

TASK [helm_component : Ensures /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/orderer dir exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:14
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/orderer", "size": 4096, "state": "directory", "uid": 0}

TASK [helm_component : create value file for orderer1-supplychain] *************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:23
changed: [localhost] => {"changed": true, "checksum": "691848759b6a51500bfdf7cbe7a6d3c5a81ff71a", "dest": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/orderer/orderer1-supplychain.yaml", "gid": 0, "group": "root", "md5sum": "5f0e6df8904dd8b3e07fcdd84c9dc16f", "mode": "0644", "owner": "root", "size": 19173, "src": "/root/.ansible/tmp/ansible-tmp-1658074706.900973-38650-161241209803690/source", "state": "file", "uid": 0}

TASK [Helm lint] ***************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:32

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
ok: [localhost] => {"changed": false, "stat": {"atime": 1658074707.5329351, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 40, "charset": "unknown", "checksum": "691848759b6a51500bfdf7cbe7a6d3c5a81ff71a", "ctime": 1658074707.5329351, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 3627590, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658074707.2329364, "nlink": 1, "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/supplychain/orderer/orderer1-supplychain.yaml", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 19173, "uid": 0, "version": "2212828961", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [Check or create test directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:22

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"atime": 1658074423.378228, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "ctime": 1658074633.8092628, "dev": 64513, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626754, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658074633.8092628, "nlink": 2, "path": "./build/test", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "version": "4197237393", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:31
ok: [localhost] => {"ansible_facts": {"apiVersion": "helm.fluxcd.io/v1", "kind": "HelmRelease", "metadata": {"annotations": {"fluxcd.io/automated": "false"}, "name": "supplychain-orderer1", "namespace": "supplychain-net"}, "spec": {"chart": {"git": "ssh://git@github.com/adityajoshi12/bevel.git", "path": "platforms/hyperledger-fabric/charts/orderernode", "ref": "test"}, "releaseName": "supplychain-orderer1", "values": {"annotations": {"deployment": null, "pvc": null, "service": null}, "config": {"pod": {"resources": {"limits": {"cpu": 1, "memory": "512M"}, "requests": {"cpu": 0.5, "memory": "512M"}}}}, "consensus": {"name": "raft"}, "genesis": "CiIaILPWWdsB1AwubsWKICurLeESa4sTwf6UC3aAFtxlgnxdEqJeCp9eCpxeCngKWggBEAEaBgjR\n7NCWBiIKc3lzY2hhbm5lbCpAMTdlM2U5NmVjMmJlNzI1ZjM4YzFhOTFkY2RkMTdiZThlYzk2NTBi\nZTM0OWY0ZjAxY2Y4OWE3OGVkNDY1YzU2ZBIaEhgDpdyOQw94bCTmgbbW8nskvAR+DMlBmEUSn10K\nnF0SmV0SlSsKB09yZGVyZXISiSsS1hYKDnN1cHBseWNoYWluTVNQEsMWGs8UCgNNU1ASxxQSvBQS\nuRQKDnN1cHBseWNoYWluTVNQEvUFLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNBVEND\nQWFhZ0F3SUJBZ0lVT0xkRHNPZC9LT252N3BsYlFMbWZTRDdtYnU4d0NnWUlLb1pJemowRUF3SXcK\nWGpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dU\nRzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUnN3R1FZRFZRUUREQkpqWVM1emRYQndi\nSGxqYUdGcGJpMXVaWFF3CkhoY05Nakl3TnpFM01UVXhNVFE0V2hjTk1qVXdOVEEyTVRVeE1UUTRX\nakJlTVFzd0NRWURWUVFHRXdKSFFqRVAKTUEwR0ExVUVDQXdHVEc5dVpHOXVNUTh3RFFZRFZRUUhE\nQVpNYjI1a2IyNHhFREFPQmdOVkJBb01CMDl5WkdWeQpaWEl4R3pBWkJnTlZCQU1NRW1OaExuTjFj\nSEJzZVdOb1lXbHVMVzVsZERCWk1CTUdCeXFHU000OUFnRUdDQ3FHClNNNDlBd0VIQTBJQUJBRHVy\nTHVZN1ZmSWJ6S25wWFdDTkRhSGpaZWowdHFnampJN3RXeDN0Z1RzTVNCV01BOVYKWkNHdEcvNytE\nbjQ4bE1haXMxcC85Ly81MGlKSmNLcmM0TVdqUWpCQU1BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpE\nZ1lEVlIwUEFRSC9CQVFEQWdHbU1CMEdBMVVkRGdRV0JCVFhReGJGeVFZU2lkWjVTZFpQZlg2aEFj\ndFR0VEFLCkJnZ3Foa2pPUFFRREFnTkpBREJHQWlFQWxXRVZxeUU5WW5zTmpFOE9HUlNJY2MzZGt4\neGNTUnduY01qOTg5U2gKUU9nQ0lRQ0s2aEJoZVg3WDJRT3U5eUxiRkIxb2pQZjFodHFiKytXWExG\nQzhOTmpBSkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiKmCC0tLS0tQkVHSU4gQ0VSVElG\nSUNBVEUtLS0tLQpNSUlDNGpDQ0FvaWdBd0lCQWdJVUVEMVhvMUVETkdwT0sxUjJOZTMxUDBPZlNt\nd3dDZ1lJS29aSXpqMEVBd0l3ClhqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJt\nUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dR\nWURWUVFEREJKallTNXpkWEJ3YkhsamFHRnBiaTF1WlhRdwpIaGNOTWpJd056RTNNVFV4TkRBd1do\nY05Nak13TnpFM01UVXhPVEF3V2pCc01Rc3dDUVlEVlFRR0V3SkhRakViCk1Ca0dBMVVFQnhNU05U\nRXVOVEF2TFRBdU1UTXZURzl1Wkc5dU1SQXdEZ1lEVlFRS0V3ZFBjbVJsY21WeU1RNHcKREFZRFZR\nUUxFd1ZoWkcxcGJqRWVNQndHQTFVRUF3d1ZRV1J0YVc1QWMzVndjR3g1WTJoaGFXNHRibVYwTUZr\ndwpFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRTdsZXl0dUlpb1lWVnl4Z2NTNjJVeTNO\nb1ZwdlBGSDRsClRUdEFLaU9wck1rYzcvNjZwb1d5Z0hwMzU4b2RuL2FNa3NpNDBsYnprbEFwL1Nx\nbVMrd0xqYU9DQVJRd2dnRVEKTUE0R0ExVWREd0VCL3dRRUF3SUhnREFNQmdOVkhSTUJBZjhFQWpB\nQU1CMEdBMVVkRGdRV0JCUldTem5qRXJsNQpwS0xidGFqZy9KVzExUFBhSnpBZkJnTlZIU01FR0RB\nV2dCVFhReGJGeVFZU2lkWjVTZFpQZlg2aEFjdFR0VEFrCkJnTlZIUkVFSFRBYmdobGpZUzEwYjI5\nc2N5MDNaRFJrTnpZNVpHSmtMWFJqY1hFNU1JR0pCZ2dxQXdRRkJnY0kKQVFSOWV5SmhkSFJ5Y3lJ\nNmV5SmhZbUZqTG1sdWFYUWlPaUowY25WbElpd2lZV1J0YVc0aU9pSjBjblZsSWl3aQphR1l1UVda\nbWFXeHBZWFJwYjI0aU9pSWlMQ0pvWmk1RmJuSnZiR3h0Wlc1MFNVUWlPaUpCWkcxcGJrQnpkWEJ3\nCmJIbGphR0ZwYmkxdVpYUWlMQ0pvWmk1VWVYQmxJam9pWVdSdGFXNGlmWDB3Q2dZSUtvWkl6ajBF\nQXdJRFNBQXcKUlFJaEFMajdtNktTU2hSdzlkUmRSMmFobVU2WXViZVhYeDI2NG1KcFVXV25QZlBX\nQWlBTW9RMktKY3I1MElrVgpIQ2dXYzIzKysvQzZ1VXZHbVhWSE1vKzhZR1ZuOXc9PQotLS0tLUVO\nRCBDRVJUSUZJQ0FURS0tLS0tCkIOCgRTSEEyEgZTSEEyNTZK9QUtLS0tLUJFR0lOIENFUlRJRklD\nQVRFLS0tLS0KTUlJQ0FUQ0NBYWFnQXdJQkFnSVVPTGREc09kL0tPbnY3cGxiUUxtZlNEN21idTh3\nQ2dZSUtvWkl6ajBFQXdJdwpYakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2\nYmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1Sc3dHUVlE\nVlFRRERCSmpZUzV6ZFhCd2JIbGphR0ZwYmkxdVpYUXcKSGhjTk1qSXdOekUzTVRVeE1UUTRXaGNO\nTWpVd05UQTJNVFV4TVRRNFdqQmVNUXN3Q1FZRFZRUUdFd0pIUWpFUApNQTBHQTFVRUNBd0dURzl1\nWkc5dU1ROHdEUVlEVlFRSERBWk1iMjVrYjI0eEVEQU9CZ05WQkFvTUIwOXlaR1Z5ClpYSXhHekFa\nQmdOVkJBTU1FbU5oTG5OMWNIQnNlV05vWVdsdUxXNWxkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUcK\nU000OUF3RUhBMElBQkFEdXJMdVk3VmZJYnpLbnBYV0NORGFIalplajB0cWdqakk3dFd4M3RnVHNN\nU0JXTUE5VgpaQ0d0Ry83K0RuNDhsTWFpczFwLzkvLzUwaUpKY0tyYzRNV2pRakJBTUE4R0ExVWRF\nd0VCL3dRRk1BTUJBZjh3CkRnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWREZ1FXQkJUWFF4YkZ5\nUVlTaWRaNVNkWlBmWDZoQWN0VHRUQUsKQmdncWhrak9QUVFEQWdOSkFEQkdBaUVBbFdFVnF5RTlZ\nbnNOakU4T0dSU0ljYzNka3h4Y1NSd25jTWo5ODlTaApRT2dDSVFDSzZoQmhlWDdYMlFPdTl5TGJG\nQjFvalBmMWh0cWIrK1dYTEZDOE5OakFKQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KGgZB\nZG1pbnMiNwoHUmVhZGVycxIsEiIIARIeEggSBggBEgIIABoSEhAKDnN1cHBseWNoYWluTVNQGgZB\nZG1pbnMiNwoHV3JpdGVycxIsEiIIARIeEggSBggBEgIIABoSEhAKDnN1cHBseWNoYWluTVNQGgZB\nZG1pbnMiOAoGQWRtaW5zEi4SJAgBEiASCBIGCAESAggAGhQSEgoOc3VwcGx5Y2hhaW5NU1AQARoG\nQWRtaW5zIjsKC0VuZG9yc2VtZW50EiwSIggBEh4SCBIGCAESAggAGhISEAoOc3VwcGx5Y2hhaW5N\nU1AaBkFkbWlucyoGQWRtaW5zGiIKCUJhdGNoU2l6ZRIVEgsIChCAgIAxGICAQBoGQWRtaW5zGh4K\nDEJhdGNoVGltZW91dBIOEgQKAjJzGgZBZG1pbnMaHwoTQ2hhbm5lbFJlc3RyaWN0aW9ucxIIGgZB\nZG1pbnMaJAoMQ2FwYWJpbGl0aWVzEhQSCgoICgRWMl8wEgAaBkFkbWlucxqCEgoNQ29uc2Vuc3Vz\nVHlwZRLwERLlEQoIZXRjZHJhZnQS2BEKwREKGG9yZGVyZXIxLnN1cHBseWNoYWluLW5ldBCKNxrP\nCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEQWpDQ0FxbWdBd0lCQWdJVUtmVGtFeXNL\nV1lhbVhNYlc2Y3FnUEdIRHB0b3dDZ1lJS29aSXpqMEVBd0l3ClhqRUxNQWtHQTFVRUJoTUNSMEl4\nRHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFL\nREFkUGNtUmxjbVZ5TVJzd0dRWURWUVFEREJKallTNXpkWEJ3YkhsamFHRnBiaTF1WlhRdwpIaGNO\nTWpJd056RTNNVFV4TkRBd1doY05Nak13TnpFM01UVXhPVEF3V2pCeE1Rc3dDUVlEVlFRR0V3SkhR\nakViCk1Ca0dBMVVFQnhNU05URXVOVEF2TFRBdU1UTXZURzl1Wkc5dU1SQXdEZ1lEVlFRS0V3ZFBj\nbVJsY21WeU1SQXcKRGdZRFZRUUxFd2R2Y21SbGNtVnlNU0V3SHdZRFZRUURFeGh2Y21SbGNtVnlN\nUzV6ZFhCd2JIbGphR0ZwYmkxdQpaWFF3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNB\nQVJtN1pRaTJKR2xqbjFTNzluZlY0RmlsUm1TCmRXZENBalBpYkNDSHN4WVM3MG0xY1pGaEszWDJk\nQXNlSTdQaFQzWmlRaVY2Ry9MT0dsNFBSYzJlOFZyV280SUIKTURDQ0FTd3dEZ1lEVlIwUEFRSC9C\nQVFEQWdPb01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRgpCUWNEQWpBTUJnTlZI\nUk1CQWY4RUFqQUFNQjBHQTFVZERnUVdCQlNINGZSVUt3RU5uQnVNL2VhckwzNGRDUERhCk5EQWZC\nZ05WSFNNRUdEQVdnQlRYUXhiRnlRWVNpZFo1U2RaUGZYNmhBY3RUdFRBL0JnTlZIUkVFT0RBMmdo\naHYKY21SbGNtVnlNUzV6ZFhCd2JIbGphR0ZwYmkxdVpYU0NHbTl5WkdWeVpYSXhMbVJsZG1Wc2Iz\nQXViRzlqWVd3dQpZMjl0TUd3R0NDb0RCQVVHQndnQkJHQjdJbUYwZEhKeklqcDdJbWhtTGtGbVpt\nbHNhV0YwYVc5dUlqb2lJaXdpCmFHWXVSVzV5YjJ4c2JXVnVkRWxFSWpvaWIzSmtaWEpsY2pFdWMz\nVndjR3g1WTJoaGFXNHRibVYwSWl3aWFHWXUKVkhsd1pTSTZJbTl5WkdWeVpYSWlmWDB3Q2dZSUtv\nWkl6ajBFQXdJRFJ3QXdSQUlnVWJGcDdXekZBTEZ1ajFrQwpzSkxwZXh5ejBwT0Fodi9QUEJBYlRK\nMVU1MGdDSUd0L0I0QWhzTDRYbkh2clJmNG8xSU5JU1hWakFVQ1g1V1JYCk9nTHFDbVdTCi0tLS0t\nRU5EIENFUlRJRklDQVRFLS0tLS0KIs8ILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURB\nakNDQXFtZ0F3SUJBZ0lVS2ZUa0V5c0tXWWFtWE1iVzZjcWdQR0hEcHRvd0NnWUlLb1pJemowRUF3\nSXcKWGpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3\nd0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUnN3R1FZRFZRUUREQkpqWVM1emRY\nQndiSGxqYUdGcGJpMXVaWFF3CkhoY05Nakl3TnpFM01UVXhOREF3V2hjTk1qTXdOekUzTVRVeE9U\nQXdXakJ4TVFzd0NRWURWUVFHRXdKSFFqRWIKTUJrR0ExVUVCeE1TTlRFdU5UQXZMVEF1TVRNdlRH\nOXVaRzl1TVJBd0RnWURWUVFLRXdkUGNtUmxjbVZ5TVJBdwpEZ1lEVlFRTEV3ZHZjbVJsY21WeU1T\nRXdId1lEVlFRREV4aHZjbVJsY21WeU1TNXpkWEJ3YkhsamFHRnBiaTF1ClpYUXdXVEFUQmdjcWhr\nak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUm03WlFpMkpHbGpuMVM3OW5mVjRGaWxSbVMKZFdkQ0Fq\nUGliQ0NIc3hZUzcwbTFjWkZoSzNYMmRBc2VJN1BoVDNaaVFpVjZHL0xPR2w0UFJjMmU4VnJXbzRJ\nQgpNRENDQVN3d0RnWURWUjBQQVFIL0JBUURBZ09vTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndN\nQkJnZ3JCZ0VGCkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1CMEdBMVVkRGdRV0JCU0g0ZlJVS3dF\nTm5CdU0vZWFyTDM0ZENQRGEKTkRBZkJnTlZIU01FR0RBV2dCVFhReGJGeVFZU2lkWjVTZFpQZlg2\naEFjdFR0VEEvQmdOVkhSRUVPREEyZ2hodgpjbVJsY21WeU1TNXpkWEJ3YkhsamFHRnBiaTF1WlhT\nQ0dtOXlaR1Z5WlhJeExtUmxkbVZzYjNBdWJHOWpZV3d1ClkyOXRNR3dHQ0NvREJBVUdCd2dCQkdC\nN0ltRjBkSEp6SWpwN0ltaG1Ma0ZtWm1sc2FXRjBhVzl1SWpvaUlpd2kKYUdZdVJXNXliMnhzYldW\ndWRFbEVJam9pYjNKa1pYSmxjakV1YzNWd2NHeDVZMmhoYVc0dGJtVjBJaXdpYUdZdQpWSGx3WlNJ\nNkltOXlaR1Z5WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdVYkZwN1d6RkFMRnVqMWtD\nCnNKTHBleHl6MHBPQWh2L1BQQkFiVEoxVTUwZ0NJR3QvQjRBaHNMNFhuSHZyUmY0bzFJTklTWFZq\nQVVDWDVXUlgKT2dMcUNtV1MKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoSEgoFNTAwbXMQChgB\nIAUogICACBoGQWRtaW5zIioKD0Jsb2NrVmFsaWRhdGlvbhIXEg0IAxIJCgdXcml0ZXJzGgZBZG1p\nbnMiIgoHUmVhZGVycxIXEg0IAxIJCgdSZWFkZXJzGgZBZG1pbnMiIgoHV3JpdGVycxIXEg0IAxIJ\nCgdXcml0ZXJzGgZBZG1pbnMiIgoGQWRtaW5zEhgSDggDEgoKBkFkbWlucxACGgZBZG1pbnMqBkFk\nbWlucxK9LwoLQ29uc29ydGl1bXMSrS8S4i4KFVN1cHBseUNoYWluQ29uc29ydGl1bRLILhKxFwoP\nbWFudWZhY3R1cmVyTVNQEp0XGqUVCgNNU1ASnRUSkhUSjxUKD21hbnVmYWN0dXJlck1TUBKBBi0t\nLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDRERDQ0FiS2dBd0lCQWdJVU93RnNERC9rRTBX\nV21Cd1VreTJFdWRyU0g0OHdDZ1lJS29aSXpqMEVBd0l3ClpERUxNQWtHQTFVRUJoTUNRMGd4RHpB\nTkJnTlZCQWdNQmxwMWNtbGphREVQTUEwR0ExVUVCd3dHV25WeWFXTm8KTVJVd0V3WURWUVFLREF4\nTllXNTFabUZqZEhWeVpYSXhIREFhQmdOVkJBTU1FMk5oTG0xaGJuVm1ZV04wZFhKbApjaTF1WlhR\nd0hoY05Nakl3TnpFM01UVXhNelV5V2hjTk1qVXdOVEEyTVRVeE16VXlXakJrTVFzd0NRWURWUVFH\nCkV3SkRTREVQTUEwR0ExVUVDQXdHV25WeWFXTm9NUTh3RFFZRFZRUUhEQVphZFhKcFkyZ3hGVEFU\nQmdOVkJBb00KREUxaGJuVm1ZV04wZFhKbGNqRWNNQm9HQTFVRUF3d1RZMkV1YldGdWRXWmhZM1Ix\nY21WeUxXNWxkREJaTUJNRwpCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkUrSWNPcnZybUky\nbXVXcEJIZkVYbnVUZnNGQjdTeFhPcHVDCmFYTkZodWgycEZkTk43WE4zTWJoMDYzNGdpV0EvVmVj\nQlNOQnhZRldKYlhKdVVRZysyS2pRakJBTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0RnWURWUjBQ\nQVFIL0JBUURBZ0dtTUIwR0ExVWREZ1FXQkJUaWV1U1BUbVBlTzF1UgpOTEhMeno4LzZyelBhekFL\nQmdncWhrak9QUVFEQWdOSUFEQkZBaUJIbWN3TTB4TmpWVUFyUTRWY2V6S1dEc2tTCjM2RE1TYU9n\ncEw4aWtYc0Y0d0loQUl1cElaUGJDZU5FSmZZSE1JWDBtM3paY0FoQjdtY0hoMStPU05Wd0NwQzEK\nLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoi4wgtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0K\nTUlJREVUQ0NBcmVnQXdJQkFnSVVGSXRBUEtnVjB1Q1dYN2g1aGsvRTV6R09QcjB3Q2dZSUtvWkl6\najBFQXdJdwpaREVMTUFrR0ExVUVCaE1DUTBneER6QU5CZ05WQkFnTUJscDFjbWxqYURFUE1BMEdB\nMVVFQnd3R1duVnlhV05vCk1SVXdFd1lEVlFRS0RBeE5ZVzUxWm1GamRIVnlaWEl4SERBYUJnTlZC\nQU1NRTJOaExtMWhiblZtWVdOMGRYSmwKY2kxdVpYUXdIaGNOTWpJd056RTNNVFV4TmpBd1doY05N\nak13TnpFM01UVXlNVEF3V2pDQmhqRUxNQWtHQTFVRQpCaE1DUTBneEdqQVlCZ05WQkFjVEVUUTNM\nak00THpndU5UUXZXblZ5YVdOb01SVXdFd1lEVlFRS0V3eE5ZVzUxClptRmpkSFZ5WlhJeEl6QU1C\nZ05WQkFzVEJXRmtiV2x1TUJNR0ExVUVDeE1NYldGdWRXWmhZM1IxY21WeU1SOHcKSFFZRFZRUURE\nQlpCWkcxcGJrQnRZVzUxWm1GamRIVnlaWEl0Ym1WME1Ga3dFd1lIS29aSXpqMENBUVlJS29aSQp6\najBEQVFjRFFnQUU3cFUwTDhjdm9la2l0dHpoLysweTZNSUdTSUltVnNlanZhVWQ5OGtMejZLbnQ5\naVNITTQrCkg2VkpGSXZVcVZ0ZE51eTlGeHlyY2k1NURlYzhZdmg1bWFPQ0FTSXdnZ0VlTUE0R0Ex\nVWREd0VCL3dRRUF3SUgKZ0RBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZERnUVdCQlNIdytwNytZ\nOUg0WTF5aXlYMFR0YTFKZnFBa1RBZgpCZ05WSFNNRUdEQVdnQlRpZXVTUFRtUGVPMXVSTkxITHp6\nOC82cnpQYXpBa0JnTlZIUkVFSFRBYmdobGpZUzEwCmIyOXNjeTA0TmpWbVl6ZzVabVkxTFRoME9I\nWjRNSUdYQmdncUF3UUZCZ2NJQVFTQmluc2lZWFIwY25NaU9uc2kKWVdKaFl5NXBibWwwSWpvaWRI\nSjFaU0lzSW1Ga2JXbHVJam9pZEhKMVpTSXNJbWhtTGtGbVptbHNhV0YwYVc5dQpJam9pYldGdWRX\nWmhZM1IxY21WeUlpd2lhR1l1Ulc1eWIyeHNiV1Z1ZEVsRUlqb2lRV1J0YVc1QWJXRnVkV1poClkz\nUjFjbVZ5TFc1bGRDSXNJbWhtTGxSNWNHVWlPaUpoWkcxcGJpSjlmVEFLQmdncWhrak9QUVFEQWdO\nSUFEQkYKQWlFQXQrTjhxTk1oNzIvUXNmTGsxV1htT1J6QWpWeEtJdUc1UlVlMzBockxtZ0VDSUJE\ndXRvT1Z3RE1LcTlNTQovZUhpM2ZGMGpkaGN4NzVPUUw3SXYrMHA1alNPCi0tLS0tRU5EIENFUlRJ\nRklDQVRFLS0tLS0KQg4KBFNIQTISBlNIQTI1NkqBBi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0t\nLQpNSUlDRERDQ0FiS2dBd0lCQWdJVU93RnNERC9rRTBXV21Cd1VreTJFdWRyU0g0OHdDZ1lJS29a\nSXpqMEVBd0l3ClpERUxNQWtHQTFVRUJoTUNRMGd4RHpBTkJnTlZCQWdNQmxwMWNtbGphREVQTUEw\nR0ExVUVCd3dHV25WeWFXTm8KTVJVd0V3WURWUVFLREF4TllXNTFabUZqZEhWeVpYSXhIREFhQmdO\nVkJBTU1FMk5oTG0xaGJuVm1ZV04wZFhKbApjaTF1WlhRd0hoY05Nakl3TnpFM01UVXhNelV5V2hj\nTk1qVXdOVEEyTVRVeE16VXlXakJrTVFzd0NRWURWUVFHCkV3SkRTREVQTUEwR0ExVUVDQXdHV25W\neWFXTm9NUTh3RFFZRFZRUUhEQVphZFhKcFkyZ3hGVEFUQmdOVkJBb00KREUxaGJuVm1ZV04wZFhK\nbGNqRWNNQm9HQTFVRUF3d1RZMkV1YldGdWRXWmhZM1IxY21WeUxXNWxkREJaTUJNRwpCeXFHU000\nOUFnRUdDQ3FHU000OUF3RUhBMElBQkUrSWNPcnZybUkybXVXcEJIZkVYbnVUZnNGQjdTeFhPcHVD\nCmFYTkZodWgycEZkTk43WE4zTWJoMDYzNGdpV0EvVmVjQlNOQnhZRldKYlhKdVVRZysyS2pRakJB\nTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWREZ1FX\nQkJUaWV1U1BUbVBlTzF1UgpOTEhMeno4LzZyelBhekFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUJI\nbWN3TTB4TmpWVUFyUTRWY2V6S1dEc2tTCjM2RE1TYU9ncEw4aWtYc0Y0d0loQUl1cElaUGJDZU5F\nSmZZSE1JWDBtM3paY0FoQjdtY0hoMStPU05Wd0NwQzEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0t\nLQoaBkFkbWlucyI4CgdXcml0ZXJzEi0SIwgBEh8SCBIGCAESAggAGhMSEQoPbWFudWZhY3R1cmVy\nTVNQGgZBZG1pbnMiOQoGQWRtaW5zEi8SJQgBEiESCBIGCAESAggAGhUSEwoPbWFudWZhY3R1cmVy\nTVNQEAEaBkFkbWlucyI8CgtFbmRvcnNlbWVudBItEiMIARIfEggSBggBEgIIABoTEhEKD21hbnVm\nYWN0dXJlck1TUBoGQWRtaW5zIjgKB1JlYWRlcnMSLRIjCAESHxIIEgYIARICCAAaExIRCg9tYW51\nZmFjdHVyZXJNU1AaBkFkbWlucyoGQWRtaW5zErYWCgpjYXJyaWVyTVNQEqcWGsMUCgNNU1ASuxQS\nsBQSrRQKCmNhcnJpZXJNU1AS6QUtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQitEQ0NB\nWjZnQXdJQkFnSVVOZVJnYjJRR283TkV0cStpa0tHeS9UQlBiQmt3Q2dZSUtvWkl6ajBFQXdJdwpX\nakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RH\nOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZERZWEp5YVdWeU1SY3dGUVlEVlFRRERBNWpZUzVqWVhKeWFX\nVnlMVzVsZERBZUZ3MHkKTWpBM01UY3hOVEUxTlRSYUZ3MHlOVEExTURZeE5URTFOVFJhTUZveEN6\nQUpCZ05WQkFZVEFrZENNUTh3RFFZRApWUVFJREFaTWIyNWtiMjR4RHpBTkJnTlZCQWNNQmt4dmJt\nUnZiakVRTUE0R0ExVUVDZ3dIUTJGeWNtbGxjakVYCk1CVUdBMVVFQXd3T1kyRXVZMkZ5Y21sbGNp\nMXVaWFF3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkMKQUFSNzNlQXZFS0JleTVOVWZz\nc0JVdTlOa3dzSFZSUkJzakova0RyRlVlVzJSTnZVQmo4V2gyWWtaWFQxYzdqKwpUbHlITTBDZkdV\nVm9uMkF4bGRZUGE2MlZvMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCCi93\nUUVBd0lCcGpBZEJnTlZIUTRFRmdRVXF2aXVnQnZ4SjZnTmRLb3dTc3JUWU9WeGY0VXdDZ1lJS29a\nSXpqMEUKQXdJRFNBQXdSUUloQUxXSDdOZkphOU9jcGJGclQ3NmNsR2hhSVFpc2lmeFpPNjVzcnp3\nTW5GbDhBaUE4ZEN2bApDQW0wc0VNQTNvMFNES3VEOHBlMXlZMkE5dmFhV0pXcW1TOVcyZz09Ci0t\nLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KIrYILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1J\nSUM3akNDQXBTZ0F3SUJBZ0lVVWNORCsyNUtjd1BGMDNEYm9tbDNtMnkxMUJZd0NnWUlLb1pJemow\nRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFV\nRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1\nallYSnlhV1Z5TFc1bGREQWVGdzB5Ck1qQTNNVGN4TlRJeE1EQmFGdzB5TXpBM01UY3hOVEkyTURC\nYU1IZ3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1\na2IyNHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhIakFNQmdOVgpCQXNUQldGa2JXbHVNQTRHQTFV\nRUN4TUhZMkZ5Y21sbGNqRWFNQmdHQTFVRUF3d1JRV1J0YVc1QVkyRnljbWxsCmNpMXVaWFF3V1RB\nVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVFGOG9ZZFZmNm9jNUxFSnd6L3FNelYKZGFQ\nMkRxd0lrN09kSHNNQ0ZqRzJZa1Fpa3ZTY3Bpdy9QRWgxWDhZaUxaQ01wZitraHB0aFVvbWRpei9o\ndCtCYgpvNElCR0RDQ0FSUXdEZ1lEVlIwUEFRSC9CQVFEQWdlQU1Bd0dBMVVkRXdFQi93UUNNQUF3\nSFFZRFZSME9CQllFCkZKblZOUTZWNUFKNGI5RDBLZEpEaEM2U2U1WkRNQjhHQTFVZEl3UVlNQmFB\nRktyNHJvQWI4U2VvRFhTcU1FcksKMDJEbGNYK0ZNQ1FHQTFVZEVRUWRNQnVDR1dOaExYUnZiMnh6\nTFRVNU5XTTNOMlExT1dJdFpqSm1ibVl3Z1kwRwpDQ29EQkFVR0J3Z0JCSUdBZXlKaGRIUnljeUk2\nZXlKaFltRmpMbWx1YVhRaU9pSjBjblZsSWl3aVlXUnRhVzRpCk9pSjBjblZsSWl3aWFHWXVRV1pt\nYVd4cFlYUnBiMjRpT2lKallYSnlhV1Z5SWl3aWFHWXVSVzV5YjJ4c2JXVnUKZEVsRUlqb2lRV1J0\nYVc1QVkyRnljbWxsY2kxdVpYUWlMQ0pvWmk1VWVYQmxJam9pWVdSdGFXNGlmWDB3Q2dZSQpLb1pJ\nemowRUF3SURTQUF3UlFJaEFOVXhKVUtma1E3MW1sSGQwTFFTMnhNMEpVa2t0MjRlaUlxSm9laEdl\nSTl1CkFpQXJ3eXZDYzdXU20wdDd5UG1aTVhXdFVVZHk3VEFFSUt2TU1pb2NEbFFRTlE9PQotLS0t\nLUVORCBDRVJUSUZJQ0FURS0tLS0tCkIOCgRTSEEyEgZTSEEyNTZK6QUtLS0tLUJFR0lOIENFUlRJ\nRklDQVRFLS0tLS0KTUlJQitEQ0NBWjZnQXdJQkFnSVVOZVJnYjJRR283TkV0cStpa0tHeS9UQlBi\nQmt3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZi\nbVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZERZWEp5YVdWeU1SY3dG\nUVlEVlFRRERBNWpZUzVqWVhKeWFXVnlMVzVsZERBZUZ3MHkKTWpBM01UY3hOVEUxTlRSYUZ3MHlO\nVEExTURZeE5URTFOVFJhTUZveEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRApWUVFJREFaTWIyNWti\nMjR4RHpBTkJnTlZCQWNNQmt4dmJtUnZiakVRTUE0R0ExVUVDZ3dIUTJGeWNtbGxjakVYCk1CVUdB\nMVVFQXd3T1kyRXVZMkZ5Y21sbGNpMXVaWFF3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3\nTkMKQUFSNzNlQXZFS0JleTVOVWZzc0JVdTlOa3dzSFZSUkJzakova0RyRlVlVzJSTnZVQmo4V2gy\nWWtaWFQxYzdqKwpUbHlITTBDZkdVVm9uMkF4bGRZUGE2MlZvMEl3UURBUEJnTlZIUk1CQWY4RUJU\nQURBUUgvTUE0R0ExVWREd0VCCi93UUVBd0lCcGpBZEJnTlZIUTRFRmdRVXF2aXVnQnZ4SjZnTmRL\nb3dTc3JUWU9WeGY0VXdDZ1lJS29aSXpqMEUKQXdJRFNBQXdSUUloQUxXSDdOZkphOU9jcGJGclQ3\nNmNsR2hhSVFpc2lmeFpPNjVzcnp3TW5GbDhBaUE4ZEN2bApDQW0wc0VNQTNvMFNES3VEOHBlMXlZ\nMkE5dmFhV0pXcW1TOVcyZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KGgZBZG1pbnMiNAoG\nQWRtaW5zEioSIAgBEhwSCBIGCAESAggAGhASDgoKY2Fycmllck1TUBABGgZBZG1pbnMiNwoLRW5k\nb3JzZW1lbnQSKBIeCAESGhIIEgYIARICCAAaDhIMCgpjYXJyaWVyTVNQGgZBZG1pbnMiMwoHUmVh\nZGVycxIoEh4IARIaEggSBggBEgIIABoOEgwKCmNhcnJpZXJNU1AaBkFkbWlucyIzCgdXcml0ZXJz\nEigSHggBEhoSCBIGCAESAggAGg4SDAoKY2Fycmllck1TUBoGQWRtaW5zKgZBZG1pbnMaQAoVQ2hh\nbm5lbENyZWF0aW9uUG9saWN5EicSDAgDEggKBkFkbWlucxoXL0NoYW5uZWwvT3JkZXJlci9BZG1p\nbnMqFy9DaGFubmVsL09yZGVyZXIvQWRtaW5zIi0KBkFkbWlucxIjEggIARIEEgISABoXL0NoYW5u\nZWwvT3JkZXJlci9BZG1pbnMqFy9DaGFubmVsL09yZGVyZXIvQWRtaW5zGiQKDENhcGFiaWxpdGll\ncxIUEgoKCAoEVjJfMBIAGgZBZG1pbnMaJgoQSGFzaGluZ0FsZ29yaXRobRISEggKBlNIQTI1NhoG\nQWRtaW5zGi0KGUJsb2NrRGF0YUhhc2hpbmdTdHJ1Y3R1cmUSEBIGCP////8PGgZBZG1pbnMaTgoQ\nT3JkZXJlckFkZHJlc3NlcxI6Eh8KHW9yZGVyZXIxLnN1cHBseWNoYWluLW5ldDo3MDUwGhcvQ2hh\nbm5lbC9PcmRlcmVyL0FkbWlucyIiCgdSZWFkZXJzEhcSDQgDEgkKB1JlYWRlcnMaBkFkbWlucyIi\nCgdXcml0ZXJzEhcSDQgDEgkKB1dyaXRlcnMaBkFkbWlucyIiCgZBZG1pbnMSGBIOCAMSCgoGQWRt\naW5zEAIaBkFkbWlucyoGQWRtaW5zGg4KBAoCCgAKAAoACgAKAA==", "metadata": {"images": {"alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "orderer": "hyperledger/fabric-orderer:2.2.2"}, "namespace": "supplychain-net"}, "orderer": {"keepaliveserverinterval": "10s", "localmspid": "supplychainMSP", "loglevel": "info", "name": "orderer1", "tlsstatus": true}, "proxy": {"external_url_suffix": "develop.local.com", "provider": "none"}, "service": {"ports": {"grpc": {"clusteripport": 7050}}, "servicetype": "ClusterIP"}, "storage": {"storageclassname": "supplychainsc", "storagesize": "512Mi"}, "vault": {"address": "http://20.197.63.209:8200", "authpath": "devsupplychain-net-auth", "imagesecretname": "regcred", "role": "vault-role", "secretprefix": "secretv2/data/crypto/ordererOrganizations/supplychain-net/orderers/orderer1.supplychain-net", "serviceaccountname": "vault-auth"}}}}, "ansible_included_var_files": ["/home/bevel/platforms/hyperledger-fabric/releases/dev/supplychain/orderer/orderer1-supplychain.yaml"], "changed": false}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:36
ok: [localhost] => {"changed": false, "checksum": "3ba0ebe0b35ff05229d5e9dbdd184bd30a7fbefa", "dest": "./build/test/supplychain-orderer1.yaml", "gid": 0, "group": "root", "md5sum": "3b77d833a117c83e25d3b72783e4906d", "mode": "0644", "owner": "root", "size": 18537, "src": "/root/.ansible/tmp/ansible-tmp-1658074709.3346853-38762-80389636715425/source", "state": "file", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:42
changed: [localhost] => {"changed": true, "cmd": "helm lint -f \"./build/test/supplychain-orderer1.yaml\" \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode\"\n", "delta": "0:00:00.107515", "end": "2022-07-17 16:18:30.422822", "msg": "", "rc": 0, "start": "2022-07-17 16:18:30.315307", "stderr": "", "stderr_lines": [], "stdout": "==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, 0 chart(s) failed", "stdout_lines": ["==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/orderernode", "[INFO] Chart.yaml: icon is recommended", "", "1 chart(s) linted, 0 chart(s) failed"]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/orderers/tasks/main.yaml:51

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing Orderer files\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.697162", "end": "2022-07-17 16:18:34.050638", "msg": "", "rc": 0, "start": "2022-07-17 16:18:31.353476", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   2069f23..e48fb0d  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   2069f23..e48fb0d  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main e48fb0d] [ci skip] Pushing Orderer files\n 2 files changed, 547 insertions(+), 68 deletions(-)", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main e48fb0d] [ci skip] Pushing Orderer files", " 2 files changed, 547 insertions(+), 68 deletions(-)"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main e48fb0d] [ci skip] Pushing Orderer files",
        " 2 files changed, 547 insertions(+), 68 deletions(-)"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   2069f23..e48fb0d  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost
META: role_complete for localhost

TASK [Create all peers] ********************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:177
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'O=Orderer,L=51.50/-0.13/London,C=GB', 'type': 'orderer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'fabric_console': 'enabled', 'ca_data': {'url': 'ca.supplychain-net:7054', 'certificate': '/home/bevel/build/supplychain/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'consensus': {'name': 'raft'}, 'orderers': [{'orderer': None, 'name': 'orderer1', 'type': 'orderer', 'consensus': 'raft', 'grpc': {'port': 7050}}]}})  => {"ansible_loop_var": "item", "changed": false, "item": {"ca_data": {"certificate": "/home/bevel/build/supplychain/server.crt", "url": "ca.supplychain-net:7054"}, "cloud_provider": "azure", "country": "UK", "external_url_suffix": "develop.local.com", "fabric_console": "enabled", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "supplychain", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Orderer/CN=ca.supplychain-net", "type": "ca"}, "consensus": {"name": "raft"}, "orderers": [{"consensus": "raft", "grpc": {"port": 7050}, "name": "orderer1", "orderer": null, "type": "orderer"}]}, "state": "London", "subject": "O=Orderer,L=51.50/-0.13/London,C=GB", "type": "orderer", "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}

TASK [Create Value files for Organization Peers] *******************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/peers/tasks/main.yaml:14

TASK [helm_component : Ensures /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer dir exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:14
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer", "size": 4096, "state": "directory", "uid": 0}

TASK [helm_component : create value file for values-peer0] *********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:23
ok: [localhost] => {"changed": false, "checksum": "00f34ed21c4e4fe5ae77c918eee5ba0076098799", "dest": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer/values-peer0.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer/values-peer0.yaml", "size": 2043, "state": "file", "uid": 0}

TASK [Helm lint] ***************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:32

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
ok: [localhost] => {"changed": false, "stat": {"atime": 1658071622.0278962, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "checksum": "00f34ed21c4e4fe5ae77c918eee5ba0076098799", "ctime": 1658071621.5358992, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 3627583, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658071621.1999013, "nlink": 1, "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer/values-peer0.yaml", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 2043, "uid": 0, "version": "205862429", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [Check or create test directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:22

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"atime": 1658074423.378228, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "ctime": 1658074709.844925, "dev": 64513, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626754, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658074709.844925, "nlink": 2, "path": "./build/test", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "version": "4197237393", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:31
ok: [localhost] => {"ansible_facts": {"apiVersion": "helm.fluxcd.io/v1", "kind": "HelmRelease", "metadata": {"annotations": {"fluxcd.io/automated": "false"}, "name": "manufacturer-peer0", "namespace": "manufacturer-net"}, "spec": {"chart": {"git": "ssh://git@github.com/adityajoshi12/bevel.git", "path": "platforms/hyperledger-fabric/charts/peernode", "ref": "test"}, "releaseName": "manufacturer-peer0", "values": {"annotations": {"deployment": null, "pvc": null, "service": null}, "config": {"pod": {"resources": {"limits": {"cpu": 1, "memory": "512M"}, "requests": {"cpu": 0.5, "memory": "512M"}}}}, "metadata": {"images": {"alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "couchdb": "couchdb:3.1", "peer": "hyperledger/fabric-peer:2.2.2"}, "namespace": "manufacturer-net"}, "peer": {"builder": "hyperledger/fabric-ccenv:2.2.2", "couchdb": {"username": "manufacturer-user"}, "gossipexternalendpoint": "peer0.manufacturer-net:7051", "gossippeeraddress": "peer0.manufacturer-net:7051", "localmspid": "manufacturerMSP", "loglevel": "info", "name": "peer0", "tlsstatus": true}, "proxy": {"external_url_suffix": "develop.local.com", "provider": "none"}, "service": {"ports": {"couchdb": {"clusteripport": 5984}, "events": {"clusteripport": 7053}, "grpc": {"clusteripport": 7051}}, "servicetype": "ClusterIP"}, "storage": {"couchdb": {"storageclassname": "manufacturersc", "storagesize": "1Gi"}, "peer": {"storageclassname": "manufacturersc", "storagesize": "512Mi"}}, "vault": {"address": "http://20.197.63.209:8200", "authpath": "devmanufacturer-net-auth", "imagesecretname": "regcred", "role": "vault-role", "secretambassador": "secretv2/data/crypto/peerOrganizations/manufacturer-net/ambassador", "secretcouchdbpass": "secretv2/data/credentials/manufacturer-net/couchdb/manufacturer?user", "secretprefix": "secretv2/data/crypto/peerOrganizations/manufacturer-net/peers/peer0.manufacturer-net", "serviceaccountname": "vault-auth"}}}}, "ansible_included_var_files": ["/home/bevel/platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer/values-peer0.yaml"], "changed": false}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:36
ok: [localhost] => {"changed": false, "checksum": "76b5638c2cc04d698e4eafd8e487446356f2fba2", "dest": "./build/test/manufacturer-peer0.yaml", "gid": 0, "group": "root", "md5sum": "cdb6b34fb3e2fb25edac3c8fe068f048", "mode": "0644", "owner": "root", "size": 1619, "src": "/root/.ansible/tmp/ansible-tmp-1658074718.112511-39049-266283044223906/source", "state": "file", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:42
changed: [localhost] => {"changed": true, "cmd": "helm lint -f \"./build/test/manufacturer-peer0.yaml\" \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/peernode\"\n", "delta": "0:00:00.106815", "end": "2022-07-17 16:18:39.307346", "msg": "", "rc": 0, "start": "2022-07-17 16:18:39.200531", "stderr": "", "stderr_lines": [], "stdout": "==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/peernode\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, 0 chart(s) failed", "stdout_lines": ["==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/peernode", "[INFO] Chart.yaml: icon is recommended", "", "1 chart(s) linted, 0 chart(s) failed"]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/peers/tasks/main.yaml:33

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing Peer files\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.549661", "end": "2022-07-17 16:18:42.838887", "msg": "", "rc": 0, "start": "2022-07-17 16:18:40.289226", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   e48fb0d..cafaa7e  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   e48fb0d..cafaa7e  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main cafaa7e] [ci skip] Pushing Peer files\n 1 file changed, 116 insertions(+)", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main cafaa7e] [ci skip] Pushing Peer files", " 1 file changed, 116 insertions(+)"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main cafaa7e] [ci skip] Pushing Peer files",
        " 1 file changed, 116 insertions(+)"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   e48fb0d..cafaa7e  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost

TASK [Waiting for peer pod {{ peer.name }} in {{ item.name | lower }}-net] *****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/peers/tasks/main.yaml:45
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod peer0 in manufacturer-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:11
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:28
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod peer0 in manufacturer-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:42
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"annotations": {"checksum/config": "481c32c0e1b8eb2cdf067f2e401e8bca0b2818360c431b8df745ed6e456d4a35"}, "creationTimestamp": "2022-07-17T15:28:03Z", "generateName": "peer0-", "labels": {"app": "peer0", "app.kubernetes.io/instance": "manufacturer-peer0", "app.kubernetes.io/name": "peer0", "controller-revision-hash": "peer0-b9c445c55", "helm.sh/chart": "peernode-0.2.0", "statefulset.kubernetes.io/pod-name": "peer0-0"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:checksum/config": {}}, "f:generateName": {}, "f:labels": {".": {}, "f:app": {}, "f:app.kubernetes.io/instance": {}, "f:app.kubernetes.io/name": {}, "f:controller-revision-hash": {}, "f:helm.sh/chart": {}, "f:statefulset.kubernetes.io/pod-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"0ac8a8c5-e16f-4594-ad4b-8334776c85f8\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {"f:containers": {"k:{\"name\":\"couchdb\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"COUCHDB_USER\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":5984,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:protocol": {}}}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/etc/hyperledger/fabric/crypto\"}": {".": {}, "f:mountPath": {}, "f:name": {}}, "k:{\"mountPath\":\"/opt/couchdb/data\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}, "k:{\"name\":\"grpc-web\"}": {".": {}, "f:env": {".": {}, "k:{\"name\":\"BACKEND_ADDRESS\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"BACKEND_TLS\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"BACKEND_TLS_CA_FILES\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"SERVER_BIND_ADDRESS\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"SERVER_HTTP_DEBUG_PORT\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"SERVER_HTTP_MAX_READ_TIMEOUT\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"SERVER_HTTP_MAX_WRITE_TIMEOUT\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"SERVER_HTTP_TLS_PORT\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"SERVER_TLS_CERT_FILE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"SERVER_TLS_KEY_FILE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"USE_WEBSOCKETS\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":7443,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/certs\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}, "k:{\"name\":\"peer0\"}": {".": {}, "f:args": {}, "f:command": {}, "f:envFrom": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":7051,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}, "k:{\"containerPort\":7053,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}, "k:{\"containerPort\":9443,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}}, "f:resources": {".": {}, "f:limits": {".": {}, "f:cpu": {}, "f:memory": {}}, "f:requests": {".": {}, "f:cpu": {}, "f:memory": {}}}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/etc/hyperledger/fabric/NodeOUconfig\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/etc/hyperledger/fabric/crypto\"}": {".": {}, "f:mountPath": {}, "f:name": {}}, "k:{\"mountPath\":\"/host/var/run/docker.sock\"}": {".": {}, "f:mountPath": {}, "f:name": {}}, "k:{\"mountPath\":\"/var/hyperledger/production\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:hostname": {}, "f:imagePullSecrets": {".": {}, "k:{\"name\":\"regcred\"}": {".": {}, "f:name": {}}}, "f:initContainers": {".": {}, "k:{\"name\":\"certificates-init\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"KUBERNETES_AUTH_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"MOUNT_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ADDR\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_APP_ROLE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_PREFIX\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/secret\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:subdomain": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"certificates\"}": {".": {}, "f:emptyDir": {".": {}, "f:medium": {}}, "f:name": {}}, "k:{\"name\":\"datadir\"}": {".": {}, "f:name": {}, "f:persistentVolumeClaim": {".": {}, "f:claimName": {}}}, "k:{\"name\":\"datadir-couchdb\"}": {".": {}, "f:name": {}, "f:persistentVolumeClaim": {".": {}, "f:claimName": {}}}, "k:{\"name\":\"dockersocket\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}, "k:{\"name\":\"peer0-msp-config-volume\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:items": {}, "f:name": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T15:28:03Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {".": {}, "k:{\"type\":\"PodScheduled\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}}}, "manager": "kube-scheduler", "operation": "Update", "time": "2022-07-17T15:28:03Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:initContainerStatuses": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.2.3\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "time": "2022-07-17T15:32:08Z"}], "name": "peer0-0", "namespace": "manufacturer-net", "ownerReferences": [{"apiVersion": "apps/v1", "blockOwnerDeletion": true, "controller": true, "kind": "StatefulSet", "name": "peer0", "uid": "0ac8a8c5-e16f-4594-ad4b-8334776c85f8"}], "resourceVersion": "76326", "uid": "ce2b9fd0-5218-47ac-96e4-4844d5710559"}, "spec": {"containers": [{"args": ["chown -R couchdb:couchdb /opt/couchdb\nchmod -R 0770 /opt/couchdb/data\nchmod 664 /opt/couchdb/etc/*.ini\nchmod 664 /opt/couchdb/etc/local.d/*.ini\nchmod 775 /opt/couchdb/etc/*.d\nif [ -e /etc/hyperledger/fabric/crypto/user_cred ] && [ -z $COUCHDB_USER ]\nthen\n  echo \" Error! Please provide username for the password \"\n  exit 1\n  break\nelif [ -e /etc/hyperledger/fabric/crypto/user_cred ] && [ ! -z $COUCHDB_USER ]\nthen\n  export COUCHDB_PASSWORD=`cat /etc/hyperledger/fabric/crypto/user_cred`\n  break\nelif [ ! -e /etc/hyperledger/fabric/crypto/user_cred ] && [ ! -z $COUCHDB_USER ]\nthen\n  echo \" Error! Please provide password for username $COUCHDB_USER \"\n  exit 1\n  break\nelse\n  :\nfi\ntini -- /docker-entrypoint.sh /opt/couchdb/bin/couchdb"], "command": ["sh", "-c"], "env": [{"name": "COUCHDB_USER", "value": "manufacturer-user"}], "image": "couchdb:3.1", "imagePullPolicy": "IfNotPresent", "name": "couchdb", "ports": [{"containerPort": 5984, "protocol": "TCP"}], "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/opt/couchdb/data", "name": "datadir-couchdb"}, {"mountPath": "/etc/hyperledger/fabric/crypto", "name": "certificates"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-ghvw6", "readOnly": true}]}, {"args": ["cp /etc/hyperledger/fabric/NodeOUconfig/mspconfig  /etc/hyperledger/fabric/crypto/msp/config.yaml\nexport CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=`cat /etc/hyperledger/fabric/crypto/user_cred`\npeer node start"], "command": ["sh", "-c"], "envFrom": [{"configMapRef": {"name": "peer0-config"}}], "image": "hyperledger/fabric-peer:2.2.2", "imagePullPolicy": "IfNotPresent", "name": "peer0", "ports": [{"containerPort": 7051, "name": "grpc", "protocol": "TCP"}, {"containerPort": 7053, "name": "events", "protocol": "TCP"}, {"containerPort": 9443, "name": "operations", "protocol": "TCP"}], "resources": {"limits": {"cpu": "1", "memory": "512M"}, "requests": {"cpu": "500m", "memory": "512M"}}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/var/hyperledger/production", "name": "datadir"}, {"mountPath": "/host/var/run/docker.sock", "name": "dockersocket"}, {"mountPath": "/etc/hyperledger/fabric/crypto", "name": "certificates"}, {"mountPath": "/etc/hyperledger/fabric/NodeOUconfig", "name": "peer0-msp-config-volume", "readOnly": true}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-ghvw6", "readOnly": true}]}, {"env": [{"name": "BACKEND_ADDRESS", "value": "peer0.manufacturer-net:7051"}, {"name": "SERVER_TLS_CERT_FILE", "value": "/certs/tls/server.crt"}, {"name": "SERVER_TLS_KEY_FILE", "value": "/certs/tls/server.key"}, {"name": "BACKEND_TLS_CA_FILES", "value": "/certs/tls/ca.crt"}, {"name": "SERVER_BIND_ADDRESS", "value": "0.0.0.0"}, {"name": "SERVER_HTTP_DEBUG_PORT", "value": "8080"}, {"name": "SERVER_HTTP_TLS_PORT", "value": "7443"}, {"name": "BACKEND_TLS", "value": "true"}, {"name": "SERVER_HTTP_MAX_WRITE_TIMEOUT", "value": "5m"}, {"name": "SERVER_HTTP_MAX_READ_TIMEOUT", "value": "5m"}, {"name": "USE_WEBSOCKETS", "value": "true"}], "image": "ghcr.io/hyperledger-labs/grpc-web:latest", "imagePullPolicy": "IfNotPresent", "name": "grpc-web", "ports": [{"containerPort": 7443, "name": "grpc-web", "protocol": "TCP"}], "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/certs", "name": "certificates"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-ghvw6", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "hostname": "peer0-0", "imagePullSecrets": [{"name": "regcred"}], "initContainers": [{"args": ["#!/usr/bin/env sh\nvalidateVaultResponse () {\n  if echo ${2} | grep \"errors\"; then\n    echo \"ERROR: unable to retrieve ${1}: ${2}\"\n    exit 1\n  fi\n  if  [ \"$3\" == \"LOOKUPSECRETRESPONSE\" ]\n  then\n    http_code=$(curl -sS -o /dev/null -w \"%{http_code}\" \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key})\n    curl_response=$?\n    if test \"$http_code\" != \"200\" ; then\n        echo \"Http response code from Vault - $http_code\"\n        if test \"$curl_response\" != \"0\"; then\n           echo \"Error: curl command failed with error code - $curl_response\"\n           exit 1\n        fi\n    fi\n  fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')        \nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nvault_secret_key=\"${VAULT_SECRET_PREFIX}/tls\"\necho \"Getting TLS certificates from Vault using key $vault_secret_key\"\n\nOUTPUT_PATH=\"${MOUNT_PATH}/tls\"\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\n\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\n\nTLS_CA_CERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"ca.crt\"]')\nTLS_SERVER_CERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"server.crt\"]')\nTLS_SERVER_KEY=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"server.key\"]')\n\nmkdir -p ${OUTPUT_PATH}\necho \"${TLS_CA_CERT}\" >> ${OUTPUT_PATH}/ca.crt\necho \"${TLS_SERVER_CERT}\" >> ${OUTPUT_PATH}/server.crt\necho \"${TLS_SERVER_KEY}\" >> ${OUTPUT_PATH}/server.key\n\nvault_secret_key=\"${VAULT_SECRET_PREFIX}/msp\"\necho \"Getting MSP certificates from Vault using key $vault_secret_key\"\n\nOUTPUT_PATH=\"${MOUNT_PATH}/msp\"\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\n\nADMINCERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"admincerts\"]')\nCACERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"cacerts\"]')\nKEYSTORE=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"keystore\"]')\nSIGNCERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"signcerts\"]')\nTLSCACERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"tlscacerts\"]')\n\nmkdir -p ${OUTPUT_PATH}/admincerts\nmkdir -p ${OUTPUT_PATH}/cacerts\nmkdir -p ${OUTPUT_PATH}/keystore\nmkdir -p ${OUTPUT_PATH}/signcerts\nmkdir -p ${OUTPUT_PATH}/tlscacerts\n\necho \"${ADMINCERT}\" >> ${OUTPUT_PATH}/admincerts/admin.crt\necho \"${CACERTS}\" >> ${OUTPUT_PATH}/cacerts/ca.crt\necho \"${KEYSTORE}\" >> ${OUTPUT_PATH}/keystore/server.key\necho \"${SIGNCERTS}\" >> ${OUTPUT_PATH}/signcerts/server.crt\necho \"${TLSCACERTS}\" >> ${OUTPUT_PATH}/tlscacerts/tlsca.crt\n\n# COUCH_DB CREDENTIALS\necho \"Getting couch db credentials\"\nSECRET_COUCHDB_PASS=secretv2/data/credentials/manufacturer-net/couchdb/manufacturer?user\nif [ ! -z $SECRET_COUCHDB_PASS ]\nthen\n  vault_secret_key=$(echo ${SECRET_COUCHDB_PASS} |awk -F \"?\" '{print $1}')\n  vault_data_key=$(echo ${SECRET_COUCHDB_PASS} |awk -F \"?\" '{print $2}')\n  LOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\n  validateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\n  PASSWORD=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data.data[\\\"${vault_data_key}\\\"]\")\n  echo \"${PASSWORD}\" >> ${MOUNT_PATH}/user_cred \nfi            "], "command": ["sh", "-c"], "env": [{"name": "VAULT_ADDR", "value": "http://20.197.63.209:8200"}, {"name": "VAULT_SECRET_PREFIX", "value": "secretv2/data/crypto/peerOrganizations/manufacturer-net/peers/peer0.manufacturer-net"}, {"name": "KUBERNETES_AUTH_PATH", "value": "devmanufacturer-net-auth"}, {"name": "VAULT_APP_ROLE", "value": "vault-role"}, {"name": "MOUNT_PATH", "value": "/secret"}], "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "imagePullPolicy": "IfNotPresent", "name": "certificates-init", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/secret", "name": "certificates"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-ghvw6", "readOnly": true}]}], "nodeName": "aks-agentpool-84293659-vmss000002", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "vault-auth", "serviceAccountName": "vault-auth", "subdomain": "peer0", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoSchedule", "key": "node.kubernetes.io/memory-pressure", "operator": "Exists"}], "volumes": [{"name": "datadir", "persistentVolumeClaim": {"claimName": "datadir-peer0-0"}}, {"name": "datadir-couchdb", "persistentVolumeClaim": {"claimName": "datadir-couchdb-peer0-0"}}, {"emptyDir": {"medium": "Memory"}, "name": "certificates"}, {"hostPath": {"path": "/var/run/docker.sock", "type": ""}, "name": "dockersocket"}, {"configMap": {"defaultMode": 420, "items": [{"key": "mspconfig", "path": "mspconfig"}], "name": "peer0-msp-config"}, "name": "peer0-msp-config-volume"}, {"name": "kube-api-access-ghvw6", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:28:42Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:32:08Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:32:08Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:28:07Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://209a32792062ea3585ef3f1d64b1bbce2a1b8ff334cbe5dcac76c6ec9a85f973", "image": "docker.io/library/couchdb:3.1", "imageID": "docker.io/library/couchdb@sha256:a7964937f58f25eb1e53cb3f4342590fc63939a85f8f5627f03415503d8ea7b9", "lastState": {}, "name": "couchdb", "ready": true, "restartCount": 0, "started": true, "state": {"running": {"startedAt": "2022-07-17T15:29:00Z"}}}, {"containerID": "containerd://e8e66bbaeef11fe6db61547a72eab6e4383ba40bf2704c65495a52c0305f8243", "image": "ghcr.io/hyperledger-labs/grpc-web:latest", "imageID": "ghcr.io/hyperledger-labs/grpc-web@sha256:1d14972d0bd719c74071302f872b4b36419f8023adc974d910247119d39eb398", "lastState": {}, "name": "grpc-web", "ready": true, "restartCount": 0, "started": true, "state": {"running": {"startedAt": "2022-07-17T15:32:08Z"}}}, {"containerID": "containerd://9ac701cfb4862b7fb6464be206d4ee58af0ff5e025d7e0f5d49f840a5e3008b8", "image": "docker.io/hyperledger/fabric-peer:2.2.2", "imageID": "docker.io/hyperledger/fabric-peer@sha256:640940fc59e262f2f4e5ec983f216811aa9521117abfdc17b3a68bd9e1e88bce", "lastState": {}, "name": "peer0", "ready": true, "restartCount": 0, "started": true, "state": {"running": {"startedAt": "2022-07-17T15:29:14Z"}}}], "hostIP": "10.224.0.4", "initContainerStatuses": [{"containerID": "containerd://a21ff964080c2c8230f337979e8610857fe54f21753a94fd43de3ea980f47955", "image": "docker.io/hyperledgerlabs/alpine-utils:1.0", "imageID": "docker.io/hyperledgerlabs/alpine-utils@sha256:cab1d1566ddaa28e482b5eeda7426791bdf607cee41e2b752ccc566553810f74", "lastState": {}, "name": "certificates-init", "ready": true, "restartCount": 0, "state": {"terminated": {"containerID": "containerd://a21ff964080c2c8230f337979e8610857fe54f21753a94fd43de3ea980f47955", "exitCode": 0, "finishedAt": "2022-07-17T15:28:41Z", "reason": "Completed", "startedAt": "2022-07-17T15:28:41Z"}}}], "phase": "Running", "podIP": "10.244.2.3", "podIPs": [{"ip": "10.244.2.3"}], "qosClass": "Burstable", "startTime": "2022-07-17T15:28:07Z"}}]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Create Value files for Organization Peers] *******************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/peers/tasks/main.yaml:14

TASK [helm_component : Ensures /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier dir exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:14
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier", "size": 4096, "state": "directory", "uid": 0}

TASK [helm_component : create value file for values-peer0] *********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:23
ok: [localhost] => {"changed": false, "checksum": "a3f1c30ad1f7943ce1d3b77ef3b6bd263f40ef35", "dest": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer0.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer0.yaml", "size": 1963, "state": "file", "uid": 0}

TASK [Helm lint] ***************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:32

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
ok: [localhost] => {"changed": false, "stat": {"atime": 1658071943.1661642, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "checksum": "a3f1c30ad1f7943ce1d3b77ef3b6bd263f40ef35", "ctime": 1658071942.6461668, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 3627585, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658071942.414168, "nlink": 1, "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer0.yaml", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 1963, "uid": 0, "version": "2674551691", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [Check or create test directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:22

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"atime": 1658074423.378228, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "ctime": 1658074718.684886, "dev": 64513, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626754, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658074718.684886, "nlink": 2, "path": "./build/test", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "version": "4197237393", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:31
ok: [localhost] => {"ansible_facts": {"apiVersion": "helm.fluxcd.io/v1", "kind": "HelmRelease", "metadata": {"annotations": {"fluxcd.io/automated": "false"}, "name": "carrier-peer0", "namespace": "carrier-net"}, "spec": {"chart": {"git": "ssh://git@github.com/adityajoshi12/bevel.git", "path": "platforms/hyperledger-fabric/charts/peernode", "ref": "test"}, "releaseName": "carrier-peer0", "values": {"annotations": {"deployment": null, "pvc": null, "service": null}, "config": {"pod": {"resources": {"limits": {"cpu": 1, "memory": "512M"}, "requests": {"cpu": 0.5, "memory": "512M"}}}}, "metadata": {"images": {"alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "couchdb": "couchdb:3.1", "peer": "hyperledger/fabric-peer:2.2.2"}, "namespace": "carrier-net"}, "peer": {"builder": "hyperledger/fabric-ccenv:2.2.2", "couchdb": {"username": "carrier-user"}, "gossipexternalendpoint": "peer0.carrier-net:7051", "gossippeeraddress": "peer0.carrier-net:7051", "localmspid": "carrierMSP", "loglevel": "info", "name": "peer0", "tlsstatus": true}, "proxy": {"external_url_suffix": "develop.local.com", "provider": "none"}, "service": {"ports": {"couchdb": {"clusteripport": 5984}, "events": {"clusteripport": 7053}, "grpc": {"clusteripport": 7051}}, "servicetype": "ClusterIP"}, "storage": {"couchdb": {"storageclassname": "carriersc", "storagesize": "1Gi"}, "peer": {"storageclassname": "carriersc", "storagesize": "512Mi"}}, "vault": {"address": "http://20.197.63.209:8200", "authpath": "devcarrier-net-auth", "imagesecretname": "regcred", "role": "vault-role", "secretambassador": "secretv2/data/crypto/peerOrganizations/carrier-net/ambassador", "secretcouchdbpass": "secretv2/data/credentials/carrier-net/couchdb/carrier?user", "secretprefix": "secretv2/data/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net", "serviceaccountname": "vault-auth"}}}}, "ansible_included_var_files": ["/home/bevel/platforms/hyperledger-fabric/releases/dev/carrier/carrier/values-peer0.yaml"], "changed": false}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:36
ok: [localhost] => {"changed": false, "checksum": "e2e108b64ebeadd2e2385bbcdea43ccc7c2378e5", "dest": "./build/test/carrier-peer0.yaml", "gid": 0, "group": "root", "md5sum": "23b3a4902134f1b4be460dae329f9a32", "mode": "0644", "owner": "root", "size": 1554, "src": "/root/.ansible/tmp/ansible-tmp-1658074727.8784325-39367-157161730078197/source", "state": "file", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:42
changed: [localhost] => {"changed": true, "cmd": "helm lint -f \"./build/test/carrier-peer0.yaml\" \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/peernode\"\n", "delta": "0:00:00.085756", "end": "2022-07-17 16:18:48.907069", "msg": "", "rc": 0, "start": "2022-07-17 16:18:48.821313", "stderr": "", "stderr_lines": [], "stdout": "==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/peernode\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, 0 chart(s) failed", "stdout_lines": ["==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/peernode", "[INFO] Chart.yaml: icon is recommended", "", "1 chart(s) linted, 0 chart(s) failed"]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/peers/tasks/main.yaml:33

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing Peer files\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.554441", "end": "2022-07-17 16:18:52.538135", "msg": "", "rc": 0, "start": "2022-07-17 16:18:49.983694", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   cafaa7e..c8c2b8b  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   cafaa7e..c8c2b8b  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main c8c2b8b] [ci skip] Pushing Peer files\n 1 file changed, 132 insertions(+)", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main c8c2b8b] [ci skip] Pushing Peer files", " 1 file changed, 132 insertions(+)"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main c8c2b8b] [ci skip] Pushing Peer files",
        " 1 file changed, 132 insertions(+)"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   cafaa7e..c8c2b8b  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost

TASK [Waiting for peer pod {{ peer.name }} in {{ item.name | lower }}-net] *****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/peers/tasks/main.yaml:45
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod peer0 in carrier-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:11
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:28
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod peer0 in carrier-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:42
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"annotations": {"checksum/config": "89c6818ff78d4f1d2f77470025a9cdd58eaf46edd9b8991ce3a4b24c62b1f0df"}, "creationTimestamp": "2022-07-17T15:34:10Z", "generateName": "peer0-", "labels": {"app": "peer0", "app.kubernetes.io/instance": "carrier-peer0", "app.kubernetes.io/name": "peer0", "controller-revision-hash": "peer0-79ffbbdf96", "helm.sh/chart": "peernode-0.2.0", "statefulset.kubernetes.io/pod-name": "peer0-0"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:checksum/config": {}}, "f:generateName": {}, "f:labels": {".": {}, "f:app": {}, "f:app.kubernetes.io/instance": {}, "f:app.kubernetes.io/name": {}, "f:controller-revision-hash": {}, "f:helm.sh/chart": {}, "f:statefulset.kubernetes.io/pod-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"ba788b3c-8ef6-4dca-b88a-5b8801680c5e\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {"f:containers": {"k:{\"name\":\"couchdb\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"COUCHDB_USER\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":5984,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:protocol": {}}}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/etc/hyperledger/fabric/crypto\"}": {".": {}, "f:mountPath": {}, "f:name": {}}, "k:{\"mountPath\":\"/opt/couchdb/data\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}, "k:{\"name\":\"grpc-web\"}": {".": {}, "f:env": {".": {}, "k:{\"name\":\"BACKEND_ADDRESS\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"BACKEND_TLS\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"BACKEND_TLS_CA_FILES\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"SERVER_BIND_ADDRESS\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"SERVER_HTTP_DEBUG_PORT\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"SERVER_HTTP_MAX_READ_TIMEOUT\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"SERVER_HTTP_MAX_WRITE_TIMEOUT\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"SERVER_HTTP_TLS_PORT\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"SERVER_TLS_CERT_FILE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"SERVER_TLS_KEY_FILE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"USE_WEBSOCKETS\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":7443,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/certs\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}, "k:{\"name\":\"peer0\"}": {".": {}, "f:args": {}, "f:command": {}, "f:envFrom": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":7051,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}, "k:{\"containerPort\":7053,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}, "k:{\"containerPort\":9443,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}}, "f:resources": {".": {}, "f:limits": {".": {}, "f:cpu": {}, "f:memory": {}}, "f:requests": {".": {}, "f:cpu": {}, "f:memory": {}}}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/etc/hyperledger/fabric/NodeOUconfig\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/etc/hyperledger/fabric/crypto\"}": {".": {}, "f:mountPath": {}, "f:name": {}}, "k:{\"mountPath\":\"/host/var/run/docker.sock\"}": {".": {}, "f:mountPath": {}, "f:name": {}}, "k:{\"mountPath\":\"/var/hyperledger/production\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:hostname": {}, "f:imagePullSecrets": {".": {}, "k:{\"name\":\"regcred\"}": {".": {}, "f:name": {}}}, "f:initContainers": {".": {}, "k:{\"name\":\"certificates-init\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"KUBERNETES_AUTH_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"MOUNT_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ADDR\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_APP_ROLE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_PREFIX\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/secret\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:subdomain": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"certificates\"}": {".": {}, "f:emptyDir": {".": {}, "f:medium": {}}, "f:name": {}}, "k:{\"name\":\"datadir\"}": {".": {}, "f:name": {}, "f:persistentVolumeClaim": {".": {}, "f:claimName": {}}}, "k:{\"name\":\"datadir-couchdb\"}": {".": {}, "f:name": {}, "f:persistentVolumeClaim": {".": {}, "f:claimName": {}}}, "k:{\"name\":\"dockersocket\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}, "k:{\"name\":\"peer0-msp-config-volume\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:items": {}, "f:name": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T15:34:10Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {".": {}, "k:{\"type\":\"PodScheduled\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}}}, "manager": "kube-scheduler", "operation": "Update", "time": "2022-07-17T15:34:10Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:initContainerStatuses": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.2.5\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "time": "2022-07-17T15:34:48Z"}], "name": "peer0-0", "namespace": "carrier-net", "ownerReferences": [{"apiVersion": "apps/v1", "blockOwnerDeletion": true, "controller": true, "kind": "StatefulSet", "name": "peer0", "uid": "ba788b3c-8ef6-4dca-b88a-5b8801680c5e"}], "resourceVersion": "76968", "uid": "8f1f4bba-610a-41bd-b194-3b7a71e2fa34"}, "spec": {"containers": [{"args": ["chown -R couchdb:couchdb /opt/couchdb\nchmod -R 0770 /opt/couchdb/data\nchmod 664 /opt/couchdb/etc/*.ini\nchmod 664 /opt/couchdb/etc/local.d/*.ini\nchmod 775 /opt/couchdb/etc/*.d\nif [ -e /etc/hyperledger/fabric/crypto/user_cred ] && [ -z $COUCHDB_USER ]\nthen\n  echo \" Error! Please provide username for the password \"\n  exit 1\n  break\nelif [ -e /etc/hyperledger/fabric/crypto/user_cred ] && [ ! -z $COUCHDB_USER ]\nthen\n  export COUCHDB_PASSWORD=`cat /etc/hyperledger/fabric/crypto/user_cred`\n  break\nelif [ ! -e /etc/hyperledger/fabric/crypto/user_cred ] && [ ! -z $COUCHDB_USER ]\nthen\n  echo \" Error! Please provide password for username $COUCHDB_USER \"\n  exit 1\n  break\nelse\n  :\nfi\ntini -- /docker-entrypoint.sh /opt/couchdb/bin/couchdb"], "command": ["sh", "-c"], "env": [{"name": "COUCHDB_USER", "value": "carrier-user"}], "image": "couchdb:3.1", "imagePullPolicy": "IfNotPresent", "name": "couchdb", "ports": [{"containerPort": 5984, "protocol": "TCP"}], "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/opt/couchdb/data", "name": "datadir-couchdb"}, {"mountPath": "/etc/hyperledger/fabric/crypto", "name": "certificates"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-684gx", "readOnly": true}]}, {"args": ["cp /etc/hyperledger/fabric/NodeOUconfig/mspconfig  /etc/hyperledger/fabric/crypto/msp/config.yaml\nexport CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=`cat /etc/hyperledger/fabric/crypto/user_cred`\npeer node start"], "command": ["sh", "-c"], "envFrom": [{"configMapRef": {"name": "peer0-config"}}], "image": "hyperledger/fabric-peer:2.2.2", "imagePullPolicy": "IfNotPresent", "name": "peer0", "ports": [{"containerPort": 7051, "name": "grpc", "protocol": "TCP"}, {"containerPort": 7053, "name": "events", "protocol": "TCP"}, {"containerPort": 9443, "name": "operations", "protocol": "TCP"}], "resources": {"limits": {"cpu": "1", "memory": "512M"}, "requests": {"cpu": "500m", "memory": "512M"}}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/var/hyperledger/production", "name": "datadir"}, {"mountPath": "/host/var/run/docker.sock", "name": "dockersocket"}, {"mountPath": "/etc/hyperledger/fabric/crypto", "name": "certificates"}, {"mountPath": "/etc/hyperledger/fabric/NodeOUconfig", "name": "peer0-msp-config-volume", "readOnly": true}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-684gx", "readOnly": true}]}, {"env": [{"name": "BACKEND_ADDRESS", "value": "peer0.carrier-net:7051"}, {"name": "SERVER_TLS_CERT_FILE", "value": "/certs/tls/server.crt"}, {"name": "SERVER_TLS_KEY_FILE", "value": "/certs/tls/server.key"}, {"name": "BACKEND_TLS_CA_FILES", "value": "/certs/tls/ca.crt"}, {"name": "SERVER_BIND_ADDRESS", "value": "0.0.0.0"}, {"name": "SERVER_HTTP_DEBUG_PORT", "value": "8080"}, {"name": "SERVER_HTTP_TLS_PORT", "value": "7443"}, {"name": "BACKEND_TLS", "value": "true"}, {"name": "SERVER_HTTP_MAX_WRITE_TIMEOUT", "value": "5m"}, {"name": "SERVER_HTTP_MAX_READ_TIMEOUT", "value": "5m"}, {"name": "USE_WEBSOCKETS", "value": "true"}], "image": "ghcr.io/hyperledger-labs/grpc-web:latest", "imagePullPolicy": "IfNotPresent", "name": "grpc-web", "ports": [{"containerPort": 7443, "name": "grpc-web", "protocol": "TCP"}], "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/certs", "name": "certificates"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-684gx", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "hostname": "peer0-0", "imagePullSecrets": [{"name": "regcred"}], "initContainers": [{"args": ["#!/usr/bin/env sh\nvalidateVaultResponse () {\n  if echo ${2} | grep \"errors\"; then\n    echo \"ERROR: unable to retrieve ${1}: ${2}\"\n    exit 1\n  fi\n  if  [ \"$3\" == \"LOOKUPSECRETRESPONSE\" ]\n  then\n    http_code=$(curl -sS -o /dev/null -w \"%{http_code}\" \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key})\n    curl_response=$?\n    if test \"$http_code\" != \"200\" ; then\n        echo \"Http response code from Vault - $http_code\"\n        if test \"$curl_response\" != \"0\"; then\n           echo \"Error: curl command failed with error code - $curl_response\"\n           exit 1\n        fi\n    fi\n  fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')        \nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nvault_secret_key=\"${VAULT_SECRET_PREFIX}/tls\"\necho \"Getting TLS certificates from Vault using key $vault_secret_key\"\n\nOUTPUT_PATH=\"${MOUNT_PATH}/tls\"\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\n\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\n\nTLS_CA_CERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"ca.crt\"]')\nTLS_SERVER_CERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"server.crt\"]')\nTLS_SERVER_KEY=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"server.key\"]')\n\nmkdir -p ${OUTPUT_PATH}\necho \"${TLS_CA_CERT}\" >> ${OUTPUT_PATH}/ca.crt\necho \"${TLS_SERVER_CERT}\" >> ${OUTPUT_PATH}/server.crt\necho \"${TLS_SERVER_KEY}\" >> ${OUTPUT_PATH}/server.key\n\nvault_secret_key=\"${VAULT_SECRET_PREFIX}/msp\"\necho \"Getting MSP certificates from Vault using key $vault_secret_key\"\n\nOUTPUT_PATH=\"${MOUNT_PATH}/msp\"\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\n\nADMINCERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"admincerts\"]')\nCACERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"cacerts\"]')\nKEYSTORE=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"keystore\"]')\nSIGNCERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"signcerts\"]')\nTLSCACERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"tlscacerts\"]')\n\nmkdir -p ${OUTPUT_PATH}/admincerts\nmkdir -p ${OUTPUT_PATH}/cacerts\nmkdir -p ${OUTPUT_PATH}/keystore\nmkdir -p ${OUTPUT_PATH}/signcerts\nmkdir -p ${OUTPUT_PATH}/tlscacerts\n\necho \"${ADMINCERT}\" >> ${OUTPUT_PATH}/admincerts/admin.crt\necho \"${CACERTS}\" >> ${OUTPUT_PATH}/cacerts/ca.crt\necho \"${KEYSTORE}\" >> ${OUTPUT_PATH}/keystore/server.key\necho \"${SIGNCERTS}\" >> ${OUTPUT_PATH}/signcerts/server.crt\necho \"${TLSCACERTS}\" >> ${OUTPUT_PATH}/tlscacerts/tlsca.crt\n\n# COUCH_DB CREDENTIALS\necho \"Getting couch db credentials\"\nSECRET_COUCHDB_PASS=secretv2/data/credentials/carrier-net/couchdb/carrier?user\nif [ ! -z $SECRET_COUCHDB_PASS ]\nthen\n  vault_secret_key=$(echo ${SECRET_COUCHDB_PASS} |awk -F \"?\" '{print $1}')\n  vault_data_key=$(echo ${SECRET_COUCHDB_PASS} |awk -F \"?\" '{print $2}')\n  LOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\n  validateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\n  PASSWORD=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data.data[\\\"${vault_data_key}\\\"]\")\n  echo \"${PASSWORD}\" >> ${MOUNT_PATH}/user_cred \nfi            "], "command": ["sh", "-c"], "env": [{"name": "VAULT_ADDR", "value": "http://20.197.63.209:8200"}, {"name": "VAULT_SECRET_PREFIX", "value": "secretv2/data/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net"}, {"name": "KUBERNETES_AUTH_PATH", "value": "devcarrier-net-auth"}, {"name": "VAULT_APP_ROLE", "value": "vault-role"}, {"name": "MOUNT_PATH", "value": "/secret"}], "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "imagePullPolicy": "IfNotPresent", "name": "certificates-init", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/secret", "name": "certificates"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-684gx", "readOnly": true}]}], "nodeName": "aks-agentpool-84293659-vmss000002", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "vault-auth", "serviceAccountName": "vault-auth", "subdomain": "peer0", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoSchedule", "key": "node.kubernetes.io/memory-pressure", "operator": "Exists"}], "volumes": [{"name": "datadir-couchdb", "persistentVolumeClaim": {"claimName": "datadir-couchdb-peer0-0"}}, {"name": "datadir", "persistentVolumeClaim": {"claimName": "datadir-peer0-0"}}, {"emptyDir": {"medium": "Memory"}, "name": "certificates"}, {"hostPath": {"path": "/var/run/docker.sock", "type": ""}, "name": "dockersocket"}, {"configMap": {"defaultMode": 420, "items": [{"key": "mspconfig", "path": "mspconfig"}], "name": "peer0-msp-config"}, "name": "peer0-msp-config-volume"}, {"name": "kube-api-access-684gx", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:34:47Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:34:48Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:34:48Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:34:13Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://4fc83da756d3419d9105c87f6c36dd85ebc3e353ec154ba302dbc30fa7aab290", "image": "docker.io/library/couchdb:3.1", "imageID": "docker.io/library/couchdb@sha256:a7964937f58f25eb1e53cb3f4342590fc63939a85f8f5627f03415503d8ea7b9", "lastState": {}, "name": "couchdb", "ready": true, "restartCount": 0, "started": true, "state": {"running": {"startedAt": "2022-07-17T15:34:47Z"}}}, {"containerID": "containerd://10ee7e5aa062ec83181149d91f5c7d1391e968d8641dca13007fe384de31f4d7", "image": "ghcr.io/hyperledger-labs/grpc-web:latest", "imageID": "ghcr.io/hyperledger-labs/grpc-web@sha256:1d14972d0bd719c74071302f872b4b36419f8023adc974d910247119d39eb398", "lastState": {}, "name": "grpc-web", "ready": true, "restartCount": 0, "started": true, "state": {"running": {"startedAt": "2022-07-17T15:34:47Z"}}}, {"containerID": "containerd://d8c39ccb971369de6b4691b87bf61c6c3992eb062c9007f3a8fadd704475d99b", "image": "docker.io/hyperledger/fabric-peer:2.2.2", "imageID": "docker.io/hyperledger/fabric-peer@sha256:640940fc59e262f2f4e5ec983f216811aa9521117abfdc17b3a68bd9e1e88bce", "lastState": {}, "name": "peer0", "ready": true, "restartCount": 0, "started": true, "state": {"running": {"startedAt": "2022-07-17T15:34:47Z"}}}], "hostIP": "10.224.0.4", "initContainerStatuses": [{"containerID": "containerd://e2e7513e8a9e3af84efa9753051e6b99ccf28583aa53ad02f96a9cbdc9477345", "image": "docker.io/hyperledgerlabs/alpine-utils:1.0", "imageID": "docker.io/hyperledgerlabs/alpine-utils@sha256:cab1d1566ddaa28e482b5eeda7426791bdf607cee41e2b752ccc566553810f74", "lastState": {}, "name": "certificates-init", "ready": true, "restartCount": 0, "state": {"terminated": {"containerID": "containerd://e2e7513e8a9e3af84efa9753051e6b99ccf28583aa53ad02f96a9cbdc9477345", "exitCode": 0, "finishedAt": "2022-07-17T15:34:46Z", "reason": "Completed", "startedAt": "2022-07-17T15:34:46Z"}}}], "phase": "Running", "podIP": "10.244.2.5", "podIPs": [{"ip": "10.244.2.5"}], "qosClass": "Burstable", "startTime": "2022-07-17T15:34:13Z"}}]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Create all create-channel jobs] ******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:196

TASK [create/channels : Call valuefile when participant is creator] ************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channels/tasks/main.yaml:13
included: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channels/tasks/valuefile.yaml for localhost => (item=(censored due to no_log))

TASK [create/channels : Check orderer pod is up] *******************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channels/tasks/valuefile.yaml:12
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.manufacturer-net:7054', 'certificate': '/home/bevel/build/manufacturer/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net:7051', 'certificate': '/home/bevel/build/manufacturer/peer0.crt', 'cli': 'enabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain1', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "ordererorg", "changed": false, "ordererorg": {"ca_data": {"certificate": "/home/bevel/build/manufacturer/server.crt", "url": "ca.manufacturer-net:7054"}, "cloud_provider": "azure", "country": "CH", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "Zurich", "name": "manufacturer", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=CH/ST=Zurich/L=Zurich/O=Manufacturer/CN=ca.manufacturer-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/manufacturer/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain1", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "enabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.manufacturer-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.manufacturer-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "Zurich", "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
skipping: [localhost] => (item={'organization': None, 'name': 'carrier', 'country': 'GB', 'state': 'London', 'location': 'London', 'subject': 'O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB', 'type': 'peer', 'external_url_suffix': 'develop.local.com', 'org_status': 'new', 'ca_data': {'url': 'ca.carrier-net:7054', 'certificate': '/home/bevel/build/carrier/server.crt'}, 'cloud_provider': 'azure', 'k8s': {'region': 'blr1', 'context': 'bevel', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://20.197.63.209:8200', 'root_token': 'hvs.qpb9TyUVIkdBuBDMbyAmCEHy', 'secret_path': 'secretv2'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/adityajoshi12/bevel.git', 'branch': 'test', 'release_dir': 'platforms/hyperledger-fabric/releases/dev', 'chart_source': 'platforms/hyperledger-fabric/charts', 'git_repo': 'github.com/adityajoshi12/bevel.git', 'username': 'adityajoshi12', 'password': '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', 'email': 'adityaprakashjoshi1@gmail.com', 'private_key': '/home/bevel/build/gitops'}, 'users': [{'user': None, 'identity': 'user1', 'attributes': [{'key': 'hf.Revoker', 'value': 'true'}]}], 'services': {'ca': {'name': 'ca', 'subject': '/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net', 'type': 'ca', 'grpc': {'port': 7054}}, 'peers': [{'peer': None, 'name': 'peer0', 'type': 'anchor', 'gossippeeraddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net:7051', 'certificate': '/home/bevel/build/carrier/peer0.crt', 'cli': 'disabled', 'grpc': {'port': 7051}, 'events': {'port': 7053}, 'couchdb': {'port': 5984}, 'restserver': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}, 'chaincode': {'name': 'supplychain', 'version': '1', 'maindirectory': 'cmd', 'lang': 'golang', 'repository': {'username': 'adityajoshi12', 'password': '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', 'url': 'github.com/adityajoshi12/bevel.git', 'branch': 'main', 'path': 'examples/supplychain-app/fabric/chaincode_rest_server/chaincode/'}, 'arguments': '\\"init\\",\\"\\"', 'endorsements': ''}}]}})  => {"ansible_loop_var": "ordererorg", "changed": false, "ordererorg": {"ca_data": {"certificate": "/home/bevel/build/carrier/server.crt", "url": "ca.carrier-net:7054"}, "cloud_provider": "azure", "country": "GB", "external_url_suffix": "develop.local.com", "gitops": {"branch": "test", "chart_source": "platforms/hyperledger-fabric/charts", "email": "adityaprakashjoshi1@gmail.com", "git_protocol": "ssh", "git_repo": "github.com/adityajoshi12/bevel.git", "git_url": "ssh://git@github.com/adityajoshi12/bevel.git", "password": "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", "private_key": "/home/bevel/build/gitops", "release_dir": "platforms/hyperledger-fabric/releases/dev", "username": "adityajoshi12"}, "k8s": {"config_file": "/home/bevel/build/config", "context": "bevel", "region": "blr1"}, "location": "London", "name": "carrier", "org_status": "new", "organization": null, "services": {"ca": {"grpc": {"port": 7054}, "name": "ca", "subject": "/C=GB/ST=London/L=London/O=Carrier/CN=ca.carrier-net", "type": "ca"}, "peers": [{"certificate": "/home/bevel/build/carrier/peer0.crt", "chaincode": {"arguments": "\\\"init\\\",\\\"\\\"", "endorsements": "", "lang": "golang", "maindirectory": "cmd", "name": "supplychain", "repository": {"branch": "main", "password": "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", "path": "examples/supplychain-app/fabric/chaincode_rest_server/chaincode/", "url": "github.com/adityajoshi12/bevel.git", "username": "adityajoshi12"}, "version": "1"}, "cli": "disabled", "couchdb": {"port": 5984}, "events": {"port": 7053}, "expressapi": {"port": 3000, "targetPort": 3000}, "gossippeeraddress": "peer0.carrier-net:7051", "grpc": {"port": 7051}, "name": "peer0", "peer": null, "peerAddress": "peer0.carrier-net:7051", "restserver": {"port": 20001, "targetPort": 20001}, "type": "anchor"}]}, "state": "London", "subject": "O=Carrier,OU=Carrier,L=51.50/-0.13/London,C=GB", "type": "peer", "users": [{"attributes": [{"key": "hf.Revoker", "value": "true"}], "identity": "user1", "user": null}], "vault": {"root_token": "hvs.qpb9TyUVIkdBuBDMbyAmCEHy", "secret_path": "secretv2", "url": "http://20.197.63.209:8200"}}, "skip_reason": "Conditional result was False"}
included: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channels/tasks/orderercheck.yaml for localhost => (item=(censored due to no_log))

TASK [Waiting for orderer pod {{ orderer.name }} in {{ orderer_namespace }}] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channels/tasks/orderercheck.yaml:7
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod orderer1 in supplychain-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:11
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:28
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod orderer1 in supplychain-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:42
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"annotations": {"checksum/config": "5d400b2c6dc6e1ec634504220f908e0385078b802ec9e1d26d195752f89513b4"}, "creationTimestamp": "2022-07-17T15:28:03Z", "generateName": "orderer1-", "labels": {"app": "orderer1", "app.kubernetes.io/instance": "supplychain-orderer1", "app.kubernetes.io/name": "orderer1", "controller-revision-hash": "orderer1-7594bfd7b7", "helm.sh/chart": "orderernode-0.2.0", "statefulset.kubernetes.io/pod-name": "orderer1-0"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:checksum/config": {}}, "f:generateName": {}, "f:labels": {".": {}, "f:app": {}, "f:app.kubernetes.io/instance": {}, "f:app.kubernetes.io/name": {}, "f:controller-revision-hash": {}, "f:helm.sh/chart": {}, "f:statefulset.kubernetes.io/pod-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"021b82e2-0a36-4a04-8d51-3571d2fd7b2b\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {"f:containers": {"k:{\"name\":\"grpc-web\"}": {".": {}, "f:env": {".": {}, "k:{\"name\":\"BACKEND_ADDRESS\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"BACKEND_TLS\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"BACKEND_TLS_CA_FILES\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"SERVER_BIND_ADDRESS\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"SERVER_HTTP_DEBUG_PORT\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"SERVER_HTTP_MAX_READ_TIMEOUT\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"SERVER_HTTP_MAX_WRITE_TIMEOUT\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"SERVER_HTTP_TLS_PORT\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"SERVER_TLS_CERT_FILE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"SERVER_TLS_KEY_FILE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"USE_WEBSOCKETS\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":7443,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/certs\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}, "k:{\"name\":\"orderer1\"}": {".": {}, "f:command": {}, "f:envFrom": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":7050,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:protocol": {}}, "k:{\"containerPort\":9443,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}}, "f:resources": {".": {}, "f:limits": {".": {}, "f:cpu": {}, "f:memory": {}}, "f:requests": {".": {}, "f:cpu": {}, "f:memory": {}}}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/var/hyperledger/orderer/crypto\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/var/hyperledger/orderer/genesis\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/var/hyperledger/production/orderer\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}, "f:workingDir": {}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:hostname": {}, "f:imagePullSecrets": {".": {}, "k:{\"name\":\"regcred\"}": {".": {}, "f:name": {}}}, "f:initContainers": {".": {}, "k:{\"name\":\"certificates-init\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"KUBERNETES_AUTH_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"MOUNT_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ADDR\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_APP_ROLE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_PREFIX\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/secret\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}, "k:{\"name\":\"kafka-healthcheck\"}": {".": {}, "f:args": {}, "f:command": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:subdomain": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"certificates\"}": {".": {}, "f:emptyDir": {".": {}, "f:medium": {}}, "f:name": {}}, "k:{\"name\":\"datadir\"}": {".": {}, "f:name": {}, "f:persistentVolumeClaim": {".": {}, "f:claimName": {}}}, "k:{\"name\":\"orderer1-genesis-volume\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:items": {}, "f:name": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T15:28:03Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {".": {}, "k:{\"type\":\"PodScheduled\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}}}, "manager": "kube-scheduler", "operation": "Update", "time": "2022-07-17T15:28:03Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:initContainerStatuses": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.2.4\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "time": "2022-07-17T15:32:08Z"}], "name": "orderer1-0", "namespace": "supplychain-net", "ownerReferences": [{"apiVersion": "apps/v1", "blockOwnerDeletion": true, "controller": true, "kind": "StatefulSet", "name": "orderer1", "uid": "021b82e2-0a36-4a04-8d51-3571d2fd7b2b"}], "resourceVersion": "76330", "uid": "193e77d9-8cda-42d4-8e10-600cf3d4f7cd"}, "spec": {"containers": [{"command": ["sh", "-c", "cat /var/hyperledger/orderer/genesis/genesis.block.base64 | base64 -d > /var/hyperledger/orderer/orderer.genesis.block && orderer"], "envFrom": [{"configMapRef": {"name": "orderer1-config"}}], "image": "hyperledger/fabric-orderer:2.2.2", "imagePullPolicy": "IfNotPresent", "name": "orderer1", "ports": [{"containerPort": 7050, "protocol": "TCP"}, {"containerPort": 9443, "name": "operations", "protocol": "TCP"}], "resources": {"limits": {"cpu": "1", "memory": "512M"}, "requests": {"cpu": "500m", "memory": "512M"}}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/var/hyperledger/production/orderer", "name": "datadir"}, {"mountPath": "/var/hyperledger/orderer/genesis", "name": "orderer1-genesis-volume", "readOnly": true}, {"mountPath": "/var/hyperledger/orderer/crypto", "name": "certificates", "readOnly": true}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-79ppk", "readOnly": true}], "workingDir": "/opt/gopath/src/github.com/hyperledger/fabric"}, {"env": [{"name": "BACKEND_ADDRESS", "value": "orderer1.supplychain-net:7050"}, {"name": "SERVER_TLS_CERT_FILE", "value": "/certs/tls/server.crt"}, {"name": "SERVER_TLS_KEY_FILE", "value": "/certs/tls/server.key"}, {"name": "BACKEND_TLS_CA_FILES", "value": "/certs/tls/ca.crt"}, {"name": "SERVER_BIND_ADDRESS", "value": "0.0.0.0"}, {"name": "SERVER_HTTP_DEBUG_PORT", "value": "8080"}, {"name": "SERVER_HTTP_TLS_PORT", "value": "7443"}, {"name": "BACKEND_TLS", "value": "true"}, {"name": "SERVER_HTTP_MAX_WRITE_TIMEOUT", "value": "5m"}, {"name": "SERVER_HTTP_MAX_READ_TIMEOUT", "value": "5m"}, {"name": "USE_WEBSOCKETS", "value": "true"}], "image": "ghcr.io/hyperledger-labs/grpc-web:latest", "imagePullPolicy": "IfNotPresent", "name": "grpc-web", "ports": [{"containerPort": 7443, "name": "grpc-web", "protocol": "TCP"}], "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/certs", "name": "certificates"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-79ppk", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "hostname": "orderer1-0", "imagePullSecrets": [{"name": "regcred"}], "initContainers": [{"args": ["#!/usr/bin/env sh\nif [ raft == kafka ]\nthen\nCOUNTER=1\nFLAG=true\nKAFKACOUNT=0\nCOUNT=0\n\nwhile [ \"$COUNTER\" -le  ]\ndo\n   \n   if [ \"$FLAG\" == false ]\n   then\n      echo \"$KAFKACOUNT kafka brokers out of $COUNT are up and running!\"\n      echo \"Retry attempted $COUNTER times, retrying after  seconds\"\n      COUNTER=`expr \"$COUNTER\" + 1`\n      sleep \n\n   else\n      echo \"SUCCESS!\"\n      echo \"All $KAFKACOUNT kafka broker are up and running!\"\n      exit 0\n      break\n   fi\ndone\nif [ \"$COUNTER\" -gt  ] || [ \"$FLAG\" == false ]\nthen\n   echo \"Retry attempted $COUNTER times, no kafka brokers are up and running. Giving up!\"\n   exit 1\n   break\n\nfi\nfi"], "command": ["sh", "-c"], "image": "busybox", "imagePullPolicy": "IfNotPresent", "name": "kafka-healthcheck", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-79ppk", "readOnly": true}]}, {"args": ["#!/usr/bin/env sh\nvalidateVaultResponse () {\n  if echo ${2} | grep \"errors\"; then\n    echo \"ERROR: unable to retrieve ${1}: ${2}\"\n    exit 1\n  fi\n  if  [ \"$3\" == \"LOOKUPSECRETRESPONSE\" ]\n  then\n    http_code=$(curl -sS -o /dev/null -w \"%{http_code}\" \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key})\n    curl_response=$?\n    if test \"$http_code\" != \"200\" ; then\n        echo \"Http response code from Vault - $http_code\"\n        if test \"$curl_response\" != \"0\"; then\n           echo \"Error: curl command failed with error code - $curl_response\"\n           exit 1\n        fi\n    fi\n  fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\n\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')\n\nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nvault_secret_key=\"${VAULT_SECRET_PREFIX}/tls\"\necho \"Getting TLS certificates from Vault using key $vault_secret_key\"\n\nOUTPUT_PATH=\"${MOUNT_PATH}/tls\"\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\n\nTLS_CA_CERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"ca.crt\"]')\nTLS_SERVER_CERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"server.crt\"]')\nTLS_SERVER_KEY=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"server.key\"]')\n\nmkdir -p ${OUTPUT_PATH}\necho \"${TLS_CA_CERT}\" >> ${OUTPUT_PATH}/ca.crt\necho \"${TLS_SERVER_CERT}\" >> ${OUTPUT_PATH}/server.crt\necho \"${TLS_SERVER_KEY}\" >> ${OUTPUT_PATH}/server.key\n\nvault_secret_key=\"${VAULT_SECRET_PREFIX}/msp\"\necho \"Getting MSP certificates from Vault using key $vault_secret_key\"\n\nOUTPUT_PATH=\"${MOUNT_PATH}/msp\"\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\n\nADMINCERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"admincerts\"]')\nCACERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"cacerts\"]')\nKEYSTORE=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"keystore\"]')\nSIGNCERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"signcerts\"]')\nTLSCACERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"tlscacerts\"]')\n\nmkdir -p ${OUTPUT_PATH}/admincerts\nmkdir -p ${OUTPUT_PATH}/cacerts\nmkdir -p ${OUTPUT_PATH}/keystore\nmkdir -p ${OUTPUT_PATH}/signcerts\nmkdir -p ${OUTPUT_PATH}/tlscacerts\n\necho \"${ADMINCERT}\" >> ${OUTPUT_PATH}/admincerts/admin.crt\necho \"${CACERTS}\" >> ${OUTPUT_PATH}/cacerts/ca.crt\necho \"${KEYSTORE}\" >> ${OUTPUT_PATH}/keystore/server.key\necho \"${SIGNCERTS}\" >> ${OUTPUT_PATH}/signcerts/server.crt\necho \"${TLSCACERTS}\" >> ${OUTPUT_PATH}/tlscacerts/tlsca.crt"], "command": ["sh", "-c"], "env": [{"name": "VAULT_ADDR", "value": "http://20.197.63.209:8200"}, {"name": "VAULT_SECRET_PREFIX", "value": "secretv2/data/crypto/ordererOrganizations/supplychain-net/orderers/orderer1.supplychain-net"}, {"name": "KUBERNETES_AUTH_PATH", "value": "devsupplychain-net-auth"}, {"name": "VAULT_APP_ROLE", "value": "vault-role"}, {"name": "MOUNT_PATH", "value": "/secret"}], "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "imagePullPolicy": "IfNotPresent", "name": "certificates-init", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/secret", "name": "certificates"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-79ppk", "readOnly": true}]}], "nodeName": "aks-agentpool-84293659-vmss000002", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "vault-auth", "serviceAccountName": "vault-auth", "subdomain": "orderer1", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoSchedule", "key": "node.kubernetes.io/memory-pressure", "operator": "Exists"}], "volumes": [{"name": "datadir", "persistentVolumeClaim": {"claimName": "datadir-orderer1-0"}}, {"emptyDir": {"medium": "Memory"}, "name": "certificates"}, {"configMap": {"defaultMode": 420, "items": [{"key": "genesis.block.base64", "path": "genesis.block.base64"}], "name": "genesis-block-orderer1"}, "name": "orderer1-genesis-volume"}, {"name": "kube-api-access-79ppk", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:28:48Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:32:08Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:32:08Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:28:07Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://fd8e667263152909daab770ddf5fa0081d6178603f37d3d1506cae44040b8cb1", "image": "ghcr.io/hyperledger-labs/grpc-web:latest", "imageID": "ghcr.io/hyperledger-labs/grpc-web@sha256:1d14972d0bd719c74071302f872b4b36419f8023adc974d910247119d39eb398", "lastState": {}, "name": "grpc-web", "ready": true, "restartCount": 0, "started": true, "state": {"running": {"startedAt": "2022-07-17T15:32:07Z"}}}, {"containerID": "containerd://65c1ebe47355a950f7a7c7f3933acde11e8c2cf50aaa0ed8efd0fdce0799212f", "image": "docker.io/hyperledger/fabric-orderer:2.2.2", "imageID": "docker.io/hyperledger/fabric-orderer@sha256:aa3fe23fb03843a7b8d5e9655dab4f58f033734cc5643a1b9514d8c4e62d702d", "lastState": {}, "name": "orderer1", "ready": true, "restartCount": 0, "started": true, "state": {"running": {"startedAt": "2022-07-17T15:29:07Z"}}}], "hostIP": "10.224.0.4", "initContainerStatuses": [{"containerID": "containerd://84e6890c6b5b289ac2f63feecce5bfe57c015179468412fd873ddce8aab42e65", "image": "docker.io/library/busybox:latest", "imageID": "docker.io/library/busybox@sha256:3614ca5eacf0a3a1bcc361c939202a974b4902b9334ff36eb29ffe9011aaad83", "lastState": {}, "name": "kafka-healthcheck", "ready": true, "restartCount": 0, "state": {"terminated": {"containerID": "containerd://84e6890c6b5b289ac2f63feecce5bfe57c015179468412fd873ddce8aab42e65", "exitCode": 0, "finishedAt": "2022-07-17T15:28:47Z", "reason": "Completed", "startedAt": "2022-07-17T15:28:47Z"}}}, {"containerID": "containerd://fa99843260146659db0ed6fb2a23c47b1a5bf5cc5332d9e043d9d6a490a981b2", "image": "docker.io/hyperledgerlabs/alpine-utils:1.0", "imageID": "docker.io/hyperledgerlabs/alpine-utils@sha256:cab1d1566ddaa28e482b5eeda7426791bdf607cee41e2b752ccc566553810f74", "lastState": {}, "name": "certificates-init", "ready": true, "restartCount": 0, "state": {"terminated": {"containerID": "containerd://fa99843260146659db0ed6fb2a23c47b1a5bf5cc5332d9e043d9d6a490a981b2", "exitCode": 0, "finishedAt": "2022-07-17T15:28:47Z", "reason": "Completed", "startedAt": "2022-07-17T15:28:47Z"}}}], "phase": "Running", "podIP": "10.244.2.4", "podIPs": [{"ip": "10.244.2.4"}], "qosClass": "Burstable", "startTime": "2022-07-17T15:28:07Z"}}]}
META: role_complete for localhost

TASK [create/channels : Check peer pod is up] **********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channels/tasks/valuefile.yaml:24
included: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channels/tasks/peercheck.yaml for localhost => (item=(censored due to no_log))

TASK [Waiting for peer pod {{ peer_name }} in {{ org.name | lower }}-net] ******
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channels/tasks/peercheck.yaml:7
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod peer0 in carrier-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:11
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:28
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Pod peer0 in carrier-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:42
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"annotations": {"checksum/config": "89c6818ff78d4f1d2f77470025a9cdd58eaf46edd9b8991ce3a4b24c62b1f0df"}, "creationTimestamp": "2022-07-17T15:34:10Z", "generateName": "peer0-", "labels": {"app": "peer0", "app.kubernetes.io/instance": "carrier-peer0", "app.kubernetes.io/name": "peer0", "controller-revision-hash": "peer0-79ffbbdf96", "helm.sh/chart": "peernode-0.2.0", "statefulset.kubernetes.io/pod-name": "peer0-0"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:annotations": {".": {}, "f:checksum/config": {}}, "f:generateName": {}, "f:labels": {".": {}, "f:app": {}, "f:app.kubernetes.io/instance": {}, "f:app.kubernetes.io/name": {}, "f:controller-revision-hash": {}, "f:helm.sh/chart": {}, "f:statefulset.kubernetes.io/pod-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"ba788b3c-8ef6-4dca-b88a-5b8801680c5e\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {"f:containers": {"k:{\"name\":\"couchdb\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"COUCHDB_USER\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":5984,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:protocol": {}}}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/etc/hyperledger/fabric/crypto\"}": {".": {}, "f:mountPath": {}, "f:name": {}}, "k:{\"mountPath\":\"/opt/couchdb/data\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}, "k:{\"name\":\"grpc-web\"}": {".": {}, "f:env": {".": {}, "k:{\"name\":\"BACKEND_ADDRESS\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"BACKEND_TLS\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"BACKEND_TLS_CA_FILES\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"SERVER_BIND_ADDRESS\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"SERVER_HTTP_DEBUG_PORT\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"SERVER_HTTP_MAX_READ_TIMEOUT\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"SERVER_HTTP_MAX_WRITE_TIMEOUT\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"SERVER_HTTP_TLS_PORT\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"SERVER_TLS_CERT_FILE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"SERVER_TLS_KEY_FILE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"USE_WEBSOCKETS\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":7443,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/certs\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}, "k:{\"name\":\"peer0\"}": {".": {}, "f:args": {}, "f:command": {}, "f:envFrom": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:ports": {".": {}, "k:{\"containerPort\":7051,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}, "k:{\"containerPort\":7053,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}, "k:{\"containerPort\":9443,\"protocol\":\"TCP\"}": {".": {}, "f:containerPort": {}, "f:name": {}, "f:protocol": {}}}, "f:resources": {".": {}, "f:limits": {".": {}, "f:cpu": {}, "f:memory": {}}, "f:requests": {".": {}, "f:cpu": {}, "f:memory": {}}}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/etc/hyperledger/fabric/NodeOUconfig\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/etc/hyperledger/fabric/crypto\"}": {".": {}, "f:mountPath": {}, "f:name": {}}, "k:{\"mountPath\":\"/host/var/run/docker.sock\"}": {".": {}, "f:mountPath": {}, "f:name": {}}, "k:{\"mountPath\":\"/var/hyperledger/production\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:hostname": {}, "f:imagePullSecrets": {".": {}, "k:{\"name\":\"regcred\"}": {".": {}, "f:name": {}}}, "f:initContainers": {".": {}, "k:{\"name\":\"certificates-init\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"KUBERNETES_AUTH_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"MOUNT_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ADDR\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_APP_ROLE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_SECRET_PREFIX\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/secret\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:subdomain": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"certificates\"}": {".": {}, "f:emptyDir": {".": {}, "f:medium": {}}, "f:name": {}}, "k:{\"name\":\"datadir\"}": {".": {}, "f:name": {}, "f:persistentVolumeClaim": {".": {}, "f:claimName": {}}}, "k:{\"name\":\"datadir-couchdb\"}": {".": {}, "f:name": {}, "f:persistentVolumeClaim": {".": {}, "f:claimName": {}}}, "k:{\"name\":\"dockersocket\"}": {".": {}, "f:hostPath": {".": {}, "f:path": {}, "f:type": {}}, "f:name": {}}, "k:{\"name\":\"peer0-msp-config-volume\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:items": {}, "f:name": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T15:34:10Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {".": {}, "k:{\"type\":\"PodScheduled\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:message": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}}}, "manager": "kube-scheduler", "operation": "Update", "time": "2022-07-17T15:34:10Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:initContainerStatuses": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.2.5\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "time": "2022-07-17T15:34:48Z"}], "name": "peer0-0", "namespace": "carrier-net", "ownerReferences": [{"apiVersion": "apps/v1", "blockOwnerDeletion": true, "controller": true, "kind": "StatefulSet", "name": "peer0", "uid": "ba788b3c-8ef6-4dca-b88a-5b8801680c5e"}], "resourceVersion": "76968", "uid": "8f1f4bba-610a-41bd-b194-3b7a71e2fa34"}, "spec": {"containers": [{"args": ["chown -R couchdb:couchdb /opt/couchdb\nchmod -R 0770 /opt/couchdb/data\nchmod 664 /opt/couchdb/etc/*.ini\nchmod 664 /opt/couchdb/etc/local.d/*.ini\nchmod 775 /opt/couchdb/etc/*.d\nif [ -e /etc/hyperledger/fabric/crypto/user_cred ] && [ -z $COUCHDB_USER ]\nthen\n  echo \" Error! Please provide username for the password \"\n  exit 1\n  break\nelif [ -e /etc/hyperledger/fabric/crypto/user_cred ] && [ ! -z $COUCHDB_USER ]\nthen\n  export COUCHDB_PASSWORD=`cat /etc/hyperledger/fabric/crypto/user_cred`\n  break\nelif [ ! -e /etc/hyperledger/fabric/crypto/user_cred ] && [ ! -z $COUCHDB_USER ]\nthen\n  echo \" Error! Please provide password for username $COUCHDB_USER \"\n  exit 1\n  break\nelse\n  :\nfi\ntini -- /docker-entrypoint.sh /opt/couchdb/bin/couchdb"], "command": ["sh", "-c"], "env": [{"name": "COUCHDB_USER", "value": "carrier-user"}], "image": "couchdb:3.1", "imagePullPolicy": "IfNotPresent", "name": "couchdb", "ports": [{"containerPort": 5984, "protocol": "TCP"}], "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/opt/couchdb/data", "name": "datadir-couchdb"}, {"mountPath": "/etc/hyperledger/fabric/crypto", "name": "certificates"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-684gx", "readOnly": true}]}, {"args": ["cp /etc/hyperledger/fabric/NodeOUconfig/mspconfig  /etc/hyperledger/fabric/crypto/msp/config.yaml\nexport CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=`cat /etc/hyperledger/fabric/crypto/user_cred`\npeer node start"], "command": ["sh", "-c"], "envFrom": [{"configMapRef": {"name": "peer0-config"}}], "image": "hyperledger/fabric-peer:2.2.2", "imagePullPolicy": "IfNotPresent", "name": "peer0", "ports": [{"containerPort": 7051, "name": "grpc", "protocol": "TCP"}, {"containerPort": 7053, "name": "events", "protocol": "TCP"}, {"containerPort": 9443, "name": "operations", "protocol": "TCP"}], "resources": {"limits": {"cpu": "1", "memory": "512M"}, "requests": {"cpu": "500m", "memory": "512M"}}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/var/hyperledger/production", "name": "datadir"}, {"mountPath": "/host/var/run/docker.sock", "name": "dockersocket"}, {"mountPath": "/etc/hyperledger/fabric/crypto", "name": "certificates"}, {"mountPath": "/etc/hyperledger/fabric/NodeOUconfig", "name": "peer0-msp-config-volume", "readOnly": true}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-684gx", "readOnly": true}]}, {"env": [{"name": "BACKEND_ADDRESS", "value": "peer0.carrier-net:7051"}, {"name": "SERVER_TLS_CERT_FILE", "value": "/certs/tls/server.crt"}, {"name": "SERVER_TLS_KEY_FILE", "value": "/certs/tls/server.key"}, {"name": "BACKEND_TLS_CA_FILES", "value": "/certs/tls/ca.crt"}, {"name": "SERVER_BIND_ADDRESS", "value": "0.0.0.0"}, {"name": "SERVER_HTTP_DEBUG_PORT", "value": "8080"}, {"name": "SERVER_HTTP_TLS_PORT", "value": "7443"}, {"name": "BACKEND_TLS", "value": "true"}, {"name": "SERVER_HTTP_MAX_WRITE_TIMEOUT", "value": "5m"}, {"name": "SERVER_HTTP_MAX_READ_TIMEOUT", "value": "5m"}, {"name": "USE_WEBSOCKETS", "value": "true"}], "image": "ghcr.io/hyperledger-labs/grpc-web:latest", "imagePullPolicy": "IfNotPresent", "name": "grpc-web", "ports": [{"containerPort": 7443, "name": "grpc-web", "protocol": "TCP"}], "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/certs", "name": "certificates"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-684gx", "readOnly": true}]}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "hostname": "peer0-0", "imagePullSecrets": [{"name": "regcred"}], "initContainers": [{"args": ["#!/usr/bin/env sh\nvalidateVaultResponse () {\n  if echo ${2} | grep \"errors\"; then\n    echo \"ERROR: unable to retrieve ${1}: ${2}\"\n    exit 1\n  fi\n  if  [ \"$3\" == \"LOOKUPSECRETRESPONSE\" ]\n  then\n    http_code=$(curl -sS -o /dev/null -w \"%{http_code}\" \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key})\n    curl_response=$?\n    if test \"$http_code\" != \"200\" ; then\n        echo \"Http response code from Vault - $http_code\"\n        if test \"$curl_response\" != \"0\"; then\n           echo \"Error: curl command failed with error code - $curl_response\"\n           exit 1\n        fi\n    fi\n  fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')        \nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nvault_secret_key=\"${VAULT_SECRET_PREFIX}/tls\"\necho \"Getting TLS certificates from Vault using key $vault_secret_key\"\n\nOUTPUT_PATH=\"${MOUNT_PATH}/tls\"\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\n\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\n\nTLS_CA_CERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"ca.crt\"]')\nTLS_SERVER_CERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"server.crt\"]')\nTLS_SERVER_KEY=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"server.key\"]')\n\nmkdir -p ${OUTPUT_PATH}\necho \"${TLS_CA_CERT}\" >> ${OUTPUT_PATH}/ca.crt\necho \"${TLS_SERVER_CERT}\" >> ${OUTPUT_PATH}/server.crt\necho \"${TLS_SERVER_KEY}\" >> ${OUTPUT_PATH}/server.key\n\nvault_secret_key=\"${VAULT_SECRET_PREFIX}/msp\"\necho \"Getting MSP certificates from Vault using key $vault_secret_key\"\n\nOUTPUT_PATH=\"${MOUNT_PATH}/msp\"\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\n\nADMINCERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"admincerts\"]')\nCACERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"cacerts\"]')\nKEYSTORE=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"keystore\"]')\nSIGNCERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"signcerts\"]')\nTLSCACERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"tlscacerts\"]')\n\nmkdir -p ${OUTPUT_PATH}/admincerts\nmkdir -p ${OUTPUT_PATH}/cacerts\nmkdir -p ${OUTPUT_PATH}/keystore\nmkdir -p ${OUTPUT_PATH}/signcerts\nmkdir -p ${OUTPUT_PATH}/tlscacerts\n\necho \"${ADMINCERT}\" >> ${OUTPUT_PATH}/admincerts/admin.crt\necho \"${CACERTS}\" >> ${OUTPUT_PATH}/cacerts/ca.crt\necho \"${KEYSTORE}\" >> ${OUTPUT_PATH}/keystore/server.key\necho \"${SIGNCERTS}\" >> ${OUTPUT_PATH}/signcerts/server.crt\necho \"${TLSCACERTS}\" >> ${OUTPUT_PATH}/tlscacerts/tlsca.crt\n\n# COUCH_DB CREDENTIALS\necho \"Getting couch db credentials\"\nSECRET_COUCHDB_PASS=secretv2/data/credentials/carrier-net/couchdb/carrier?user\nif [ ! -z $SECRET_COUCHDB_PASS ]\nthen\n  vault_secret_key=$(echo ${SECRET_COUCHDB_PASS} |awk -F \"?\" '{print $1}')\n  vault_data_key=$(echo ${SECRET_COUCHDB_PASS} |awk -F \"?\" '{print $2}')\n  LOOKUP_SECRET_RESPONSE=$(curl -sS \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\n  validateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\n  PASSWORD=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r \".data.data[\\\"${vault_data_key}\\\"]\")\n  echo \"${PASSWORD}\" >> ${MOUNT_PATH}/user_cred \nfi            "], "command": ["sh", "-c"], "env": [{"name": "VAULT_ADDR", "value": "http://20.197.63.209:8200"}, {"name": "VAULT_SECRET_PREFIX", "value": "secretv2/data/crypto/peerOrganizations/carrier-net/peers/peer0.carrier-net"}, {"name": "KUBERNETES_AUTH_PATH", "value": "devcarrier-net-auth"}, {"name": "VAULT_APP_ROLE", "value": "vault-role"}, {"name": "MOUNT_PATH", "value": "/secret"}], "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "imagePullPolicy": "IfNotPresent", "name": "certificates-init", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/secret", "name": "certificates"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-684gx", "readOnly": true}]}], "nodeName": "aks-agentpool-84293659-vmss000002", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "Always", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "vault-auth", "serviceAccountName": "vault-auth", "subdomain": "peer0", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoSchedule", "key": "node.kubernetes.io/memory-pressure", "operator": "Exists"}], "volumes": [{"name": "datadir-couchdb", "persistentVolumeClaim": {"claimName": "datadir-couchdb-peer0-0"}}, {"name": "datadir", "persistentVolumeClaim": {"claimName": "datadir-peer0-0"}}, {"emptyDir": {"medium": "Memory"}, "name": "certificates"}, {"hostPath": {"path": "/var/run/docker.sock", "type": ""}, "name": "dockersocket"}, {"configMap": {"defaultMode": 420, "items": [{"key": "mspconfig", "path": "mspconfig"}], "name": "peer0-msp-config"}, "name": "peer0-msp-config-volume"}, {"name": "kube-api-access-684gx", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:34:47Z", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:34:48Z", "status": "True", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:34:48Z", "status": "True", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:34:13Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://4fc83da756d3419d9105c87f6c36dd85ebc3e353ec154ba302dbc30fa7aab290", "image": "docker.io/library/couchdb:3.1", "imageID": "docker.io/library/couchdb@sha256:a7964937f58f25eb1e53cb3f4342590fc63939a85f8f5627f03415503d8ea7b9", "lastState": {}, "name": "couchdb", "ready": true, "restartCount": 0, "started": true, "state": {"running": {"startedAt": "2022-07-17T15:34:47Z"}}}, {"containerID": "containerd://10ee7e5aa062ec83181149d91f5c7d1391e968d8641dca13007fe384de31f4d7", "image": "ghcr.io/hyperledger-labs/grpc-web:latest", "imageID": "ghcr.io/hyperledger-labs/grpc-web@sha256:1d14972d0bd719c74071302f872b4b36419f8023adc974d910247119d39eb398", "lastState": {}, "name": "grpc-web", "ready": true, "restartCount": 0, "started": true, "state": {"running": {"startedAt": "2022-07-17T15:34:47Z"}}}, {"containerID": "containerd://d8c39ccb971369de6b4691b87bf61c6c3992eb062c9007f3a8fadd704475d99b", "image": "docker.io/hyperledger/fabric-peer:2.2.2", "imageID": "docker.io/hyperledger/fabric-peer@sha256:640940fc59e262f2f4e5ec983f216811aa9521117abfdc17b3a68bd9e1e88bce", "lastState": {}, "name": "peer0", "ready": true, "restartCount": 0, "started": true, "state": {"running": {"startedAt": "2022-07-17T15:34:47Z"}}}], "hostIP": "10.224.0.4", "initContainerStatuses": [{"containerID": "containerd://e2e7513e8a9e3af84efa9753051e6b99ccf28583aa53ad02f96a9cbdc9477345", "image": "docker.io/hyperledgerlabs/alpine-utils:1.0", "imageID": "docker.io/hyperledgerlabs/alpine-utils@sha256:cab1d1566ddaa28e482b5eeda7426791bdf607cee41e2b752ccc566553810f74", "lastState": {}, "name": "certificates-init", "ready": true, "restartCount": 0, "state": {"terminated": {"containerID": "containerd://e2e7513e8a9e3af84efa9753051e6b99ccf28583aa53ad02f96a9cbdc9477345", "exitCode": 0, "finishedAt": "2022-07-17T15:34:46Z", "reason": "Completed", "startedAt": "2022-07-17T15:34:46Z"}}}], "phase": "Running", "podIP": "10.244.2.5", "podIPs": [{"ip": "10.244.2.5"}], "qosClass": "Burstable", "startTime": "2022-07-17T15:34:13Z"}}]}
META: role_complete for localhost

TASK [Create Create_Channel value file] ****************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channels/tasks/valuefile.yaml:34

TASK [helm_component : Ensures /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier dir exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:14
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier", "size": 4096, "state": "directory", "uid": 0}

TASK [helm_component : create value file for allchannel] ***********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:23
changed: [localhost] => {"changed": true, "checksum": "e51b3fff369f524cd0fe8ec906a112ec532e7bb4", "dest": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/allchannel.yaml", "gid": 0, "group": "root", "md5sum": "9e5a67bb3a8f631b30997898790b8a44", "mode": "0644", "owner": "root", "size": 1886, "src": "/root/.ansible/tmp/ansible-tmp-1658074739.3761096-39652-96211149853160/source", "state": "file", "uid": 0}

TASK [Helm lint] ***************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:32

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
ok: [localhost] => {"changed": false, "stat": {"atime": 1658074740.0287921, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "checksum": "e51b3fff369f524cd0fe8ec906a112ec532e7bb4", "ctime": 1658074740.0287921, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 3627596, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658074739.7367933, "nlink": 1, "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/allchannel.yaml", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 1886, "uid": 0, "version": "3369966606", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [Check or create test directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:22

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"atime": 1658074423.378228, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "ctime": 1658074728.3968432, "dev": 64513, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626754, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658074728.3968432, "nlink": 2, "path": "./build/test", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "version": "4197237393", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:31
ok: [localhost] => {"ansible_facts": {"apiVersion": "helm.fluxcd.io/v1", "kind": "HelmRelease", "metadata": {"annotations": {"fluxcd.io/automated": "false"}, "name": "channel-carrier-allchannel", "namespace": "carrier-net"}, "spec": {"chart": {"git": "ssh://git@github.com/adityajoshi12/bevel.git", "path": "platforms/hyperledger-fabric/charts/create_channel", "ref": "test"}, "releaseName": "channel-carrier-allchannel", "values": {"channel": {"name": "allchannel"}, "channeltx": "CtkDChgKFggCGgYIzuzQlgYiCmFsbGNoYW5uZWwSvAMKuQMKCmFsbGNoYW5uZWwSRhI0CgtBcHBs\naWNhdGlvbhIlEhMKD21hbnVmYWN0dXJlck1TUBIAEg4KCmNhcnJpZXJNU1ASABoOCgpDb25zb3J0\naXVtEgAa4gIStgIKC0FwcGxpY2F0aW9uEqYCCAESEwoPbWFudWZhY3R1cmVyTVNQEgASDgoKY2Fy\ncmllck1TUBIAGiQKDENhcGFiaWxpdGllcxIUEgoKCAoEVjJfMBIAGgZBZG1pbnMiIgoHUmVhZGVy\ncxIXEg0IAxIJCgdSZWFkZXJzGgZBZG1pbnMiIgoHV3JpdGVycxIXEg0IAxIJCgdXcml0ZXJzGgZB\nZG1pbnMiIgoGQWRtaW5zEhgSDggDEgoKBkFkbWlucxACGgZBZG1pbnMiLAoLRW5kb3JzZW1lbnQS\nHRITCAMSDwoLRW5kb3JzZW1lbnQQAhoGQWRtaW5zIjUKFExpZmVjeWNsZUVuZG9yc2VtZW50Eh0S\nEwgDEg8KC0VuZG9yc2VtZW50EAIaBkFkbWlucyoGQWRtaW5zGicKCkNvbnNvcnRpdW0SGRIXChVT\ndXBwbHlDaGFpbkNvbnNvcnRpdW0=", "metadata": {"images": {"alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "fabrictools": "hyperledger/fabric-tools:2.2.2"}, "namespace": "carrier-net", "network": "version 2.2.2"}, "orderer": {"address": "orderer1.supplychain-net:7050"}, "peer": {"address": "peer0.carrier-net:7051", "localmspid": "carrierMSP", "loglevel": "debug", "name": "peer0", "tlsstatus": true}, "vault": {"address": "http://20.197.63.209:8200", "adminsecretprefix": "secretv2/data/crypto/peerOrganizations/carrier-net/users/admin", "authpath": "devcarrier-net-auth", "imagesecretname": "regcred", "orderersecretprefix": "secretv2/data/crypto/peerOrganizations/carrier-net/orderer", "role": "vault-role", "serviceaccountname": "vault-auth"}}}}, "ansible_included_var_files": ["/home/bevel/platforms/hyperledger-fabric/releases/dev/carrier/carrier/allchannel.yaml"], "changed": false}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:36
ok: [localhost] => {"changed": false, "checksum": "edfaa9c63188df863f5855b9f1e82014966b7071", "dest": "./build/test/channel-carrier-allchannel.yaml", "gid": 0, "group": "root", "md5sum": "6e2606b99244ecf05cff33ab2c0d3814", "mode": "0644", "owner": "root", "size": 1438, "src": "/root/.ansible/tmp/ansible-tmp-1658074741.9217503-39764-102892038360215/source", "state": "file", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:42
changed: [localhost] => {"changed": true, "cmd": "helm lint -f \"./build/test/channel-carrier-allchannel.yaml\" \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/create_channel\"\n", "delta": "0:00:00.100899", "end": "2022-07-17 16:19:02.966645", "msg": "", "rc": 0, "start": "2022-07-17 16:19:02.865746", "stderr": "", "stderr_lines": [], "stdout": "==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/create_channel\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, 0 chart(s) failed", "stdout_lines": ["==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/create_channel", "[INFO] Chart.yaml: icon is recommended", "", "1 chart(s) linted, 0 chart(s) failed"]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channels/tasks/valuefile.yaml:57

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing channel-create files\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.623497", "end": "2022-07-17 16:19:06.664981", "msg": "", "rc": 0, "start": "2022-07-17 16:19:04.041484", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   c8c2b8b..87b432a  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   c8c2b8b..87b432a  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main 87b432a] [ci skip] Pushing channel-create files\n 2 files changed, 193 insertions(+), 4 deletions(-)", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main 87b432a] [ci skip] Pushing channel-create files", " 2 files changed, 193 insertions(+), 4 deletions(-)"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main 87b432a] [ci skip] Pushing channel-create files",
        " 2 files changed, 193 insertions(+), 4 deletions(-)"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   c8c2b8b..87b432a  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost
META: role_complete for localhost

TASK [Create all join-channel jobs] ********************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:207

TASK [create/channels_join : Call nested_channel_join for each peer] ***********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/main.yaml:10
included: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/nested_channel_join.yaml for localhost => (item=(censored due to no_log))
included: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/nested_channel_join.yaml for localhost => (item=(censored due to no_log))

TASK [waiting for carrier to create channel allchannel] ************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/nested_channel_join.yaml:11
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job createchannel-allchannel in carrier-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:11
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2022-07-17T15:36:18Z", "generateName": "createchannel-allchannel-", "labels": {"app": "createchannel-allchannel", "app.kubernetes.io/instance": "channel-carrier-allchannel", "app.kubernetes.io/managed-by": "Helm", "app.kubernetes.io/name": "createchannel-allchannel", "controller-uid": "697d295e-1223-4cd0-a6dd-81d0979397c9", "job-name": "createchannel-allchannel"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:app": {}, "f:app.kubernetes.io/instance": {}, "f:app.kubernetes.io/managed-by": {}, "f:app.kubernetes.io/name": {}, "f:controller-uid": {}, "f:job-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"697d295e-1223-4cd0-a6dd-81d0979397c9\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {"f:containers": {"k:{\"name\":\"createchannel\"}": {".": {}, "f:args": {}, "f:command": {}, "f:envFrom": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:stdin": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:tty": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/opt/gopath/src/github.com/hyperledger/fabric/crypto\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}, "k:{\"mountPath\":\"/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}}, "f:workingDir": {}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:imagePullSecrets": {".": {}, "k:{\"name\":\"regcred\"}": {".": {}, "f:name": {}}}, "f:initContainers": {".": {}, "k:{\"name\":\"certificates-init\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"KUBERNETES_AUTH_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"MOUNT_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ADDR\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_APP_ROLE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ORDERER_SECRET_PREFIX\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_PEER_SECRET_PREFIX\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/secret\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"certificates\"}": {".": {}, "f:emptyDir": {".": {}, "f:medium": {}}, "f:name": {}}, "k:{\"name\":\"channel-artifacts-allchannel\"}": {".": {}, "f:configMap": {".": {}, "f:defaultMode": {}, "f:name": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T15:36:18Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:initContainerStatuses": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.35\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "time": "2022-07-17T15:36:39Z"}], "name": "createchannel-allchannel-qx7bs", "namespace": "carrier-net", "ownerReferences": [{"apiVersion": "batch/v1", "blockOwnerDeletion": true, "controller": true, "kind": "Job", "name": "createchannel-allchannel", "uid": "697d295e-1223-4cd0-a6dd-81d0979397c9"}], "resourceVersion": "77399", "uid": "6673a304-e836-4664-b1f1-f0261d7848f5"}, "spec": {"containers": [{"args": ["#!/usr/bin/env sh\ncat ./channel-artifacts/channel.tx.base64 | base64 -d > channel.tx\necho \"Fetch block to see if channel has already been created...\"\ntls_status=${CORE_PEER_TLS_ENABLED}\nif [ \"$tls_status\" = \"true\" ]\nthen\n  peer channel fetch 0 -c ${CHANNEL_NAME} --tls --cafile ${ORDERER_CA} -o ${ORDERER_URL} /tmp/${CHANNEL_NAME}.block\nelse\n  peer channel fetch 0 -c ${CHANNEL_NAME}  -o ${ORDERER_URL} /tmp/${CHANNEL_NAME}.block\nfi\n\nif [ -f /tmp/${CHANNEL_NAME}.block ]\nthen\n  echo \"Channel ${CHANNEL_NAME} is already created.\"\nelse\n  echo \"Creating Channel ${CHANNEL_NAME}\"\n  version1_4=`echo $NETWORK_VERSION | grep -c 1.4`\n  if [ \"$tls_status\" = \"true\" ]\n  then\n    if [ $version1_4 = 1 ]\n    then\n      peer channel create -o ${ORDERER_URL} -c ${CHANNEL_NAME} -f channel.tx --tls ${CORE_PEER_TLS_ENABLED} --cafile ${ORDERER_CA}\n    else\n      peer channel create -o ${ORDERER_URL} -c ${CHANNEL_NAME} -f channel.tx --tls ${CORE_PEER_TLS_ENABLED} --cafile ${ORDERER_CA} --outputBlock /tmp/${CHANNEL_NAME}.block\n    fi\n  else\n    if [ $version1_4 = 1 ]\n    then \n      peer channel create -o ${ORDERER_URL} -c ${CHANNEL_NAME} -f channel.tx\n    else\n      peer channel create -o ${ORDERER_URL} -c ${CHANNEL_NAME} -f channel.tx --outputBlock /tmp/${CHANNEL_NAME}.block\n    fi\n  fi\nfi"], "command": ["sh", "-c"], "envFrom": [{"configMapRef": {"name": "allchannel-config"}}], "image": "hyperledger/fabric-tools:2.2.2", "imagePullPolicy": "IfNotPresent", "name": "createchannel", "resources": {}, "stdin": true, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "tty": true, "volumeMounts": [{"mountPath": "/opt/gopath/src/github.com/hyperledger/fabric/crypto", "name": "certificates", "readOnly": true}, {"mountPath": "/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts", "name": "channel-artifacts-allchannel", "readOnly": true}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-vn4wq", "readOnly": true}], "workingDir": "/opt/gopath/src/github.com/hyperledger/fabric/peer"}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "imagePullSecrets": [{"name": "regcred"}], "initContainers": [{"args": ["#!/usr/bin/env sh\nvalidateVaultResponse () {\n  if echo ${2} | grep \"errors\"; then\n    echo \"ERROR: unable to retrieve ${1}: ${2}\"\n    exit 1\n  fi\n  if  [ \"$3\" == \"LOOKUPSECRETRESPONSE\" ]\n  then\n    http_code=$(curl -sS -o /dev/null -w \"%{http_code}\" \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key})\n    curl_response=$?\n    if test \"$http_code\" != \"200\" ; then\n        echo \"Http response code from Vault - $http_code\"\n        if test \"$curl_response\" != \"0\"; then\n           echo \"Error: curl command failed with error code - $curl_response\"\n           exit 1\n        fi\n    fi\n  fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')          \nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nvault_secret_key=\"${VAULT_ORDERER_SECRET_PREFIX}/tls\"\necho \"Getting Orderer TLS certificates from Vault using key $vault_secret_key\"\n\nOUTPUT_PATH=\"${MOUNT_PATH}/orderer/tls\"\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\n\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\n\nTLS_CA_CERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"ca.crt\"]')\n\nmkdir -p ${OUTPUT_PATH}\necho \"${TLS_CA_CERT}\" >> ${OUTPUT_PATH}/ca.crt\n\nvault_secret_key=\"${VAULT_PEER_SECRET_PREFIX}/msp\"\necho \"Getting MSP certificates from Vault using key $vault_secret_key\"\n\nOUTPUT_PATH=\"${MOUNT_PATH}/admin/msp\"\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\n\nADMINCERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"admincerts\"]')\nCACERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"cacerts\"]')\nKEYSTORE=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"keystore\"]')\nSIGNCERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"signcerts\"]')\nTLSCACERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"tlscacerts\"]')\n\nmkdir -p ${OUTPUT_PATH}/admincerts\nmkdir -p ${OUTPUT_PATH}/cacerts\nmkdir -p ${OUTPUT_PATH}/keystore\nmkdir -p ${OUTPUT_PATH}/signcerts\nmkdir -p ${OUTPUT_PATH}/tlscacerts\n\necho \"${ADMINCERT}\" >> ${OUTPUT_PATH}/admincerts/admin.crt\necho \"${CACERTS}\" >> ${OUTPUT_PATH}/cacerts/ca.crt\necho \"${KEYSTORE}\" >> ${OUTPUT_PATH}/keystore/server.key\necho \"${SIGNCERTS}\" >> ${OUTPUT_PATH}/signcerts/server.crt\necho \"${TLSCACERTS}\" >> ${OUTPUT_PATH}/tlscacerts/tlsca.crt"], "command": ["sh", "-c"], "env": [{"name": "VAULT_ADDR", "value": "http://20.197.63.209:8200"}, {"name": "KUBERNETES_AUTH_PATH", "value": "devcarrier-net-auth"}, {"name": "VAULT_APP_ROLE", "value": "vault-role"}, {"name": "VAULT_PEER_SECRET_PREFIX", "value": "secretv2/data/crypto/peerOrganizations/carrier-net/users/admin"}, {"name": "VAULT_ORDERER_SECRET_PREFIX", "value": "secretv2/data/crypto/peerOrganizations/carrier-net/orderer"}, {"name": "MOUNT_PATH", "value": "/secret"}], "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "imagePullPolicy": "IfNotPresent", "name": "certificates-init", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/secret", "name": "certificates"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-vn4wq", "readOnly": true}]}], "nodeName": "aks-agentpool-84293659-vmss000001", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "OnFailure", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "vault-auth", "serviceAccountName": "vault-auth", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"configMap": {"defaultMode": 420, "name": "channel-artifacts-allchannel"}, "name": "channel-artifacts-allchannel"}, {"emptyDir": {"medium": "Memory"}, "name": "certificates"}, {"name": "kube-api-access-vn4wq", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:36:21Z", "reason": "PodCompleted", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:36:39Z", "reason": "PodCompleted", "status": "False", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:36:39Z", "reason": "PodCompleted", "status": "False", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:36:18Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://dd81678fa077d87ec9a874e639f17b6a83e083868f4345339c44c62b4b4705d8", "image": "docker.io/hyperledger/fabric-tools:2.2.2", "imageID": "docker.io/hyperledger/fabric-tools@sha256:a149d463e8679ef8ed7499b81c55539067d0989c804070fe2a6ca744ac2b692d", "lastState": {}, "name": "createchannel", "ready": false, "restartCount": 0, "started": false, "state": {"terminated": {"containerID": "containerd://dd81678fa077d87ec9a874e639f17b6a83e083868f4345339c44c62b4b4705d8", "exitCode": 0, "finishedAt": "2022-07-17T15:36:39Z", "reason": "Completed", "startedAt": "2022-07-17T15:36:37Z"}}}], "hostIP": "10.224.0.5", "initContainerStatuses": [{"containerID": "containerd://820c26f062851b65f09f87b52bad5e496ef09617a6fda658b5fb45c5cfaafd89", "image": "docker.io/hyperledgerlabs/alpine-utils:1.0", "imageID": "docker.io/hyperledgerlabs/alpine-utils@sha256:cab1d1566ddaa28e482b5eeda7426791bdf607cee41e2b752ccc566553810f74", "lastState": {}, "name": "certificates-init", "ready": true, "restartCount": 0, "state": {"terminated": {"containerID": "containerd://820c26f062851b65f09f87b52bad5e496ef09617a6fda658b5fb45c5cfaafd89", "exitCode": 0, "finishedAt": "2022-07-17T15:36:20Z", "reason": "Completed", "startedAt": "2022-07-17T15:36:19Z"}}}], "phase": "Succeeded", "podIP": "10.244.0.35", "podIPs": [{"ip": "10.244.0.35"}], "qosClass": "BestEffort", "startTime": "2022-07-17T15:36:18Z"}}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:28
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job createchannel-allchannel in carrier-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:42
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [join channel allchannel] *************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/nested_channel_join.yaml:24

TASK [helm_component : Ensures /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier dir exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:14
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier", "size": 4096, "state": "directory", "uid": 0}

TASK [helm_component : create value file for join-allchannel-carrier-peer0] ****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:23
ok: [localhost] => {"changed": false, "checksum": "36f39aeb4297794848f0bade9dc87c12d2398792", "dest": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/join-allchannel-carrier-peer0.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/join-allchannel-carrier-peer0.yaml", "size": 1176, "state": "file", "uid": 0}

TASK [Helm lint] ***************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:32

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
ok: [localhost] => {"changed": false, "stat": {"atime": 1658072216.5569334, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "checksum": "36f39aeb4297794848f0bade9dc87c12d2398792", "ctime": 1658072215.8889363, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 3627589, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658072215.5889375, "nlink": 1, "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/join-allchannel-carrier-peer0.yaml", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 1176, "uid": 0, "version": "1683405006", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [Check or create test directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:22

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"atime": 1658074423.378228, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "ctime": 1658074742.4327815, "dev": 64513, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626754, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658074742.4327815, "nlink": 2, "path": "./build/test", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "version": "4197237393", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:31
ok: [localhost] => {"ansible_facts": {"apiVersion": "helm.fluxcd.io/v1", "kind": "HelmRelease", "metadata": {"annotations": {"fluxcd.io/automated": "false"}, "name": "joinchannel-peer0-join-allchannel-carrier-peer0", "namespace": "carrier-net"}, "spec": {"chart": {"git": "ssh://git@github.com/adityajoshi12/bevel.git", "path": "platforms/hyperledger-fabric/charts/join_channel", "ref": "test"}, "releaseName": "joinchannel-peer0-join-allchannel-carrier-peer0", "values": {"channel": {"name": "allchannel"}, "metadata": {"images": {"alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "fabrictools": "hyperledger/fabric-tools:2.2.2"}, "namespace": "carrier-net"}, "orderer": {"address": "orderer1.supplychain-net:7050"}, "peer": {"address": "peer0.carrier-net:7051", "localmspid": "carrierMSP", "loglevel": "debug", "name": "peer0", "tlsstatus": true}, "vault": {"address": "http://20.197.63.209:8200", "adminsecretprefix": "secretv2/data/crypto/peerOrganizations/carrier-net/users/admin", "authpath": "devcarrier-net-auth", "imagesecretname": "regcred", "orderersecretprefix": "secretv2/data/crypto/peerOrganizations/carrier-net/orderer", "role": "vault-role", "serviceaccountname": "vault-auth"}}}}, "ansible_included_var_files": ["/home/bevel/platforms/hyperledger-fabric/releases/dev/carrier/carrier/join-allchannel-carrier-peer0.yaml"], "changed": false}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:36
ok: [localhost] => {"changed": false, "checksum": "4808e1fc8cee7aceb8da64629ba10f69ce0a10c5", "dest": "./build/test/joinchannel-peer0-join-allchannel-carrier-peer0.yaml", "gid": 0, "group": "root", "md5sum": "79148ac9e4c7cdcfef9032ce70d337ce", "mode": "0644", "owner": "root", "size": 713, "src": "/root/.ansible/tmp/ansible-tmp-1658074752.188264-40086-180536617833512/source", "state": "file", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:42
changed: [localhost] => {"changed": true, "cmd": "helm lint -f \"./build/test/joinchannel-peer0-join-allchannel-carrier-peer0.yaml\" \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/join_channel\"\n", "delta": "0:00:00.113979", "end": "2022-07-17 16:19:13.380126", "msg": "", "rc": 0, "start": "2022-07-17 16:19:13.266147", "stderr": "", "stderr_lines": [], "stdout": "==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/join_channel\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, 0 chart(s) failed", "stdout_lines": ["==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/join_channel", "[INFO] Chart.yaml: icon is recommended", "", "1 chart(s) linted, 0 chart(s) failed"]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/nested_channel_join.yaml:46

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing channel-join files\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.637445", "end": "2022-07-17 16:19:17.060130", "msg": "", "rc": 0, "start": "2022-07-17 16:19:14.422685", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   87b432a..ab3410a  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   87b432a..ab3410a  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main ab3410a] [ci skip] Pushing channel-join files\n 1 file changed, 140 insertions(+)", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main ab3410a] [ci skip] Pushing channel-join files", " 1 file changed, 140 insertions(+)"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main ab3410a] [ci skip] Pushing channel-join files",
        " 1 file changed, 140 insertions(+)"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   87b432a..ab3410a  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost

TASK [waiting for manufacturer to create channel allchannel] *******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/nested_channel_join.yaml:11
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [join channel allchannel] *************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/nested_channel_join.yaml:24

TASK [helm_component : Ensures /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer dir exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:14
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer", "size": 4096, "state": "directory", "uid": 0}

TASK [helm_component : create value file for join-allchannel-manufacturer-peer0] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:23
ok: [localhost] => {"changed": false, "checksum": "280d6fe80f0f76f908c16702c77c8db055cdf58f", "dest": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer/join-allchannel-manufacturer-peer0.yaml", "gid": 0, "group": "root", "mode": "0644", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer/join-allchannel-manufacturer-peer0.yaml", "size": 1221, "state": "file", "uid": 0}

TASK [Helm lint] ***************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:32

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
ok: [localhost] => {"changed": false, "stat": {"atime": 1658072224.8008988, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "checksum": "280d6fe80f0f76f908c16702c77c8db055cdf58f", "ctime": 1658072224.3009007, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 3627591, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658072224.0849018, "nlink": 1, "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer/join-allchannel-manufacturer-peer0.yaml", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 1221, "uid": 0, "version": "4253812414", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [Check or create test directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:22

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"atime": 1658074423.378228, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "ctime": 1658074752.796736, "dev": 64513, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626754, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658074752.796736, "nlink": 2, "path": "./build/test", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "version": "4197237393", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:31
ok: [localhost] => {"ansible_facts": {"apiVersion": "helm.fluxcd.io/v1", "kind": "HelmRelease", "metadata": {"annotations": {"fluxcd.io/automated": "false"}, "name": "joinchannel-peer0-join-allchannel-manufacturer-peer0", "namespace": "manufacturer-net"}, "spec": {"chart": {"git": "ssh://git@github.com/adityajoshi12/bevel.git", "path": "platforms/hyperledger-fabric/charts/join_channel", "ref": "test"}, "releaseName": "joinchannel-peer0-join-allchannel-manufacturer-peer0", "values": {"channel": {"name": "allchannel"}, "metadata": {"images": {"alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "fabrictools": "hyperledger/fabric-tools:2.2.2"}, "namespace": "manufacturer-net"}, "orderer": {"address": "orderer1.supplychain-net:7050"}, "peer": {"address": "peer0.manufacturer-net:7051", "localmspid": "manufacturerMSP", "loglevel": "debug", "name": "peer0", "tlsstatus": true}, "vault": {"address": "http://20.197.63.209:8200", "adminsecretprefix": "secretv2/data/crypto/peerOrganizations/manufacturer-net/users/admin", "authpath": "devmanufacturer-net-auth", "imagesecretname": "regcred", "orderersecretprefix": "secretv2/data/crypto/peerOrganizations/manufacturer-net/orderer", "role": "vault-role", "serviceaccountname": "vault-auth"}}}}, "ansible_included_var_files": ["/home/bevel/platforms/hyperledger-fabric/releases/dev/manufacturer/manufacturer/join-allchannel-manufacturer-peer0.yaml"], "changed": false}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:36
ok: [localhost] => {"changed": false, "checksum": "e2219fd00dee6b291acb216dc601ae792bb4ad29", "dest": "./build/test/joinchannel-peer0-join-allchannel-manufacturer-peer0.yaml", "gid": 0, "group": "root", "md5sum": "7b964023ae16783a61daaa6569e02ab5", "mode": "0644", "owner": "root", "size": 743, "src": "/root/.ansible/tmp/ansible-tmp-1658074760.9676254-40373-158667256895474/source", "state": "file", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:42
changed: [localhost] => {"changed": true, "cmd": "helm lint -f \"./build/test/joinchannel-peer0-join-allchannel-manufacturer-peer0.yaml\" \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/join_channel\"\n", "delta": "0:00:00.096268", "end": "2022-07-17 16:19:22.187878", "msg": "", "rc": 0, "start": "2022-07-17 16:19:22.091610", "stderr": "", "stderr_lines": [], "stdout": "==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/join_channel\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, 0 chart(s) failed", "stdout_lines": ["==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/join_channel", "[INFO] Chart.yaml: icon is recommended", "", "1 chart(s) linted, 0 chart(s) failed"]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/nested_channel_join.yaml:46

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
changed: [localhost] => {"changed": true, "cmd": "cd \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../\"\necho \"---------------GIT PUSH---------------\"\nexport GIT_SSH_COMMAND='ssh -i /home/bevel/build/gitops'\ngit config user.email adityaprakashjoshi1@gmail.com\ngit config user.name adityajoshi12\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git add -A .\n\n# To ignore a directory add it add reset path\nreset_path=platforms/hyperledger-fabric/configuration\nif [ -n \"$reset_path\" ]; then\n    git --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git reset \"platforms/hyperledger-fabric/configuration\"\nfi  \n\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git commit -s -m \"[ci skip] Pushing channel-join files\" || true\ngit --git-dir=/home/bevel/platforms/hyperledger-fabric/configuration/../../..//.git push ssh://git@github.com/adityajoshi12/bevel.git HEAD:test  \n", "delta": "0:00:02.562639", "end": "2022-07-17 16:19:25.855475", "msg": "", "rc": 0, "start": "2022-07-17 16:19:23.292836", "stderr": "fatal: not in a git directory\nfatal: not in a git directory\nTo ssh://github.com/adityajoshi12/bevel.git\n   ab3410a..c5751e9  HEAD -> test", "stderr_lines": ["fatal: not in a git directory", "fatal: not in a git directory", "To ssh://github.com/adityajoshi12/bevel.git", "   ab3410a..c5751e9  HEAD -> test"], "stdout": "---------------GIT PUSH---------------\nUnstaged changes after reset:\nM\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl\n[main c5751e9] [ci skip] Pushing channel-join files\n 1 file changed, 115 insertions(+)", "stdout_lines": ["---------------GIT PUSH---------------", "Unstaged changes after reset:", "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl", "[main c5751e9] [ci skip] Pushing channel-join files", " 1 file changed, 115 insertions(+)"]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for https] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:41
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:65
ok: [localhost] => {
    "msg": [
        "---------------GIT PUSH---------------",
        "Unstaged changes after reset:",
        "M\tplatforms/hyperledger-fabric/configuration/roles/k8_component/templates/reviewer_rbac.tpl",
        "[main c5751e9] [ci skip] Pushing channel-join files",
        " 1 file changed, 115 insertions(+)"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for SSH gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:74
ok: [localhost] => {
    "msg": [
        "fatal: not in a git directory",
        "fatal: not in a git directory",
        "To ssh://github.com/adityajoshi12/bevel.git",
        "   ab3410a..c5751e9  HEAD -> test"
    ]
}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stdout for gitpush] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:84
skipping: [localhost] => {}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : stderr for git_push] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:92
skipping: [localhost] => {}
META: role_complete for localhost

TASK [create/channels_join : Call check for each peer] *************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/main.yaml:21
included: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/check.yaml for localhost => (item=(censored due to no_log))
included: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/check.yaml for localhost => (item=(censored due to no_log))

TASK [waiting for {{ peer.name }} to join {{ channel_name }}] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/check.yaml:11
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job joinchannel-peer0-allchannel in carrier-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:11
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2022-07-17T15:38:15Z", "generateName": "joinchannel-peer0-allchannel-", "labels": {"app": "joinchannel-peer0-allchannel", "app.kubernetes.io/instance": "joinchannel-peer0-join-allchannel-carrier-peer0", "app.kubernetes.io/managed-by": "Helm", "app.kubernetes.io/name": "joinchannel-peer0-allchannel", "controller-uid": "ca955eab-7c2f-465b-8360-d597400eb6be", "helm.sh/chart": "join_channel-0.2.0", "job-name": "joinchannel-peer0-allchannel"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:app": {}, "f:app.kubernetes.io/instance": {}, "f:app.kubernetes.io/managed-by": {}, "f:app.kubernetes.io/name": {}, "f:controller-uid": {}, "f:helm.sh/chart": {}, "f:job-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"ca955eab-7c2f-465b-8360-d597400eb6be\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {"f:containers": {"k:{\"name\":\"joinchannel\"}": {".": {}, "f:args": {}, "f:command": {}, "f:envFrom": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:stdin": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:tty": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/opt/gopath/src/github.com/hyperledger/fabric/crypto\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}}, "f:workingDir": {}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:imagePullSecrets": {".": {}, "k:{\"name\":\"regcred\"}": {".": {}, "f:name": {}}}, "f:initContainers": {".": {}, "k:{\"name\":\"certificates-init\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"KUBERNETES_AUTH_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"MOUNT_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ADDR\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_APP_ROLE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ORDERER_SECRET_PREFIX\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_PEER_SECRET_PREFIX\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/secret\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"certificates\"}": {".": {}, "f:emptyDir": {".": {}, "f:medium": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T15:38:15Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:initContainerStatuses": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.37\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "time": "2022-07-17T15:38:19Z"}], "name": "joinchannel-peer0-allchannel-fqpdf", "namespace": "carrier-net", "ownerReferences": [{"apiVersion": "batch/v1", "blockOwnerDeletion": true, "controller": true, "kind": "Job", "name": "joinchannel-peer0-allchannel", "uid": "ca955eab-7c2f-465b-8360-d597400eb6be"}], "resourceVersion": "77786", "uid": "53db70dc-a6f4-4500-8da5-5fe18dc18b53"}, "spec": {"containers": [{"args": ["#!/usr/bin/env sh\necho \"Joining Channel ${CHANNEL_NAME}\"\ntls_status=${CORE_PEER_TLS_ENABLED}\nif [ \"$tls_status\" = \"true\" ]\nthen\n  peer channel fetch 0 ${CHANNEL_NAME}.block -o ${ORDERER_URL} -c ${CHANNEL_NAME} --tls --cafile ${ORDERER_CA}\nelse\n  peer channel fetch 0 ${CHANNEL_NAME}.block -o ${ORDERER_URL} -c ${CHANNEL_NAME} \nfi\nCHANNEL_JOIN=$(peer channel list 2>/dev/null)\necho $CHANNEL_JOIN | grep -q ${CHANNEL_NAME}\nif [ $? = 1 ]\nthen\npeer channel join -b ${CHANNEL_NAME}.block\nelse\necho \"Peer has already joined the channel\"\nfi"], "command": ["sh", "-c"], "envFrom": [{"configMapRef": {"name": "joinchannel-allchannel-peer0-config"}}], "image": "hyperledger/fabric-tools:2.2.2", "imagePullPolicy": "IfNotPresent", "name": "joinchannel", "resources": {}, "stdin": true, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "tty": true, "volumeMounts": [{"mountPath": "/opt/gopath/src/github.com/hyperledger/fabric/crypto", "name": "certificates", "readOnly": true}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-g7kvz", "readOnly": true}], "workingDir": "/opt/gopath/src/github.com/hyperledger/fabric/peer"}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "imagePullSecrets": [{"name": "regcred"}], "initContainers": [{"args": ["#!/usr/bin/env sh\nvalidateVaultResponse () {\n  if echo ${2} | grep \"errors\"; then\n    echo \"ERROR: unable to retrieve ${1}: ${2}\"\n    exit 1\n  fi\n  if  [ \"$3\" == \"LOOKUPSECRETRESPONSE\" ]\n  then\n    http_code=$(curl -sS -o /dev/null -w \"%{http_code}\" \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key})\n    curl_response=$?\n    if test \"$http_code\" != \"200\" ; then\n        echo \"Http response code from Vault - $http_code\"\n        if test \"$curl_response\" != \"0\"; then\n           echo \"Error: curl command failed with error code - $curl_response\"\n           exit 1\n        fi\n    fi\n  fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')\nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nvault_secret_key=\"${VAULT_ORDERER_SECRET_PREFIX}/tls\"\necho \"Getting Orderer TLS certificates from Vault using key $vault_secret_key\"\n\nOUTPUT_PATH=\"${MOUNT_PATH}/orderer/tls\"\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\n\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\n\nTLS_CA_CERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"ca.crt\"]')\n\nmkdir -p ${OUTPUT_PATH}\necho \"${TLS_CA_CERT}\" >> ${OUTPUT_PATH}/ca.crt\n\nvault_secret_key=\"${VAULT_PEER_SECRET_PREFIX}/msp\"\necho \"Getting MSP certificates from Vault using key $vault_secret_key\"\n\nOUTPUT_PATH=\"${MOUNT_PATH}/admin/msp\"\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\n\nADMINCERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"admincerts\"]')\nCACERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"cacerts\"]')\nKEYSTORE=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"keystore\"]')\nSIGNCERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"signcerts\"]')\nTLSCACERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"tlscacerts\"]')\n\nmkdir -p ${OUTPUT_PATH}/admincerts\nmkdir -p ${OUTPUT_PATH}/cacerts\nmkdir -p ${OUTPUT_PATH}/keystore\nmkdir -p ${OUTPUT_PATH}/signcerts\nmkdir -p ${OUTPUT_PATH}/tlscacerts\n\necho \"${ADMINCERT}\" >> ${OUTPUT_PATH}/admincerts/admin.crt\necho \"${CACERTS}\" >> ${OUTPUT_PATH}/cacerts/ca.crt\necho \"${KEYSTORE}\" >> ${OUTPUT_PATH}/keystore/server.key\necho \"${SIGNCERTS}\" >> ${OUTPUT_PATH}/signcerts/server.crt\necho \"${TLSCACERTS}\" >> ${OUTPUT_PATH}/tlscacerts/tlsca.crt"], "command": ["sh", "-c"], "env": [{"name": "VAULT_ADDR", "value": "http://20.197.63.209:8200"}, {"name": "KUBERNETES_AUTH_PATH", "value": "devcarrier-net-auth"}, {"name": "VAULT_APP_ROLE", "value": "vault-role"}, {"name": "VAULT_PEER_SECRET_PREFIX", "value": "secretv2/data/crypto/peerOrganizations/carrier-net/users/admin"}, {"name": "VAULT_ORDERER_SECRET_PREFIX", "value": "secretv2/data/crypto/peerOrganizations/carrier-net/orderer"}, {"name": "MOUNT_PATH", "value": "/secret"}], "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "imagePullPolicy": "IfNotPresent", "name": "certificates-init", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/secret", "name": "certificates"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-g7kvz", "readOnly": true}]}], "nodeName": "aks-agentpool-84293659-vmss000001", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "OnFailure", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "vault-auth", "serviceAccountName": "vault-auth", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"emptyDir": {"medium": "Memory"}, "name": "certificates"}, {"name": "kube-api-access-g7kvz", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:38:18Z", "reason": "PodCompleted", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:38:15Z", "reason": "PodCompleted", "status": "False", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:38:15Z", "reason": "PodCompleted", "status": "False", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:38:15Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://3c5fa8f76a7c2daf52a9efb43dc1039aa0ce8fe6d0394239686f6a8667eb26fc", "image": "docker.io/hyperledger/fabric-tools:2.2.2", "imageID": "docker.io/hyperledger/fabric-tools@sha256:a149d463e8679ef8ed7499b81c55539067d0989c804070fe2a6ca744ac2b692d", "lastState": {}, "name": "joinchannel", "ready": false, "restartCount": 0, "started": false, "state": {"terminated": {"containerID": "containerd://3c5fa8f76a7c2daf52a9efb43dc1039aa0ce8fe6d0394239686f6a8667eb26fc", "exitCode": 0, "finishedAt": "2022-07-17T15:38:19Z", "reason": "Completed", "startedAt": "2022-07-17T15:38:18Z"}}}], "hostIP": "10.224.0.5", "initContainerStatuses": [{"containerID": "containerd://6272d2b4ecbfc66cf3d274cfac4b6316f526bf78e51d9d33f404c6f8f2fdf883", "image": "docker.io/hyperledgerlabs/alpine-utils:1.0", "imageID": "docker.io/hyperledgerlabs/alpine-utils@sha256:cab1d1566ddaa28e482b5eeda7426791bdf607cee41e2b752ccc566553810f74", "lastState": {}, "name": "certificates-init", "ready": true, "restartCount": 0, "state": {"terminated": {"containerID": "containerd://6272d2b4ecbfc66cf3d274cfac4b6316f526bf78e51d9d33f404c6f8f2fdf883", "exitCode": 0, "finishedAt": "2022-07-17T15:38:17Z", "reason": "Completed", "startedAt": "2022-07-17T15:38:16Z"}}}], "phase": "Succeeded", "podIP": "10.244.0.37", "podIPs": [{"ip": "10.244.0.37"}], "qosClass": "BestEffort", "startTime": "2022-07-17T15:38:15Z"}}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:28
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job joinchannel-peer0-allchannel in carrier-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:42
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Restart new peer pods] ***************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/check.yaml:25
skipping: [localhost] => (item={'peer': None, 'name': 'peer0', 'gossipAddress': 'peer0.carrier-net:7051', 'peerAddress': 'peer0.carrier-net:7051'})  => {"ansible_loop_var": "peer", "changed": false, "peer": {"gossipAddress": "peer0.carrier-net:7051", "name": "peer0", "peer": null, "peerAddress": "peer0.carrier-net:7051"}, "skip_reason": "Conditional result was False"}

TASK [waiting for {{ peer.name }} to join {{ channel_name }}] ******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/check.yaml:11
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job joinchannel-peer0-allchannel in manufacturer-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:11
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2022-07-17T15:38:15Z", "generateName": "joinchannel-peer0-allchannel-", "labels": {"app": "joinchannel-peer0-allchannel", "app.kubernetes.io/instance": "joinchannel-peer0-join-allchannel-manufacturer-peer0", "app.kubernetes.io/managed-by": "Helm", "app.kubernetes.io/name": "joinchannel-peer0-allchannel", "controller-uid": "169d1e86-7f90-40d1-97bb-e1d5df9a0e07", "helm.sh/chart": "join_channel-0.2.0", "job-name": "joinchannel-peer0-allchannel"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:app": {}, "f:app.kubernetes.io/instance": {}, "f:app.kubernetes.io/managed-by": {}, "f:app.kubernetes.io/name": {}, "f:controller-uid": {}, "f:helm.sh/chart": {}, "f:job-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"169d1e86-7f90-40d1-97bb-e1d5df9a0e07\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {"f:containers": {"k:{\"name\":\"joinchannel\"}": {".": {}, "f:args": {}, "f:command": {}, "f:envFrom": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:stdin": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:tty": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/opt/gopath/src/github.com/hyperledger/fabric/crypto\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}}, "f:workingDir": {}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:imagePullSecrets": {".": {}, "k:{\"name\":\"regcred\"}": {".": {}, "f:name": {}}}, "f:initContainers": {".": {}, "k:{\"name\":\"certificates-init\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"KUBERNETES_AUTH_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"MOUNT_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ADDR\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_APP_ROLE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ORDERER_SECRET_PREFIX\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_PEER_SECRET_PREFIX\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/secret\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"certificates\"}": {".": {}, "f:emptyDir": {".": {}, "f:medium": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T15:38:15Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:initContainerStatuses": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.36\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "time": "2022-07-17T15:38:19Z"}], "name": "joinchannel-peer0-allchannel-sz75z", "namespace": "manufacturer-net", "ownerReferences": [{"apiVersion": "batch/v1", "blockOwnerDeletion": true, "controller": true, "kind": "Job", "name": "joinchannel-peer0-allchannel", "uid": "169d1e86-7f90-40d1-97bb-e1d5df9a0e07"}], "resourceVersion": "77788", "uid": "7d4510f4-33c5-4608-9d1d-7698eb8ca3f0"}, "spec": {"containers": [{"args": ["#!/usr/bin/env sh\necho \"Joining Channel ${CHANNEL_NAME}\"\ntls_status=${CORE_PEER_TLS_ENABLED}\nif [ \"$tls_status\" = \"true\" ]\nthen\n  peer channel fetch 0 ${CHANNEL_NAME}.block -o ${ORDERER_URL} -c ${CHANNEL_NAME} --tls --cafile ${ORDERER_CA}\nelse\n  peer channel fetch 0 ${CHANNEL_NAME}.block -o ${ORDERER_URL} -c ${CHANNEL_NAME} \nfi\nCHANNEL_JOIN=$(peer channel list 2>/dev/null)\necho $CHANNEL_JOIN | grep -q ${CHANNEL_NAME}\nif [ $? = 1 ]\nthen\npeer channel join -b ${CHANNEL_NAME}.block\nelse\necho \"Peer has already joined the channel\"\nfi"], "command": ["sh", "-c"], "envFrom": [{"configMapRef": {"name": "joinchannel-allchannel-peer0-config"}}], "image": "hyperledger/fabric-tools:2.2.2", "imagePullPolicy": "IfNotPresent", "name": "joinchannel", "resources": {}, "stdin": true, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "tty": true, "volumeMounts": [{"mountPath": "/opt/gopath/src/github.com/hyperledger/fabric/crypto", "name": "certificates", "readOnly": true}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-7mvsq", "readOnly": true}], "workingDir": "/opt/gopath/src/github.com/hyperledger/fabric/peer"}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "imagePullSecrets": [{"name": "regcred"}], "initContainers": [{"args": ["#!/usr/bin/env sh\nvalidateVaultResponse () {\n  if echo ${2} | grep \"errors\"; then\n    echo \"ERROR: unable to retrieve ${1}: ${2}\"\n    exit 1\n  fi\n  if  [ \"$3\" == \"LOOKUPSECRETRESPONSE\" ]\n  then\n    http_code=$(curl -sS -o /dev/null -w \"%{http_code}\" \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key})\n    curl_response=$?\n    if test \"$http_code\" != \"200\" ; then\n        echo \"Http response code from Vault - $http_code\"\n        if test \"$curl_response\" != \"0\"; then\n           echo \"Error: curl command failed with error code - $curl_response\"\n           exit 1\n        fi\n    fi\n  fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')\nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nvault_secret_key=\"${VAULT_ORDERER_SECRET_PREFIX}/tls\"\necho \"Getting Orderer TLS certificates from Vault using key $vault_secret_key\"\n\nOUTPUT_PATH=\"${MOUNT_PATH}/orderer/tls\"\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\n\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\n\nTLS_CA_CERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"ca.crt\"]')\n\nmkdir -p ${OUTPUT_PATH}\necho \"${TLS_CA_CERT}\" >> ${OUTPUT_PATH}/ca.crt\n\nvault_secret_key=\"${VAULT_PEER_SECRET_PREFIX}/msp\"\necho \"Getting MSP certificates from Vault using key $vault_secret_key\"\n\nOUTPUT_PATH=\"${MOUNT_PATH}/admin/msp\"\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\n\nADMINCERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"admincerts\"]')\nCACERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"cacerts\"]')\nKEYSTORE=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"keystore\"]')\nSIGNCERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"signcerts\"]')\nTLSCACERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"tlscacerts\"]')\n\nmkdir -p ${OUTPUT_PATH}/admincerts\nmkdir -p ${OUTPUT_PATH}/cacerts\nmkdir -p ${OUTPUT_PATH}/keystore\nmkdir -p ${OUTPUT_PATH}/signcerts\nmkdir -p ${OUTPUT_PATH}/tlscacerts\n\necho \"${ADMINCERT}\" >> ${OUTPUT_PATH}/admincerts/admin.crt\necho \"${CACERTS}\" >> ${OUTPUT_PATH}/cacerts/ca.crt\necho \"${KEYSTORE}\" >> ${OUTPUT_PATH}/keystore/server.key\necho \"${SIGNCERTS}\" >> ${OUTPUT_PATH}/signcerts/server.crt\necho \"${TLSCACERTS}\" >> ${OUTPUT_PATH}/tlscacerts/tlsca.crt"], "command": ["sh", "-c"], "env": [{"name": "VAULT_ADDR", "value": "http://20.197.63.209:8200"}, {"name": "KUBERNETES_AUTH_PATH", "value": "devmanufacturer-net-auth"}, {"name": "VAULT_APP_ROLE", "value": "vault-role"}, {"name": "VAULT_PEER_SECRET_PREFIX", "value": "secretv2/data/crypto/peerOrganizations/manufacturer-net/users/admin"}, {"name": "VAULT_ORDERER_SECRET_PREFIX", "value": "secretv2/data/crypto/peerOrganizations/manufacturer-net/orderer"}, {"name": "MOUNT_PATH", "value": "/secret"}], "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "imagePullPolicy": "IfNotPresent", "name": "certificates-init", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/secret", "name": "certificates"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-7mvsq", "readOnly": true}]}], "nodeName": "aks-agentpool-84293659-vmss000001", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "OnFailure", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "vault-auth", "serviceAccountName": "vault-auth", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"emptyDir": {"medium": "Memory"}, "name": "certificates"}, {"name": "kube-api-access-7mvsq", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:38:18Z", "reason": "PodCompleted", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:38:15Z", "reason": "PodCompleted", "status": "False", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:38:15Z", "reason": "PodCompleted", "status": "False", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:38:15Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://ff5fa372f0c4df74c6f9001a969746f796342db58f1b82dca96572c2a6193ea0", "image": "docker.io/hyperledger/fabric-tools:2.2.2", "imageID": "docker.io/hyperledger/fabric-tools@sha256:a149d463e8679ef8ed7499b81c55539067d0989c804070fe2a6ca744ac2b692d", "lastState": {}, "name": "joinchannel", "ready": false, "restartCount": 0, "started": false, "state": {"terminated": {"containerID": "containerd://ff5fa372f0c4df74c6f9001a969746f796342db58f1b82dca96572c2a6193ea0", "exitCode": 0, "finishedAt": "2022-07-17T15:38:19Z", "reason": "Completed", "startedAt": "2022-07-17T15:38:18Z"}}}], "hostIP": "10.224.0.5", "initContainerStatuses": [{"containerID": "containerd://5c835ae582545be65d0c02923e452bc947f06a8a0b0ea1848b6977bb4132e259", "image": "docker.io/hyperledgerlabs/alpine-utils:1.0", "imageID": "docker.io/hyperledgerlabs/alpine-utils@sha256:cab1d1566ddaa28e482b5eeda7426791bdf607cee41e2b752ccc566553810f74", "lastState": {}, "name": "certificates-init", "ready": true, "restartCount": 0, "state": {"terminated": {"containerID": "containerd://5c835ae582545be65d0c02923e452bc947f06a8a0b0ea1848b6977bb4132e259", "exitCode": 0, "finishedAt": "2022-07-17T15:38:17Z", "reason": "Completed", "startedAt": "2022-07-17T15:38:17Z"}}}], "phase": "Succeeded", "podIP": "10.244.0.36", "podIPs": [{"ip": "10.244.0.36"}], "qosClass": "BestEffort", "startTime": "2022-07-17T15:38:15Z"}}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:28
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job joinchannel-peer0-allchannel in manufacturer-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:42
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Restart new peer pods] ***************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/channels_join/tasks/check.yaml:25
skipping: [localhost] => (item={'peer': None, 'name': 'peer0', 'gossipAddress': 'peer0.manufacturer-net:7051', 'peerAddress': 'peer0.manufacturer-net:7051'})  => {"ansible_loop_var": "peer", "changed": false, "peer": {"gossipAddress": "peer0.manufacturer-net:7051", "name": "peer0", "peer": null, "peerAddress": "peer0.manufacturer-net:7051"}, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Create all anchor-peer jobs] *********************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:218

TASK [create/anchorpeer : Call nested_anchorpeer for each organization] ********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/anchorpeer/tasks/main.yaml:10
included: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/anchorpeer/tasks/nested_anchorpeer.yaml for localhost => (item=(censored due to no_log))
included: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/anchorpeer/tasks/nested_anchorpeer.yaml for localhost => (item=(censored due to no_log))

TASK [Waiting for {{ peer.name }} to join channel {{ channel_name }}] **********
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/anchorpeer/tasks/nested_anchorpeer.yaml:11
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job joinchannel-peer0-allchannel in carrier-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:11
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
ok: [localhost] => {"api_found": true, "attempts": 1, "changed": false, "resources": [{"apiVersion": "v1", "kind": "Pod", "metadata": {"creationTimestamp": "2022-07-17T15:38:15Z", "generateName": "joinchannel-peer0-allchannel-", "labels": {"app": "joinchannel-peer0-allchannel", "app.kubernetes.io/instance": "joinchannel-peer0-join-allchannel-carrier-peer0", "app.kubernetes.io/managed-by": "Helm", "app.kubernetes.io/name": "joinchannel-peer0-allchannel", "controller-uid": "ca955eab-7c2f-465b-8360-d597400eb6be", "helm.sh/chart": "join_channel-0.2.0", "job-name": "joinchannel-peer0-allchannel"}, "managedFields": [{"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:app": {}, "f:app.kubernetes.io/instance": {}, "f:app.kubernetes.io/managed-by": {}, "f:app.kubernetes.io/name": {}, "f:controller-uid": {}, "f:helm.sh/chart": {}, "f:job-name": {}}, "f:ownerReferences": {".": {}, "k:{\"uid\":\"ca955eab-7c2f-465b-8360-d597400eb6be\"}": {".": {}, "f:apiVersion": {}, "f:blockOwnerDeletion": {}, "f:controller": {}, "f:kind": {}, "f:name": {}, "f:uid": {}}}}, "f:spec": {"f:containers": {"k:{\"name\":\"joinchannel\"}": {".": {}, "f:args": {}, "f:command": {}, "f:envFrom": {}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:stdin": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:tty": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/opt/gopath/src/github.com/hyperledger/fabric/crypto\"}": {".": {}, "f:mountPath": {}, "f:name": {}, "f:readOnly": {}}}, "f:workingDir": {}}}, "f:dnsPolicy": {}, "f:enableServiceLinks": {}, "f:imagePullSecrets": {".": {}, "k:{\"name\":\"regcred\"}": {".": {}, "f:name": {}}}, "f:initContainers": {".": {}, "k:{\"name\":\"certificates-init\"}": {".": {}, "f:args": {}, "f:command": {}, "f:env": {".": {}, "k:{\"name\":\"KUBERNETES_AUTH_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"MOUNT_PATH\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ADDR\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_APP_ROLE\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_ORDERER_SECRET_PREFIX\"}": {".": {}, "f:name": {}, "f:value": {}}, "k:{\"name\":\"VAULT_PEER_SECRET_PREFIX\"}": {".": {}, "f:name": {}, "f:value": {}}}, "f:image": {}, "f:imagePullPolicy": {}, "f:name": {}, "f:resources": {}, "f:terminationMessagePath": {}, "f:terminationMessagePolicy": {}, "f:volumeMounts": {".": {}, "k:{\"mountPath\":\"/secret\"}": {".": {}, "f:mountPath": {}, "f:name": {}}}}}, "f:restartPolicy": {}, "f:schedulerName": {}, "f:securityContext": {}, "f:serviceAccount": {}, "f:serviceAccountName": {}, "f:terminationGracePeriodSeconds": {}, "f:volumes": {".": {}, "k:{\"name\":\"certificates\"}": {".": {}, "f:emptyDir": {".": {}, "f:medium": {}}, "f:name": {}}}}}, "manager": "kube-controller-manager", "operation": "Update", "time": "2022-07-17T15:38:15Z"}, {"apiVersion": "v1", "fieldsType": "FieldsV1", "fieldsV1": {"f:status": {"f:conditions": {"k:{\"type\":\"ContainersReady\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Initialized\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}, "k:{\"type\":\"Ready\"}": {".": {}, "f:lastProbeTime": {}, "f:lastTransitionTime": {}, "f:reason": {}, "f:status": {}, "f:type": {}}}, "f:containerStatuses": {}, "f:hostIP": {}, "f:initContainerStatuses": {}, "f:phase": {}, "f:podIP": {}, "f:podIPs": {".": {}, "k:{\"ip\":\"10.244.0.37\"}": {".": {}, "f:ip": {}}}, "f:startTime": {}}}, "manager": "kubelet", "operation": "Update", "time": "2022-07-17T15:38:19Z"}], "name": "joinchannel-peer0-allchannel-fqpdf", "namespace": "carrier-net", "ownerReferences": [{"apiVersion": "batch/v1", "blockOwnerDeletion": true, "controller": true, "kind": "Job", "name": "joinchannel-peer0-allchannel", "uid": "ca955eab-7c2f-465b-8360-d597400eb6be"}], "resourceVersion": "77786", "uid": "53db70dc-a6f4-4500-8da5-5fe18dc18b53"}, "spec": {"containers": [{"args": ["#!/usr/bin/env sh\necho \"Joining Channel ${CHANNEL_NAME}\"\ntls_status=${CORE_PEER_TLS_ENABLED}\nif [ \"$tls_status\" = \"true\" ]\nthen\n  peer channel fetch 0 ${CHANNEL_NAME}.block -o ${ORDERER_URL} -c ${CHANNEL_NAME} --tls --cafile ${ORDERER_CA}\nelse\n  peer channel fetch 0 ${CHANNEL_NAME}.block -o ${ORDERER_URL} -c ${CHANNEL_NAME} \nfi\nCHANNEL_JOIN=$(peer channel list 2>/dev/null)\necho $CHANNEL_JOIN | grep -q ${CHANNEL_NAME}\nif [ $? = 1 ]\nthen\npeer channel join -b ${CHANNEL_NAME}.block\nelse\necho \"Peer has already joined the channel\"\nfi"], "command": ["sh", "-c"], "envFrom": [{"configMapRef": {"name": "joinchannel-allchannel-peer0-config"}}], "image": "hyperledger/fabric-tools:2.2.2", "imagePullPolicy": "IfNotPresent", "name": "joinchannel", "resources": {}, "stdin": true, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "tty": true, "volumeMounts": [{"mountPath": "/opt/gopath/src/github.com/hyperledger/fabric/crypto", "name": "certificates", "readOnly": true}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-g7kvz", "readOnly": true}], "workingDir": "/opt/gopath/src/github.com/hyperledger/fabric/peer"}], "dnsPolicy": "ClusterFirst", "enableServiceLinks": true, "imagePullSecrets": [{"name": "regcred"}], "initContainers": [{"args": ["#!/usr/bin/env sh\nvalidateVaultResponse () {\n  if echo ${2} | grep \"errors\"; then\n    echo \"ERROR: unable to retrieve ${1}: ${2}\"\n    exit 1\n  fi\n  if  [ \"$3\" == \"LOOKUPSECRETRESPONSE\" ]\n  then\n    http_code=$(curl -sS -o /dev/null -w \"%{http_code}\" \\\n    --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" \\\n    ${VAULT_ADDR}/v1/${vault_secret_key})\n    curl_response=$?\n    if test \"$http_code\" != \"200\" ; then\n        echo \"Http response code from Vault - $http_code\"\n        if test \"$curl_response\" != \"0\"; then\n           echo \"Error: curl command failed with error code - $curl_response\"\n           exit 1\n        fi\n    fi\n  fi\n}\n\nKUBE_SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\necho \"Getting secrets from Vault Server: ${VAULT_ADDR}\"\n# Login to Vault and so I can get an approle token\nVAULT_CLIENT_TOKEN=$(curl -sS --request POST ${VAULT_ADDR}/v1/auth/${KUBERNETES_AUTH_PATH}/login \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"role\":\"'\"${VAULT_APP_ROLE}\"'\",\"jwt\":\"'\"${KUBE_SA_TOKEN}\"'\"}' | \\\n  jq -r 'if .errors then . else .auth.client_token end')\nvalidateVaultResponse 'vault login token' \"${VAULT_CLIENT_TOKEN}\"\n\nvault_secret_key=\"${VAULT_ORDERER_SECRET_PREFIX}/tls\"\necho \"Getting Orderer TLS certificates from Vault using key $vault_secret_key\"\n\nOUTPUT_PATH=\"${MOUNT_PATH}/orderer/tls\"\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\n\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\n\nTLS_CA_CERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"ca.crt\"]')\n\nmkdir -p ${OUTPUT_PATH}\necho \"${TLS_CA_CERT}\" >> ${OUTPUT_PATH}/ca.crt\n\nvault_secret_key=\"${VAULT_PEER_SECRET_PREFIX}/msp\"\necho \"Getting MSP certificates from Vault using key $vault_secret_key\"\n\nOUTPUT_PATH=\"${MOUNT_PATH}/admin/msp\"\nLOOKUP_SECRET_RESPONSE=$(curl -sS --header \"X-Vault-Token: ${VAULT_CLIENT_TOKEN}\" ${VAULT_ADDR}/v1/${vault_secret_key} | jq -r 'if .errors then . else . end')\nvalidateVaultResponse \"secret (${vault_secret_key})\" \"${LOOKUP_SECRET_RESPONSE}\" \"LOOKUPSECRETRESPONSE\"\n\nADMINCERT=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"admincerts\"]')\nCACERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"cacerts\"]')\nKEYSTORE=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"keystore\"]')\nSIGNCERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"signcerts\"]')\nTLSCACERTS=$(echo ${LOOKUP_SECRET_RESPONSE} | jq -r '.data.data[\"tlscacerts\"]')\n\nmkdir -p ${OUTPUT_PATH}/admincerts\nmkdir -p ${OUTPUT_PATH}/cacerts\nmkdir -p ${OUTPUT_PATH}/keystore\nmkdir -p ${OUTPUT_PATH}/signcerts\nmkdir -p ${OUTPUT_PATH}/tlscacerts\n\necho \"${ADMINCERT}\" >> ${OUTPUT_PATH}/admincerts/admin.crt\necho \"${CACERTS}\" >> ${OUTPUT_PATH}/cacerts/ca.crt\necho \"${KEYSTORE}\" >> ${OUTPUT_PATH}/keystore/server.key\necho \"${SIGNCERTS}\" >> ${OUTPUT_PATH}/signcerts/server.crt\necho \"${TLSCACERTS}\" >> ${OUTPUT_PATH}/tlscacerts/tlsca.crt"], "command": ["sh", "-c"], "env": [{"name": "VAULT_ADDR", "value": "http://20.197.63.209:8200"}, {"name": "KUBERNETES_AUTH_PATH", "value": "devcarrier-net-auth"}, {"name": "VAULT_APP_ROLE", "value": "vault-role"}, {"name": "VAULT_PEER_SECRET_PREFIX", "value": "secretv2/data/crypto/peerOrganizations/carrier-net/users/admin"}, {"name": "VAULT_ORDERER_SECRET_PREFIX", "value": "secretv2/data/crypto/peerOrganizations/carrier-net/orderer"}, {"name": "MOUNT_PATH", "value": "/secret"}], "image": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "imagePullPolicy": "IfNotPresent", "name": "certificates-init", "resources": {}, "terminationMessagePath": "/dev/termination-log", "terminationMessagePolicy": "File", "volumeMounts": [{"mountPath": "/secret", "name": "certificates"}, {"mountPath": "/var/run/secrets/kubernetes.io/serviceaccount", "name": "kube-api-access-g7kvz", "readOnly": true}]}], "nodeName": "aks-agentpool-84293659-vmss000001", "preemptionPolicy": "PreemptLowerPriority", "priority": 0, "restartPolicy": "OnFailure", "schedulerName": "default-scheduler", "securityContext": {}, "serviceAccount": "vault-auth", "serviceAccountName": "vault-auth", "terminationGracePeriodSeconds": 30, "tolerations": [{"effect": "NoExecute", "key": "node.kubernetes.io/not-ready", "operator": "Exists", "tolerationSeconds": 300}, {"effect": "NoExecute", "key": "node.kubernetes.io/unreachable", "operator": "Exists", "tolerationSeconds": 300}], "volumes": [{"emptyDir": {"medium": "Memory"}, "name": "certificates"}, {"name": "kube-api-access-g7kvz", "projected": {"defaultMode": 420, "sources": [{"serviceAccountToken": {"expirationSeconds": 3607, "path": "token"}}, {"configMap": {"items": [{"key": "ca.crt", "path": "ca.crt"}], "name": "kube-root-ca.crt"}}, {"downwardAPI": {"items": [{"fieldRef": {"apiVersion": "v1", "fieldPath": "metadata.namespace"}, "path": "namespace"}]}}]}}]}, "status": {"conditions": [{"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:38:18Z", "reason": "PodCompleted", "status": "True", "type": "Initialized"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:38:15Z", "reason": "PodCompleted", "status": "False", "type": "Ready"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:38:15Z", "reason": "PodCompleted", "status": "False", "type": "ContainersReady"}, {"lastProbeTime": null, "lastTransitionTime": "2022-07-17T15:38:15Z", "status": "True", "type": "PodScheduled"}], "containerStatuses": [{"containerID": "containerd://3c5fa8f76a7c2daf52a9efb43dc1039aa0ce8fe6d0394239686f6a8667eb26fc", "image": "docker.io/hyperledger/fabric-tools:2.2.2", "imageID": "docker.io/hyperledger/fabric-tools@sha256:a149d463e8679ef8ed7499b81c55539067d0989c804070fe2a6ca744ac2b692d", "lastState": {}, "name": "joinchannel", "ready": false, "restartCount": 0, "started": false, "state": {"terminated": {"containerID": "containerd://3c5fa8f76a7c2daf52a9efb43dc1039aa0ce8fe6d0394239686f6a8667eb26fc", "exitCode": 0, "finishedAt": "2022-07-17T15:38:19Z", "reason": "Completed", "startedAt": "2022-07-17T15:38:18Z"}}}], "hostIP": "10.224.0.5", "initContainerStatuses": [{"containerID": "containerd://6272d2b4ecbfc66cf3d274cfac4b6316f526bf78e51d9d33f404c6f8f2fdf883", "image": "docker.io/hyperledgerlabs/alpine-utils:1.0", "imageID": "docker.io/hyperledgerlabs/alpine-utils@sha256:cab1d1566ddaa28e482b5eeda7426791bdf607cee41e2b752ccc566553810f74", "lastState": {}, "name": "certificates-init", "ready": true, "restartCount": 0, "state": {"terminated": {"containerID": "containerd://6272d2b4ecbfc66cf3d274cfac4b6316f526bf78e51d9d33f404c6f8f2fdf883", "exitCode": 0, "finishedAt": "2022-07-17T15:38:17Z", "reason": "Completed", "startedAt": "2022-07-17T15:38:16Z"}}}], "phase": "Succeeded", "podIP": "10.244.0.37", "podIPs": [{"ip": "10.244.0.37"}], "qosClass": "BestEffort", "startTime": "2022-07-17T15:38:15Z"}}]}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Check for {{ job_title }} job on {{ component_name }}] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:28
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/check/helm_component : Wait for Job joinchannel-peer0-allchannel in carrier-net] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/helm_component/tasks/main.yaml:42
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [Creating value file of anchor peer for allchannel] ***********************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/anchorpeer/tasks/nested_anchorpeer.yaml:24

TASK [helm_component : Ensures /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier dir exists] ***
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:14
ok: [localhost] => {"changed": false, "gid": 0, "group": "root", "mode": "0755", "owner": "root", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier", "size": 4096, "state": "directory", "uid": 0}

TASK [helm_component : create value file for anchorpeer-allchannel-carrier] ****
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:23
changed: [localhost] => {"changed": true, "checksum": "a0f873a9ff718e49b5ad6635ff44866a00c5fe0e", "dest": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/anchorpeer-allchannel-carrier.yaml", "gid": 0, "group": "root", "md5sum": "b5906e7c5031341516e206900d22dc96", "mode": "0644", "owner": "root", "size": 1619, "src": "/root/.ansible/tmp/ansible-tmp-1658074772.884787-40660-14186228900076/source", "state": "file", "uid": 0}

TASK [Helm lint] ***************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/helm_component/tasks/main.yaml:32

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Check if value file exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:16
ok: [localhost] => {"changed": false, "stat": {"atime": 1658074773.5686452, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "checksum": "a0f873a9ff718e49b5ad6635ff44866a00c5fe0e", "ctime": 1658074773.5726452, "dev": 64513, "device_type": 0, "executable": false, "exists": true, "gid": 0, "gr_name": "root", "inode": 3627599, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0644", "mtime": 1658074773.2766466, "nlink": 1, "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/releases/dev/carrier/carrier/anchorpeer-allchannel-carrier.yaml", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 1619, "uid": 0, "version": "3754387347", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}

TASK [Check or create test directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:22

TASK [../../shared/configuration/roles/check/setup : check if dir exists or not] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "stat": {"atime": 1658074423.378228, "attr_flags": "e", "attributes": ["extents"], "block_size": 4096, "blocks": 8, "charset": "unknown", "ctime": 1658074761.6086974, "dev": 64513, "device_type": 0, "executable": true, "exists": true, "gid": 0, "gr_name": "root", "inode": 3626754, "isblk": false, "ischr": false, "isdir": true, "isfifo": false, "isgid": false, "islnk": false, "isreg": false, "issock": false, "isuid": false, "mimetype": "unknown", "mode": "0755", "mtime": 1658074761.6086974, "nlink": 2, "path": "./build/test", "pw_name": "root", "readable": true, "rgrp": true, "roth": true, "rusr": true, "size": 4096, "uid": 0, "version": "4197237393", "wgrp": false, "woth": false, "writeable": true, "wusr": true, "xgrp": true, "xoth": true, "xusr": true}}

TASK [../../shared/configuration/roles/check/setup : Ensures dir exists] *******
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check if policy exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check docker cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : Check git https cred exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}

TASK [../../shared/configuration/roles/check/setup : check if certs exists in vault.] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}
META: role_complete for localhost

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Load file into memory] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:31
ok: [localhost] => {"ansible_facts": {"apiVersion": "helm.fluxcd.io/v1", "kind": "HelmRelease", "metadata": {"annotations": {"fluxcd.io/automated": "false"}, "name": "anchorpeer-allchannel-carrier", "namespace": "carrier-net"}, "spec": {"chart": {"git": "ssh://git@github.com/adityajoshi12/bevel.git", "path": "platforms/hyperledger-fabric/charts/anchorpeer", "ref": "test"}, "releaseName": "anchorpeer-allchannel-carrier", "values": {"anchorstx": "CrcCChgKFggCGgYIz+zQlgYiCmFsbGNoYW5uZWwSmgIKlwIKCmFsbGNoYW5uZWwSYxJhCgtBcHBs\naWNhdGlvbhJSCAESTgoKY2Fycmllck1TUBJAGgcKA01TUBIAIg8KC0VuZG9yc2VtZW50EgAiCwoH\nUmVhZGVycxIAIgsKB1dyaXRlcnMSACIKCgZBZG1pbnMSABqjARKgAQoLQXBwbGljYXRpb24SkAEI\nARKLAQoKY2Fycmllck1TUBJ9CAEaMQoLQW5jaG9yUGVlcnMSIhIYChYKEXBlZXIwLmNhcnJpZXIt\nbmV0EIs3GgZBZG1pbnMaBwoDTVNQEgAiDwoLRW5kb3JzZW1lbnQSACILCgdSZWFkZXJzEgAiCwoH\nV3JpdGVycxIAIgoKBkFkbWlucxIAKgZBZG1pbnM=", "channel": {"name": "allchannel"}, "metadata": {"images": {"alpineutils": "index.docker.io/hyperledgerlabs/alpine-utils:1.0", "fabrictools": "hyperledger/fabric-tools:2.2.2"}, "namespace": "carrier-net"}, "orderer": {"address": "orderer1.supplychain-net:7050"}, "peer": {"address": "peer0.carrier-net:7051", "localmspid": "carrierMSP", "loglevel": "debug", "name": "peer0", "tlsstatus": true}, "vault": {"address": "http://20.197.63.209:8200", "adminsecretprefix": "secretv2/data/crypto/peerOrganizations/carrier-net/users/admin", "authpath": "devcarrier-net-auth", "imagesecretname": "regcred", "orderersecretprefix": "secretv2/data/crypto/peerOrganizations/carrier-net/orderer", "role": "vault-role", "serviceaccountname": "vault-auth"}}}}, "ansible_included_var_files": ["/home/bevel/platforms/hyperledger-fabric/releases/dev/carrier/carrier/anchorpeer-allchannel-carrier.yaml"], "changed": false}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Create value file] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:36
ok: [localhost] => {"changed": false, "checksum": "fba4ec1ac1a603f0290d7ccacfb7211917a1298c", "dest": "./build/test/anchorpeer-allchannel-carrier.yaml", "gid": 0, "group": "root", "md5sum": "939021430386485fed9452bf59c6f3cc", "mode": "0644", "owner": "root", "size": 1177, "src": "/root/.ansible/tmp/ansible-tmp-1658074775.3643367-40772-43727318732167/source", "state": "file", "uid": 0}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/helm_lint : Run helm lint] ***
task path: /home/bevel/platforms/shared/configuration/roles/helm_lint/tasks/main.yaml:42
changed: [localhost] => {"changed": true, "cmd": "helm lint -f \"./build/test/anchorpeer-allchannel-carrier.yaml\" \"/home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/anchorpeer\"\n", "delta": "0:00:00.103508", "end": "2022-07-17 16:19:36.456555", "msg": "", "rc": 0, "start": "2022-07-17 16:19:36.353047", "stderr": "", "stderr_lines": [], "stdout": "==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/anchorpeer\n[INFO] Chart.yaml: icon is recommended\n\n1 chart(s) linted, 0 chart(s) failed", "stdout_lines": ["==> Linting /home/bevel/platforms/hyperledger-fabric/configuration/../../../platforms/hyperledger-fabric/charts/anchorpeer", "[INFO] Chart.yaml: icon is recommended", "", "1 chart(s) linted, 0 chart(s) failed"]}
META: role_complete for localhost
META: role_complete for localhost

TASK [Git Push] ****************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/roles/create/anchorpeer/tasks/nested_anchorpeer.yaml:46

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/hyperledger-fabric/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
ok: [localhost] => {"changed": false, "gid": 1000, "group": "1000", "mode": "0777", "owner": "1000", "path": "/home/bevel/platforms/hyperledger-fabric/configuration/../../../", "size": 4096, "state": "directory", "uid": 1000}

TASK [/home/bevel/platforms/hyperledger-fabric/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
